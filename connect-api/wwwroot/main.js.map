{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/components/user/profile/user-profile.component.ts","./src/app/components/user/profile/user-profile.component.html","./src/app/components/consultant-list/consultant-list.component.ts","./src/app/components/consultant-list/consultant-list.component.html","./src/environments/environment.replit.ts","./src/app/app-routing.module.ts","./src/app/components/auth/login/login.component.ts","./src/app/components/auth/login/login.component.html","./src/app/services/api.service.ts","./src/app/services/modal.service.ts","./src/app/app.module.ts","./src/main.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/services/auth.service.ts","./src/app/services/consultant.service.ts","./src/app/services/auth.interceptor.ts","./src/app/app.component.debug.ts","./src/app/guards/auth.guard.ts","./src/app/components/consultant-card/consultant-card.component.ts","./src/app/components/consultant-card/consultant-card.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../../../services/auth.service';\nimport { User } from '../../../models/user.model';\n\n@Component({\n  selector: 'app-user-profile',\n  templateUrl: './user-profile.component.html',\n  styleUrls: ['./user-profile.component.css'],\n  standalone: true,\n  imports: [CommonModule, FormsModule, ReactiveFormsModule]\n})\nexport class UserProfileComponent implements OnInit {\n  currentUser: User | null = null;\n  profileForm!: FormGroup;\n  isEditing = false;\n  isLoading = false;\n  errorMessage: string | null = null;\n  successMessage: string | null = null;\n\n  constructor(\n    private authService: AuthService,\n    private router: Router,\n    private fb: FormBuilder\n  ) { }\n\n  ngOnInit(): void {\n    // Vérifier si l'utilisateur est connecté\n    if (!this.authService.isAuthenticated) {\n      this.router.navigate(['/login']);\n      return;\n    }\n\n    // Récupérer l'utilisateur actuel\n    this.currentUser = this.authService.currentUser;\n    \n    // Initialiser le formulaire avec les données actuelles\n    this.initializeForm();\n  }\n\n  initializeForm(): void {\n    if (!this.currentUser) return;\n\n    this.profileForm = this.fb.group({\n      firstName: [this.currentUser.firstName || '', [Validators.required]],\n      lastName: [this.currentUser.lastName || '', [Validators.required]],\n      email: [this.currentUser.email, [Validators.required, Validators.email]]\n      // D'autres champs pourront être ajoutés par la suite\n    });\n\n    // Désactiver le formulaire par défaut (mode lecture seule)\n    this.profileForm.disable();\n  }\n\n  // Activer le mode édition\n  enableEditMode(): void {\n    this.isEditing = true;\n    this.profileForm.enable();\n  }\n\n  // Annuler les modifications\n  cancelEdit(): void {\n    this.isEditing = false;\n    this.initializeForm(); // Réinitialiser le formulaire avec les valeurs d'origine\n    this.profileForm.disable();\n    this.errorMessage = null;\n    this.successMessage = null;\n  }\n\n  // Soumettre les modifications\n  onSubmit(): void {\n    if (this.profileForm.invalid) {\n      return;\n    }\n\n    this.isLoading = true;\n    this.errorMessage = null;\n    this.successMessage = null;\n\n    // En environnement de développement, simuler un appel API\n    setTimeout(() => {\n      // Simuler une mise à jour réussie\n      if (this.currentUser) {\n        this.currentUser = {\n          ...this.currentUser,\n          firstName: this.profileForm.value.firstName,\n          lastName: this.profileForm.value.lastName,\n          email: this.profileForm.value.email\n        };\n      }\n      \n      this.isLoading = false;\n      this.isEditing = false;\n      this.profileForm.disable();\n      this.successMessage = 'Profil mis à jour avec succès!';\n    }, 1000);\n\n    // Dans un environnement réel, nous enverrions les données à l'API\n    /*\n    this.userService.updateProfile(this.profileForm.value).subscribe({\n      next: (updatedUser) => {\n        this.currentUser = updatedUser;\n        this.isLoading = false;\n        this.isEditing = false;\n        this.profileForm.disable();\n        this.successMessage = 'Profil mis à jour avec succès!';\n      },\n      error: (error) => {\n        this.isLoading = false;\n        this.errorMessage = 'Une erreur est survenue lors de la mise à jour du profil.';\n        console.error('Erreur lors de la mise à jour du profil:', error);\n      }\n    });\n    */\n  }\n}","<div class=\"flex flex-col h-full w-full overflow-y-auto p-6\">\n  <div *ngIf=\"!currentUser\" class=\"flex justify-center items-center h-full\">\n    <div class=\"text-center\">\n      <div class=\"text-gray-500 mb-4\">\n        <svg class=\"w-16 h-16 mx-auto\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n          <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z\"></path>\n        </svg>\n      </div>\n      <h3 class=\"text-lg font-medium text-gray-900\">Connectez-vous pour accéder à votre profil</h3>\n      <p class=\"mt-1 text-sm text-gray-500\">Vous devez être connecté pour voir votre profil.</p>\n      <div class=\"mt-6\">\n        <a routerLink=\"/login\" class=\"inline-flex items-center px-4 py-2 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\">\n          Connexion\n        </a>\n      </div>\n    </div>\n  </div>\n\n  <div *ngIf=\"currentUser\" class=\"max-w-3xl mx-auto w-full\">\n    <!-- En-tête -->\n    <div class=\"pb-5 border-b border-gray-200 sm:flex sm:items-center sm:justify-between\">\n      <h3 class=\"text-lg leading-6 font-medium text-gray-900 flex items-center\">\n        <span class=\"mr-2\">Mon Profil</span>\n        <span *ngIf=\"successMessage\" class=\"ml-3 inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-green-100 text-green-800\">\n          <svg class=\"-ml-0.5 mr-1.5 h-2 w-2 text-green-400\" fill=\"currentColor\" viewBox=\"0 0 8 8\">\n            <circle cx=\"4\" cy=\"4\" r=\"3\" />\n          </svg>\n          Mis à jour\n        </span>\n      </h3>\n      <div class=\"mt-3 sm:mt-0 sm:ml-4\">\n        <button *ngIf=\"!isEditing\" (click)=\"enableEditMode()\" type=\"button\" class=\"inline-flex items-center px-4 py-2 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\">\n          <svg class=\"-ml-1 mr-2 h-5 w-5 text-gray-500\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M15.232 5.232l3.536 3.536m-2.036-5.036a2.5 2.5 0 113.536 3.536L6.5 21.036H3v-3.572L16.732 3.732z\"></path>\n          </svg>\n          Modifier\n        </button>\n      </div>\n    </div>\n\n    <!-- Messages de notification -->\n    <div *ngIf=\"successMessage\" class=\"mt-4 p-4 rounded-md bg-green-50\">\n      <div class=\"flex\">\n        <div class=\"flex-shrink-0\">\n          <svg class=\"h-5 w-5 text-green-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\"></path>\n          </svg>\n        </div>\n        <div class=\"ml-3\">\n          <p class=\"text-sm font-medium text-green-800\">{{ successMessage }}</p>\n        </div>\n      </div>\n    </div>\n\n    <div *ngIf=\"errorMessage\" class=\"mt-4 p-4 rounded-md bg-red-50\">\n      <div class=\"flex\">\n        <div class=\"flex-shrink-0\">\n          <svg class=\"h-5 w-5 text-red-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M10 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2m7-2a9 9 0 11-18 0 9 9 0 0118 0z\"></path>\n          </svg>\n        </div>\n        <div class=\"ml-3\">\n          <p class=\"text-sm font-medium text-red-800\">{{ errorMessage }}</p>\n        </div>\n      </div>\n    </div>\n\n    <!-- Informations du profil -->\n    <div class=\"bg-white shadow overflow-hidden sm:rounded-lg mt-5\">\n      <div class=\"px-4 py-5 sm:px-6 bg-gray-50\">\n        <h3 class=\"text-base font-semibold text-gray-900\">Informations personnelles</h3>\n        <p class=\"mt-1 max-w-2xl text-sm text-gray-500\">Vos informations de profil utilisateur.</p>\n      </div>\n      <div class=\"border-t border-gray-200\">\n        <form [formGroup]=\"profileForm\" (ngSubmit)=\"onSubmit()\">\n          <dl>\n            <!-- Nom d'utilisateur -->\n            <div class=\"bg-gray-50 px-4 py-5 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6\">\n              <dt class=\"text-sm font-medium text-gray-500\">Nom d'utilisateur</dt>\n              <dd class=\"mt-1 text-sm text-gray-900 sm:mt-0 sm:col-span-2\">{{ currentUser.username }}</dd>\n            </div>\n\n            <!-- Prénom -->\n            <div class=\"bg-white px-4 py-5 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6\">\n              <dt class=\"text-sm font-medium text-gray-500\">\n                <label for=\"firstName\">Prénom</label>\n              </dt>\n              <dd class=\"mt-1 text-sm text-gray-900 sm:mt-0 sm:col-span-2\">\n                <input \n                  *ngIf=\"isEditing\" \n                  id=\"firstName\" \n                  type=\"text\" \n                  formControlName=\"firstName\"\n                  class=\"shadow-sm focus:ring-indigo-500 focus:border-indigo-500 block w-full sm:text-sm border-gray-300 rounded-md\"\n                >\n                <span *ngIf=\"!isEditing\">{{ currentUser.firstName || 'Non renseigné' }}</span>\n                <div *ngIf=\"isEditing && profileForm.get('firstName')?.invalid && profileForm.get('firstName')?.touched\" class=\"mt-1 text-sm text-red-600\">\n                  Le prénom est requis\n                </div>\n              </dd>\n            </div>\n\n            <!-- Nom -->\n            <div class=\"bg-gray-50 px-4 py-5 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6\">\n              <dt class=\"text-sm font-medium text-gray-500\">\n                <label for=\"lastName\">Nom</label>\n              </dt>\n              <dd class=\"mt-1 text-sm text-gray-900 sm:mt-0 sm:col-span-2\">\n                <input \n                  *ngIf=\"isEditing\" \n                  id=\"lastName\" \n                  type=\"text\" \n                  formControlName=\"lastName\"\n                  class=\"shadow-sm focus:ring-indigo-500 focus:border-indigo-500 block w-full sm:text-sm border-gray-300 rounded-md\"\n                >\n                <span *ngIf=\"!isEditing\">{{ currentUser.lastName || 'Non renseigné' }}</span>\n                <div *ngIf=\"isEditing && profileForm.get('lastName')?.invalid && profileForm.get('lastName')?.touched\" class=\"mt-1 text-sm text-red-600\">\n                  Le nom est requis\n                </div>\n              </dd>\n            </div>\n\n            <!-- Email -->\n            <div class=\"bg-white px-4 py-5 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6\">\n              <dt class=\"text-sm font-medium text-gray-500\">\n                <label for=\"email\">Email</label>\n              </dt>\n              <dd class=\"mt-1 text-sm text-gray-900 sm:mt-0 sm:col-span-2\">\n                <input \n                  *ngIf=\"isEditing\" \n                  id=\"email\" \n                  type=\"email\" \n                  formControlName=\"email\"\n                  class=\"shadow-sm focus:ring-indigo-500 focus:border-indigo-500 block w-full sm:text-sm border-gray-300 rounded-md\"\n                >\n                <span *ngIf=\"!isEditing\">{{ currentUser.email }}</span>\n                <div *ngIf=\"isEditing && profileForm.get('email')?.invalid && profileForm.get('email')?.touched\" class=\"mt-1 text-sm text-red-600\">\n                  <span *ngIf=\"profileForm.get('email')?.errors?.['required']\">L'email est requis</span>\n                  <span *ngIf=\"profileForm.get('email')?.errors?.['email']\">Format d'email invalide</span>\n                </div>\n              </dd>\n            </div>\n\n            <!-- Rôle -->\n            <div class=\"bg-gray-50 px-4 py-5 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6\">\n              <dt class=\"text-sm font-medium text-gray-500\">Rôle</dt>\n              <dd class=\"mt-1 text-sm text-gray-900 sm:mt-0 sm:col-span-2\">\n                {{ currentUser.role === 'admin' ? 'Administrateur' : \n                   currentUser.role === 'consultant' ? 'Consultant' :\n                   currentUser.role === 'recruiter' ? 'Recruteur' : currentUser.role }}\n              </dd>\n            </div>\n\n            <!-- État du compte -->\n            <div class=\"bg-white px-4 py-5 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6\">\n              <dt class=\"text-sm font-medium text-gray-500\">État du compte</dt>\n              <dd class=\"mt-1 text-sm text-gray-900 sm:mt-0 sm:col-span-2\">\n                <span *ngIf=\"currentUser.isActive\" class=\"px-2 py-1 text-xs font-medium rounded-full bg-green-100 text-green-800\">Actif</span>\n                <span *ngIf=\"!currentUser.isActive\" class=\"px-2 py-1 text-xs font-medium rounded-full bg-red-100 text-red-800\">Inactif</span>\n              </dd>\n            </div>\n\n            <!-- Dernière connexion -->\n            <div class=\"bg-gray-50 px-4 py-5 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6\">\n              <dt class=\"text-sm font-medium text-gray-500\">Dernière connexion</dt>\n              <dd class=\"mt-1 text-sm text-gray-900 sm:mt-0 sm:col-span-2\">\n                {{ currentUser.lastLogin ? (currentUser.lastLogin | date:'dd/MM/yyyy HH:mm') : 'Jamais' }}\n              </dd>\n            </div>\n          </dl>\n\n          <!-- Boutons d'action (en mode édition) -->\n          <div *ngIf=\"isEditing\" class=\"px-4 py-3 bg-gray-50 text-right sm:px-6 border-t border-gray-200\">\n            <button type=\"button\" (click)=\"cancelEdit()\" class=\"inline-flex justify-center py-2 px-4 border border-gray-300 shadow-sm text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 mr-3\">\n              Annuler\n            </button>\n            <button type=\"submit\" [disabled]=\"profileForm.invalid || isLoading\" class=\"inline-flex justify-center py-2 px-4 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\">\n              <span *ngIf=\"isLoading\" class=\"mr-2\">\n                <svg class=\"animate-spin -ml-1 mr-2 h-4 w-4 text-white\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n                  <circle class=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" stroke-width=\"4\"></circle>\n                  <path class=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n                </svg>\n              </span>\n              Enregistrer\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  </div>\n</div>","import { Component, OnInit, ViewChild, ElementRef, OnDestroy, HostListener } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { ConsultantWithTags, ExperienceLevel, AvailabilityStatus } from '../../models/consultant.model';\nimport { ConsultantCardComponent } from '../consultant-card/consultant-card.component';\nimport { ConsultantService } from '../../services/consultant.service';\n\n@Component({\n  selector: 'app-consultant-list',\n  templateUrl: './consultant-list.component.html',\n  styleUrls: ['./consultant-list.component.css'],\n  standalone: true,\n  imports: [CommonModule, FormsModule, ConsultantCardComponent]\n})\nexport class ConsultantListComponent implements OnInit, OnDestroy {\n  @ViewChild('consultantsList', { static: false }) consultantsList?: ElementRef;\n  @ViewChild('consultantsListMobile', { static: false }) consultantsListMobile?: ElementRef;\n  \n  // Données principales\n  allConsultants: ConsultantWithTags[] = [];\n  consultants: ConsultantWithTags[] = [];\n  filteredConsultants: ConsultantWithTags[] = [];\n  \n  // Paramètre global pour contrôler l'affichage des détails\n  showDetailsDefault: boolean = true; // Contrôle si les détails sont affichés par défaut\n  \n  // Paramètres de pagination\n  currentPage: number = 1;\n  pageSize: number = 10;\n  isLoadingMore: boolean = false;\n  hasMoreData: boolean = true;\n  isLoading: boolean = true;\n  errorMessage: string | null = null;\n  \n  // Filtres\n  searchText: string = '';\n  selectedSkills: string[] = [];\n  selectedAvailability: string = 'all';\n  selectedExperience: string = 'all';\n  selectedLocation: string = 'all';\n  selectedSortOrder: string = 'relevance'; // Tri par défaut\n  \n  // Options disponibles pour les filtres\n  availableSkills: string[] = [];\n  availableLocations: string[] = [];\n  \n  // Options de tri\n  sortOptions = [\n    { value: 'relevance', label: 'Pertinence' },\n    { value: 'last_updated', label: 'Dernière mise à jour' },\n    { value: 'availability', label: 'Disponibilité' }\n  ];\n  \n  // État du dropdown de tri\n  sortDropdownOpen: boolean = false;\n  experienceOptions = [\n    { value: 'less_than_3', label: 'Moins de 3 ans' },\n    { value: 'between_3_and_10', label: 'Entre 3 et 10 ans' },\n    { value: 'more_than_10', label: 'Plus de 10 ans' }\n  ];\n  availabilityOptions = [\n    { value: '0', label: 'Disponible maintenant' },\n    { value: '1', label: 'Disponible prochainement' },\n    { value: '2', label: 'Non disponible' }\n  ];\n  \n  // État des UI\n  moreFiltersOpen: boolean = false;\n  skillsDropdownOpen: boolean = false;\n  dropdownOpen: { [id: string]: boolean } = {};\n  expandedMessages: { [id: string]: boolean } = {};\n  expandedDetails: { [id: string]: boolean } = {}; // Pour contrôler l'affichage des détails\n  configDropdownOpen: boolean = false;\n  \n  documentClickListener?: any;\n  \n  // Événements de sortie - nous n'en avons plus besoin car le composant est autonome\n  \n  constructor(private consultantService: ConsultantService) { }\n\n  ngOnInit(): void {\n    // Charger les données initiales\n    this.loadInitialConsultants();\n    \n    // Charger tous les consultants pour extraire les filtres (en parallèle)\n    this.loadAllConsultantsForFiltering();\n    \n    // Ajouter un écouteur de clic global pour fermer les dropdowns\n    this.documentClickListener = () => {\n      Object.keys(this.dropdownOpen).forEach(key => {\n        this.dropdownOpen[key] = false;\n      });\n      this.skillsDropdownOpen = false;\n      this.configDropdownOpen = false;\n      this.sortDropdownOpen = false;\n    };\n    document.addEventListener('click', this.documentClickListener);\n    \n    // Appliquer la valeur du paramètre global showDetailsDefault\n    setTimeout(() => {\n      this.consultantService.getConsultants().subscribe(consultants => {\n        consultants.forEach(consultant => {\n          this.expandedMessages[consultant.id] = this.showDetailsDefault;\n        });\n      });\n    }, 500);\n    \n    // Écouter les événements de recherche et filtrage provenant de l'UI LinkedIn-style\n    window.addEventListener('fastconnect-search-updated', this.handleSearchUpdate.bind(this));\n    window.addEventListener('fastconnect-filters-updated', this.handleFiltersUpdate.bind(this));\n  }\n  \n  /**\n   * Gère les mises à jour de recherche provenant de la barre de recherche principale\n   */\n  handleSearchUpdate(): void {\n    try {\n      const searchParamsStr = localStorage.getItem('fastconnect-search-params');\n      if (searchParamsStr) {\n        const searchParams = JSON.parse(searchParamsStr);\n        this.searchText = searchParams.searchText || '';\n        \n        // Appliquer les filtres avec la nouvelle valeur de recherche\n        this.applyFilters();\n      }\n    } catch (error) {\n      console.error('Erreur lors de la gestion des paramètres de recherche:', error);\n    }\n  }\n  \n  /**\n   * Gère les mises à jour des filtres avancés\n   */\n  handleFiltersUpdate(): void {\n    try {\n      const filterParamsStr = localStorage.getItem('fastconnect-filter-params');\n      if (filterParamsStr) {\n        const filterParams = JSON.parse(filterParamsStr);\n        this.searchText = filterParams.searchText || '';\n        this.selectedExperience = filterParams.selectedExperience || 'all';\n        this.selectedAvailability = filterParams.selectedAvailability || 'all';\n        this.selectedLocation = filterParams.selectedLocation || 'all';\n        this.selectedSkills = filterParams.selectedSkills || []; // Récupérer les compétences sélectionnées\n        \n        // Appliquer les filtres avec les nouvelles valeurs\n        this.applyFilters();\n      }\n    } catch (error) {\n      console.error('Erreur lors de la gestion des paramètres de filtrage:', error);\n    }\n  }\n  \n  ngOnDestroy(): void {\n    // Nettoyage des écouteurs d'événements\n    if (this.documentClickListener) {\n      document.removeEventListener('click', this.documentClickListener);\n    }\n    \n    // Supprimer les écouteurs d'événements personnalisés\n    window.removeEventListener('fastconnect-search-updated', this.handleSearchUpdate.bind(this));\n    window.removeEventListener('fastconnect-filters-updated', this.handleFiltersUpdate.bind(this));\n  }\n  \n  /**\n   * Écouteur d'événement de défilement pour l'infinite scroll\n   * Cette méthode est appelée via (scroll) sur le conteneur défilant\n   */\n  onScroll(event: Event): void {\n    let element: HTMLElement | null = null;\n    \n    // Déterminer quel conteneur est actif selon la taille d'écran\n    if (this.consultantsList && window.innerWidth >= 768) {\n      element = this.consultantsList.nativeElement;\n    } else if (this.consultantsListMobile && window.innerWidth < 768) {\n      element = this.consultantsListMobile.nativeElement;\n    }\n    \n    if (!element) return;\n    \n    const scrollPosition = element.scrollTop + element.clientHeight;\n    \n    // Si nous avons atteint le bas du conteneur (avec une marge de 100px)\n    // et que nous ne sommes pas déjà en train de charger plus de données\n    // et qu'il y a potentiellement plus de données à charger\n    if (scrollPosition >= (element.scrollHeight - 100) && !this.isLoadingMore && this.hasMoreData) {\n      this.loadMoreConsultants();\n    }\n  }\n\n  /**\n   * Charge les premières données des consultants\n   */\n  loadInitialConsultants(): void {\n    console.log('[ConsultantListComponent] Démarrage du chargement des consultants initiaux');\n    this.isLoading = true;\n    this.errorMessage = null;\n    this.currentPage = 1;\n    \n    this.consultantService.getPagedConsultants(this.currentPage, this.pageSize)\n      .subscribe({\n        next: (data) => {\n          console.log(`[ConsultantListComponent] Consultants initiaux reçus: ${data.length} consultants`);\n          this.consultants = data;\n          \n          // Initialiser les messages comme étant affichés par défaut\n          this.consultants.forEach(consultant => {\n            // Initialiser le message principal\n            this.expandedMessages[consultant.id] = this.showDetailsDefault;\n            // Initialiser le message détaillé\n            this.expandedMessages[consultant.id + '-message'] = this.showDetailsDefault;\n          });\n          \n          console.log('[ConsultantListComponent] Application des filtres');\n          this.applyFilters();\n          console.log(`[ConsultantListComponent] Après filtrage: ${this.filteredConsultants.length} consultants affichés`);\n          this.isLoading = false;\n        },\n        error: (error) => {\n          console.error('[ConsultantListComponent] Erreur lors du chargement des consultants:', error);\n          this.errorMessage = 'erreur_chargement';\n          this.isLoading = false;\n        }\n      });\n  }\n\n  /**\n   * Charge plus de consultants lorsque l'utilisateur fait défiler la page\n   */\n  loadMoreConsultants(): void {\n    if (this.isLoadingMore || !this.hasMoreData) return;\n    \n    this.isLoadingMore = true;\n    console.log(\"Démarrage du chargement de la page suivante\");\n    \n    this.currentPage++;\n    console.log(`Chargement de la page ${this.currentPage} avec ${this.pageSize} éléments par page`);\n    \n    this.consultantService.getPagedConsultants(this.currentPage, this.pageSize)\n      .subscribe(\n        newData => {\n          console.log(`Reçu ${newData.length} consultants de plus`);\n          \n          if (newData.length === 0) {\n            this.hasMoreData = false;\n            this.isLoadingMore = false;\n            console.log(\"hasMoreData défini à false\");\n            return;\n          }\n          \n          // Initialiser les messages comme étant affichés par défaut pour les nouveaux consultants\n          newData.forEach(consultant => {\n            // Initialiser le message principal\n            this.expandedMessages[consultant.id] = this.showDetailsDefault;\n            // Initialiser le message détaillé\n            this.expandedMessages[consultant.id + '-message'] = this.showDetailsDefault;\n          });\n          \n          // Ajouter les nouvelles données aux consultants existants\n          this.consultants = [...this.consultants, ...newData];\n          \n          // Filtrer les nouvelles données en fonction des filtres actuels\n          this.applyFilters();\n          \n          this.isLoadingMore = false;\n          \n          // Vérifier s'il y a plus de données à charger\n          this.hasMoreData = newData.length >= this.pageSize;\n          console.log(`hasMoreData défini à ${this.hasMoreData}`);\n        },\n        error => {\n          console.error('Error fetching more consultants:', error);\n          this.isLoadingMore = false;\n          this.errorMessage = 'erreur_chargement';\n        }\n      );\n  }\n\n  /**\n   * Charge tous les consultants pour pouvoir extraire toutes les compétences disponibles pour le filtrage\n   */\n  loadAllConsultantsForFiltering(): void {\n    this.consultantService.getConsultants()\n      .subscribe(\n        data => {\n          this.allConsultants = data;\n          this.extractAvailableSkills();\n          this.extractAvailableLocations();\n        },\n        error => {\n          console.error('Error fetching all consultants for filtering:', error);\n        }\n      );\n  }\n\n  /**\n   * Extract unique skills from all consultants for filtering\n   */\n  extractAvailableSkills(): void {\n    const skillsSet = new Set<string>();\n    \n    this.allConsultants.forEach(consultant => {\n      consultant.skills.forEach(skill => {\n        skillsSet.add(skill);\n      });\n    });\n    \n    this.availableSkills = Array.from(skillsSet).sort();\n  }\n\n  /**\n   * Extract unique locations from all consultants for filtering\n   */\n  extractAvailableLocations(): void {\n    const locationsSet = new Set<string>();\n    \n    this.allConsultants.forEach(consultant => {\n      if (consultant.location) {\n        // Split locations if they are comma-separated\n        const locations = consultant.location.split(',').map(loc => loc.trim());\n        locations.forEach(location => {\n          locationsSet.add(location);\n        });\n      }\n    });\n    \n    this.availableLocations = Array.from(locationsSet).sort();\n  }\n\n  /**\n   * Filter consultants based on current search/filter parameters\n   */\n  applyFilters(): void {\n    if (!this.consultants.length) {\n      this.filteredConsultants = [];\n      return;\n    }\n    \n    this.filteredConsultants = this.consultantService.filterConsultants(\n      this.consultants,\n      this.searchText,\n      this.selectedSkills,\n      this.selectedAvailability,\n      this.selectedExperience,\n      this.selectedLocation\n    );\n    \n    console.log(`Après filtrage, taille totale de la liste: ${this.filteredConsultants.length}`);\n    \n    // Appliquer le tri si nécessaire (sauf pour 'relevance' qui est l'ordre par défaut)\n    if (this.selectedSortOrder !== 'relevance') {\n      this.applySorting();\n    }\n  }\n  \n  // Méthodes pour les filtres\n  onSearchChange(): void {\n    this.applyFilters();\n  }\n  \n  onExperienceChange(): void {\n    this.applyFilters();\n  }\n  \n  onAvailabilityChange(): void {\n    this.applyFilters();\n  }\n  \n  onLocationChange(): void {\n    this.applyFilters();\n  }\n  \n  toggleSkillFilter(skill: string): void {\n    const index = this.selectedSkills.indexOf(skill);\n    if (index === -1) {\n      // Si la compétence n'est pas dans la liste, l'ajouter\n      this.selectedSkills.push(skill);\n    } else {\n      // Si la compétence est déjà dans la liste, la retirer\n      this.selectedSkills.splice(index, 1);\n    }\n    this.applyFilters();\n  }\n  \n  onToggleMoreFilters(event: MouseEvent): void {\n    event.stopPropagation();\n    this.moreFiltersOpen = !this.moreFiltersOpen;\n  }\n  \n  onToggleSkillsDropdown(event: MouseEvent): void {\n    event.stopPropagation();\n    this.skillsDropdownOpen = !this.skillsDropdownOpen;\n  }\n  \n  // Méthodes d'action sur les consultants\n  openLinkedIn(url: string): void {\n    // Si nous sommes dans une extension Chrome, utiliser l'API chrome.tabs\n    if (typeof chrome !== 'undefined' && chrome.tabs) {\n      chrome.tabs.create({ url });\n    } else {\n      // Sinon, ouvrir dans un nouvel onglet\n      window.open(url, '_blank');\n    }\n  }\n  \n  showPhone(phone: string | null): void {\n    if (phone) {\n      // Pour un numéro de téléphone, nous pourrions ouvrir un lien tel: ou afficher une alerte\n      alert(`Téléphone: ${phone}`);\n    } else {\n      alert('Numéro de téléphone non disponible');\n    }\n  }\n  \n  sendEmail(email: string | null): void {\n    if (email) {\n      // Ouvrir le client de messagerie par défaut\n      window.location.href = `mailto:${email}`;\n    } else {\n      alert('Adresse email non disponible');\n    }\n  }\n  \n  // Méthodes pour les dropdowns et expansions\n  toggleDropdown(id: string, event: any): void {\n    if (event.event && event.event.stopPropagation) {\n      // Si c'est un objet avec un event de notre composant\n      event.event.stopPropagation();\n    } else if (event && event.stopPropagation) {\n      // Si c'est un MouseEvent\n      event.stopPropagation();\n    }\n    \n    // Fermer tous les autres dropdowns\n    Object.keys(this.dropdownOpen).forEach(key => {\n      if (key !== id) {\n        this.dropdownOpen[key] = false;\n      }\n    });\n    \n    // Basculer l'état du dropdown actuel\n    this.dropdownOpen[id] = !this.dropdownOpen[id];\n  }\n  \n  toggleMessageExpansion(id: string, event: any): void {\n    if (event.event && event.event.stopPropagation) {\n      // Si c'est un objet avec un event de notre composant\n      event.event.stopPropagation();\n    } else if (event && event.stopPropagation) {\n      // Si c'est un MouseEvent\n      event.stopPropagation();\n    }\n    this.expandedMessages[id] = !this.expandedMessages[id];\n    console.log(\"Message expansion toggled for ID:\", id, \"New state:\", this.expandedMessages[id]);\n  }\n  \n  toggleExpandMessage(id: string, event: any): void {\n    if (event.expanded !== undefined) {\n      // Si c'est un objet avec expanded, c'est un événement de notre composant\n      this.expandedMessages[id + '-message'] = event.expanded;\n    } else if (event && event.stopPropagation) {\n      // Si c'est un MouseEvent\n      event.stopPropagation();\n      this.expandedMessages[id + '-message'] = !this.expandedMessages[id + '-message'];\n    }\n  }\n  \n  toggleDetailsExpansion(id: string, event: any): void {\n    if (event.event && event.event.stopPropagation) {\n      // Si c'est un objet avec un event de notre composant\n      event.event.stopPropagation();\n    } else if (event && event.stopPropagation) {\n      // Si c'est un MouseEvent\n      event.stopPropagation();\n    }\n    this.expandedDetails[id] = !this.expandedDetails[id];\n    console.log(\"Details expansion toggled for ID:\", id, \"New state:\", this.expandedDetails[id]);\n  }\n  \n  // Méthodes utilitaires\n  formatMessage(message: string): string {\n    return message.replace(/#(\\w+)/g, '<span class=\"text-blue-600 text-xs font-medium hover:text-blue-800 transition-colors duration-300\">#$1</span>');\n  }\n  \n  isMessageLong(message: string): boolean {\n    return message.length > 150;\n  }\n  \n  getSeniorityBars(experience: ExperienceLevel): number {\n    if (experience === 'less_than_3') return 1;\n    if (experience === 'between_3_and_10') return 2;\n    return 3;\n  }\n  \n  /**\n   * Ouvre ou ferme le dropdown de tri\n   * @param event Événement de souris\n   */\n  toggleSortDropdown(event: MouseEvent): void {\n    event.stopPropagation();\n    this.sortDropdownOpen = !this.sortDropdownOpen;\n  }\n  \n  /**\n   * Change l'ordre de tri des consultants\n   * @param sortOrder Nouvel ordre de tri\n   */\n  changeSortOrder(sortOrder: string): void {\n    if (this.selectedSortOrder === sortOrder) return;\n    \n    this.selectedSortOrder = sortOrder;\n    this.applySorting();\n    this.sortDropdownOpen = false;\n  }\n  \n  /**\n   * Applique le tri aux consultants filtrés\n   */\n  applySorting(): void {\n    if (!this.filteredConsultants.length) return;\n    \n    switch (this.selectedSortOrder) {\n      case 'relevance':\n        // Le tri par pertinence est l'ordre par défaut (aucun tri particulier)\n        // On réapplique simplement les filtres pour réinitialiser l'ordre\n        this.applyFilters();\n        break;\n      \n      case 'last_updated':\n        // Comme nous n'avons pas de champ updatedAt, nous utilisons l'identifiant\n        // qui est généralement incrémental et peut servir de proxy pour la date de création/mise à jour\n        this.filteredConsultants.sort((a, b) => {\n          // Comparer par ID (supposant que les ID plus élevés sont plus récents)\n          // Filtrage des caractères non numériques si l'ID contient des lettres\n          const idA = parseInt(a.id.replace(/\\D/g, ''), 10) || 0;\n          const idB = parseInt(b.id.replace(/\\D/g, ''), 10) || 0;\n          return idB - idA; // Ordre décroissant\n        });\n        break;\n      \n      case 'availability':\n        // Trier par disponibilité (d'abord les consultants disponibles immédiatement)\n        this.filteredConsultants.sort((a, b) => {\n          // availability est déjà un nombre selon le modèle\n          return a.availability - b.availability;\n        });\n        break;\n    }\n  }\n  \n  @HostListener('document:click')\n  closeDropdowns(): void {\n    Object.keys(this.dropdownOpen).forEach(id => {\n      this.dropdownOpen[id] = false;\n    });\n    this.sortDropdownOpen = false;\n  }\n  \n  /**\n   * Retourne le libellé de l'option de tri actuellement sélectionnée\n   * @returns Le libellé de l'option de tri\n   */\n  getSortLabel(): string {\n    const option = this.sortOptions.find(opt => opt.value === this.selectedSortOrder);\n    return option ? option.label : 'Pertinence';\n  }\n  \n  /**\n   * Vérifie si un consultant a sa carte de message étendue\n   * @param id Identifiant du consultant\n   * @param suffix Suffixe à ajouter à l'identifiant ('-message' ou '')\n   * @returns true si le message est étendu\n   */\n  isExpanded(id: string, suffix: string): boolean {\n    return !!this.expandedMessages[id + suffix];\n  }\n  \n  /**\n   * Vérifie si les détails d'un consultant sont étendus\n   * @param id Identifiant du consultant\n   * @returns true si les détails sont étendus\n   */\n  isDetailsExpanded(id: string): boolean {\n    return !!this.expandedDetails[id];\n  }\n  \n  /**\n   * Vérifie si le dropdown d'un consultant est ouvert\n   * @param id Identifiant du consultant\n   * @returns true si le dropdown est ouvert\n   */\n  isDropdownOpen(id: string): boolean {\n    return !!this.dropdownOpen[id];\n  }\n  \n  /**\n   * Gère l'expansion du message d'un consultant\n   * @param event Événement émis par le composant\n   * @param id Identifiant du consultant\n   */\n  handleToggleExpansion(event: any, id: string): void {\n    if (event.expanded !== undefined) {\n      this.expandedMessages[id + '-message'] = event.expanded;\n    } else if (event && event.stopPropagation) {\n      event.stopPropagation();\n      this.expandedMessages[id + '-message'] = !this.expandedMessages[id + '-message'];\n    }\n  }\n  \n  /**\n   * Gère l'expansion du message principal d'un consultant\n   * @param event Événement émis par le composant\n   * @param id Identifiant du consultant\n   */\n  handleToggleMessageExpansion(event: any, id: string): void {\n    if (event.event && event.event.stopPropagation) {\n      event.event.stopPropagation();\n    } else if (event && event.stopPropagation) {\n      event.stopPropagation();\n    }\n    this.expandedMessages[id] = !this.expandedMessages[id];\n  }\n  \n  /**\n   * Gère l'expansion des détails d'un consultant\n   * @param event Événement émis par le composant\n   * @param id Identifiant du consultant\n   */\n  handleToggleDetailsExpansion(event: any, id: string): void {\n    if (event.event && event.event.stopPropagation) {\n      event.event.stopPropagation();\n    } else if (event && event.stopPropagation) {\n      event.stopPropagation();\n    }\n    this.expandedDetails[id] = !this.expandedDetails[id];\n  }\n  \n  /**\n   * Gère l'ouverture/fermeture du dropdown d'un consultant\n   * @param event Événement émis par le composant\n   * @param id Identifiant du consultant\n   */\n  handleToggleDropdown(event: any, id: string): void {\n    if (event.event && event.event.stopPropagation) {\n      event.event.stopPropagation();\n    } else if (event && event.stopPropagation) {\n      event.stopPropagation();\n    }\n    \n    // Fermer tous les autres dropdowns\n    Object.keys(this.dropdownOpen).forEach(key => {\n      if (key !== id) {\n        this.dropdownOpen[key] = false;\n      }\n    });\n    \n    // Basculer l'état du dropdown actuel\n    this.dropdownOpen[id] = !this.dropdownOpen[id];\n  }\n}","<!-- Sorting Dropdown -->\n<div class=\"flex justify-between items-center mx-4 my-3\">\n  <div class=\"relative\">\n    <button (click)=\"toggleSortDropdown($event)\" class=\"flex items-center text-sm text-gray-600 hover:text-blue-500 focus:outline-none\">\n      <span>Trier par : {{ getSortLabel() }}</span>\n      <svg class=\"w-4 h-4 ml-1\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M19 9l-7 7-7-7\"></path>\n      </svg>\n    </button>\n    <div *ngIf=\"sortDropdownOpen\" class=\"absolute z-10 mt-2 w-48 bg-white rounded-md shadow-lg p-2\">\n      <div *ngFor=\"let option of sortOptions\" \n           (click)=\"changeSortOrder(option.value)\" \n           class=\"px-3 py-2 text-sm rounded-md cursor-pointer hover:bg-gray-100\"\n           [class.text-blue-500]=\"selectedSortOrder === option.value\">\n        {{ option.label }}\n      </div>\n    </div>\n  </div>\n</div>\n\n<!-- Desktop View -->\n<div #consultantsList class=\"flex-1 overflow-y-auto p-4 h-full hidden md:block\" style=\"min-height: 70vh; max-height: calc(100vh - 150px);\" (scroll)=\"onScroll($event)\">\n  <!-- État de chargement -->\n  <div *ngIf=\"isLoading\" class=\"flex justify-center items-center p-10\">\n    <div class=\"animate-spin h-10 w-10 border-4 border-blue-500 border-t-transparent rounded-full\"></div>\n  </div>\n  \n  <!-- Message d'erreur -->\n  <div *ngIf=\"errorMessage\" class=\"text-center p-6 bg-red-50 rounded-lg\">\n    <p class=\"text-red-500\">{{ errorMessage }}</p>\n    <button (click)=\"loadInitialConsultants()\" class=\"mt-2 px-4 py-2 bg-blue-500 text-white rounded\">Réessayer</button>\n  </div>\n  \n  <!-- Liste des consultants (version complète avec consultant-card) -->\n  <div *ngIf=\"!isLoading && !errorMessage\" class=\"space-y-4\">\n    <div *ngFor=\"let consultant of filteredConsultants; let i = index\" class=\"mb-4\">\n      <app-consultant-card \n        [consultant]=\"consultant\"\n        [expanded]=\"isExpanded(consultant.id, '')\"\n        [messageExpanded]=\"isExpanded(consultant.id, '-message')\"\n        [detailsExpanded]=\"isDetailsExpanded(consultant.id)\"\n        [dropdownOpen]=\"isDropdownOpen(consultant.id)\"\n        (toggleExpansion)=\"handleToggleExpansion($event, consultant.id)\"\n        (toggleMessageExpansion)=\"handleToggleMessageExpansion($event, consultant.id)\"\n        (toggleDetailsExpansion)=\"handleToggleDetailsExpansion($event, consultant.id)\"\n        (toggleDropdown)=\"handleToggleDropdown($event, consultant.id)\">\n      </app-consultant-card>\n    </div>\n  </div>\n  \n  <!-- Message quand il n'y a aucun résultat -->\n  <div *ngIf=\"!isLoading && !errorMessage && filteredConsultants.length === 0\" class=\"text-center p-6 bg-gray-50 rounded-lg\">\n    <p class=\"text-gray-500\">Aucun consultant trouvé</p>\n  </div>\n  \n  <!-- Indicateur de chargement pour \"Charger plus\" -->\n  <div *ngIf=\"isLoadingMore\" class=\"flex justify-center items-center py-4\">\n    <div class=\"animate-spin h-8 w-8 border-4 border-blue-500 border-t-transparent rounded-full\"></div>\n  </div>\n</div>\n\n<!-- Mobile View - Conteneur optimisé pour mobile -->\n<div #consultantsListMobile class=\"flex-1 overflow-y-auto p-2 h-full block md:hidden\" style=\"min-height: 70vh; max-height: calc(100vh - 120px); -webkit-overflow-scrolling: touch;\" (scroll)=\"onScroll($event)\">\n  <!-- État de chargement -->\n  <div *ngIf=\"isLoading\" class=\"flex justify-center items-center p-6\">\n    <div class=\"animate-spin h-8 w-8 border-4 border-blue-500 border-t-transparent rounded-full\"></div>\n  </div>\n  \n  <!-- Message d'erreur -->\n  <div *ngIf=\"errorMessage\" class=\"text-center p-4 bg-red-50 rounded-lg\">\n    <p class=\"text-red-500 text-sm\">{{ errorMessage }}</p>\n    <button (click)=\"loadInitialConsultants()\" class=\"mt-2 px-3 py-1 bg-blue-500 text-white text-sm rounded\">Réessayer</button>\n  </div>\n  \n  <!-- Liste des consultants (version mobile) -->\n  <div *ngIf=\"!isLoading && !errorMessage\" class=\"space-y-3\">\n    <div *ngFor=\"let consultant of filteredConsultants; let i = index\" class=\"mb-3\">\n      <app-consultant-card \n        [consultant]=\"consultant\"\n        [expanded]=\"isExpanded(consultant.id, '')\"\n        [messageExpanded]=\"isExpanded(consultant.id, '-message')\"\n        [detailsExpanded]=\"isDetailsExpanded(consultant.id)\"\n        [dropdownOpen]=\"isDropdownOpen(consultant.id)\"\n        (toggleExpansion)=\"handleToggleExpansion($event, consultant.id)\"\n        (toggleMessageExpansion)=\"handleToggleMessageExpansion($event, consultant.id)\"\n        (toggleDetailsExpansion)=\"handleToggleDetailsExpansion($event, consultant.id)\"\n        (toggleDropdown)=\"handleToggleDropdown($event, consultant.id)\">\n      </app-consultant-card>\n    </div>\n  </div>\n  \n  <!-- Message quand il n'y a aucun résultat -->\n  <div *ngIf=\"!isLoading && !errorMessage && filteredConsultants.length === 0\" class=\"text-center p-4 bg-gray-50 rounded-lg\">\n    <p class=\"text-gray-500 text-sm\">Aucun consultant trouvé</p>\n  </div>\n  \n  <!-- Indicateur de chargement pour \"Charger plus\" -->\n  <div *ngIf=\"isLoadingMore\" class=\"flex justify-center items-center py-3\">\n    <div class=\"animate-spin h-6 w-6 border-2 border-blue-500 border-t-transparent rounded-full\"></div>\n  </div>\n</div>","export const environment = {\n  production: false,\n  // URL pour l'API en mode Replit avec proxy\n  apiUrl: '/api',  // Utilise le proxy configuré dans proxy.conf.json qui redirige vers 0.0.0.0:8000/api\n  isExtension: false,\n  envName: 'replit',\n  // Informations de débogage pour vérifier la configuration\n  debugInfo: {\n    timestamp: new Date().toISOString(),\n    buildMode: 'Replit Development'\n  }\n};","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { LoginComponent } from './components/auth/login/login.component';\nimport { UserProfileComponent } from './components/user/profile/user-profile.component';\nimport { ConsultantListComponent } from './components/consultant-list/consultant-list.component';\nimport { AuthGuard } from './guards/auth.guard';\nimport { AppDebugComponent } from './app.component.debug';\n\nconst routes: Routes = [\n  // Route principale - consultants list\n  { path: '', component: ConsultantListComponent }, // Route principale directe vers la liste des consultants\n  { path: 'consultants', component: ConsultantListComponent }, // Route alternative\n  \n  // Routes d'authentification\n  { path: 'login', component: LoginComponent },\n\n  // Route de débogage\n  { path: 'debug', component: AppDebugComponent },\n  \n  // Routes protégées par AuthGuard\n  { \n    path: 'profile', \n    component: UserProfileComponent, \n    canActivate: [AuthGuard] \n  },\n  \n  // Routes spécifiques aux rôles\n  {\n    path: 'admin',\n    component: UserProfileComponent, // Temporaire - à remplacer par AdminDashboardComponent\n    canActivate: [AuthGuard],\n    data: { roles: ['admin'] }\n  },\n  {\n    path: 'consultant-profile',\n    component: UserProfileComponent, // Temporaire - à remplacer par ConsultantProfileComponent\n    canActivate: [AuthGuard],\n    data: { roles: ['consultant'] }\n  },\n  \n  // Redirection par défaut\n  { path: '**', component: ConsultantListComponent } // Redirection vers la liste des consultants\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { useHash: true })], // Utilisation du mode hash pour une meilleure compatibilité avec Replit\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }","import { Component, OnInit } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Router } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators, ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { AuthService } from '../../../services/auth.service';\nimport { ModalService } from '../../../services/modal.service';\nimport { EmailAuthCredentials } from '../../../models/user.model';\nimport { HttpErrorResponse } from '@angular/common/http';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css'],\n  standalone: true,\n  imports: [CommonModule, ReactiveFormsModule, FormsModule]\n})\nexport class LoginComponent implements OnInit {\n  loginForm!: FormGroup;\n  isLoading = false;\n  loginError: string | null = null;\n  rememberMe = false;\n  loginMode: 'email' = 'email';\n\n  constructor(\n    private authService: AuthService, \n    private router: Router,\n    private fb: FormBuilder,\n    public modalService: ModalService // Changé de private à public pour l'accès depuis le template\n  ) { }\n\n  ngOnInit(): void {\n    // Initialiser le formulaire\n    this.loginForm = this.fb.group({\n      username: ['', [Validators.required]],\n      password: ['', [Validators.required, Validators.minLength(6)]],\n      rememberMe: [false]\n    });\n  }\n\n  onSubmit(): void {\n    if (this.loginForm.invalid) {\n      return;\n    }\n\n    this.isLoading = true;\n    this.loginError = null;\n\n    const credentials: EmailAuthCredentials = {\n      email: this.loginForm.value.username,\n      password: this.loginForm.value.password,\n      rememberMe: this.loginForm.value.rememberMe\n    };\n\n    this.authService.loginWithEmail(credentials).subscribe({\n      next: () => {\n        this.isLoading = false;\n        this.closeModal();\n      },\n      error: (error: HttpErrorResponse) => {\n        this.handleLoginError(error);\n      }\n    });\n  }\n\n  closeModal(): void {\n    this.modalService.closeLoginModal();\n    this.resetForm();\n  }\n\n  resetForm(): void {\n    this.loginForm.reset({\n      username: '',\n      password: '',\n      rememberMe: false\n    });\n    this.loginError = null;\n    this.isLoading = false;\n  }\n\n  private handleLoginError(error: HttpErrorResponse): void {\n    this.isLoading = false;\n    if (error.status === 401) {\n      this.loginError = 'Identifiants incorrects. Veuillez réessayer.';\n    } else {\n      this.loginError = 'Une erreur est survenue. Veuillez réessayer plus tard.';\n    }\n    console.error('Erreur de connexion:', error);\n  }\n}","<!-- Overlay du modal -->\n<div \n  class=\"fixed inset-0 z-50 flex items-center justify-center p-4 bg-black bg-opacity-60 transition-opacity duration-300\"\n  [class.opacity-0]=\"!modalService.isLoginModalVisible\"\n  [class.opacity-100]=\"modalService.isLoginModalVisible\"\n  [class.invisible]=\"!modalService.isLoginModalVisible\"\n>\n  <!-- Conteneur du modal -->\n  <div \n    class=\"w-full max-w-md bg-white rounded-lg shadow-xl transition-all duration-300 ease-in-out transform\"\n    [class.scale-95]=\"!modalService.isLoginModalVisible\"\n    [class.scale-100]=\"modalService.isLoginModalVisible\"\n    [class.opacity-0]=\"!modalService.isLoginModalVisible\"\n    [class.opacity-100]=\"modalService.isLoginModalVisible\"\n  >\n    <!-- Entête du modal -->\n    <div class=\"flex items-center justify-between px-6 py-4 border-b\">\n      <h2 class=\"text-xl font-semibold text-gray-800\">Connexion à FastConnect</h2>\n      <button \n        type=\"button\" \n        class=\"text-gray-500 hover:text-gray-700 focus:outline-none\"\n        (click)=\"closeModal()\"\n      >\n        <svg class=\"w-5 h-5\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n          <path fill-rule=\"evenodd\" d=\"M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z\" clip-rule=\"evenodd\"></path>\n        </svg>\n      </button>\n    </div>\n    \n    <div class=\"px-6 py-4\">\n      <!-- Message d'erreur -->\n      <div *ngIf=\"loginError\" class=\"mb-4 p-3 bg-red-50 border border-red-200 text-red-600 rounded-md text-sm\">\n        {{ loginError }}\n      </div>\n      \n      <!-- Formulaire de connexion par email -->\n      <div class=\"space-y-6\">\n        <form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\n          <!-- Email -->\n          <div class=\"mb-4\">\n            <label for=\"username\" class=\"block text-sm font-medium text-gray-700 mb-1\">\n              Email\n            </label>\n            <input \n              id=\"username\" \n              type=\"email\" \n              formControlName=\"username\"\n              class=\"w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:border-transparent\"\n              [ngClass]=\"{'border-red-300': loginForm.get('username')?.invalid && loginForm.get('username')?.touched}\"\n              placeholder=\"Entrez votre email\"\n            >\n            <div *ngIf=\"loginForm.get('username')?.invalid && loginForm.get('username')?.touched\" class=\"mt-1 text-sm text-red-600\">\n              L'email est requis\n            </div>\n          </div>\n          \n          <!-- Mot de passe -->\n          <div class=\"mb-4\">\n            <label for=\"password\" class=\"block text-sm font-medium text-gray-700 mb-1\">\n              Mot de passe\n            </label>\n            <input \n              id=\"password\" \n              type=\"password\" \n              formControlName=\"password\"\n              class=\"w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:border-transparent\"\n              [ngClass]=\"{'border-red-300': loginForm.get('password')?.invalid && loginForm.get('password')?.touched}\"\n              placeholder=\"Entrez votre mot de passe\"\n            >\n            <div *ngIf=\"loginForm.get('password')?.invalid && loginForm.get('password')?.touched\" class=\"mt-1 text-sm text-red-600\">\n              <span *ngIf=\"loginForm.get('password')?.errors?.['required']\">Le mot de passe est requis</span>\n              <span *ngIf=\"loginForm.get('password')?.errors?.['minlength']\">Le mot de passe doit contenir au moins 6 caractères</span>\n            </div>\n          </div>\n          \n          <!-- Se souvenir de moi -->\n          <div class=\"flex items-center mb-6\">\n            <input \n              id=\"rememberMe\" \n              type=\"checkbox\" \n              formControlName=\"rememberMe\"\n              class=\"h-4 w-4 text-indigo-600 focus:ring-indigo-500 border-gray-300 rounded\"\n            >\n            <label for=\"rememberMe\" class=\"ml-2 block text-sm text-gray-700\">\n              Se souvenir de moi\n            </label>\n          </div>\n          \n          <!-- Bouton de connexion -->\n          <button \n            type=\"submit\" \n            class=\"w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n            [disabled]=\"loginForm.invalid || isLoading\"\n            [ngClass]=\"{'opacity-70 cursor-not-allowed': loginForm.invalid || isLoading}\"\n          >\n            <span *ngIf=\"isLoading\" class=\"mr-2\">\n              <!-- Icon de chargement (spinner) -->\n              <svg class=\"animate-spin h-4 w-4 text-white inline-block\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n                <circle class=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" stroke-width=\"4\"></circle>\n                <path class=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n              </svg>\n            </span>\n            {{ isLoading ? 'Connexion en cours...' : 'Se connecter' }}\n          </button>\n        </form>\n        \n        <!-- Liens utiles -->\n        <div class=\"flex items-center justify-between\">\n          <a href=\"#\" class=\"text-sm text-indigo-600 hover:text-indigo-700\">\n            Mot de passe oublié ?\n          </a>\n          <a href=\"#\" class=\"text-sm text-indigo-600 hover:text-indigo-700\">\n            Créer un compte\n          </a>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { environment } from '../../environments/environment';\n\n/**\n * Service de base pour les appels API\n * Gère les différentes configurations selon le contexte (application web ou extension Chrome)\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n  private API_URL = environment.apiUrl;\n  private readonly IS_EXTENSION = environment.isExtension;\n  private readonly ENV_NAME = environment.envName || 'default';\n\n  constructor(private http: HttpClient) {\n    console.log('API Service initialisé avec URL:', this.API_URL);\n    console.log('Contexte: ', this.IS_EXTENSION ? 'Extension Chrome' : 'Application Web');\n    console.log('Environnement: ', this.ENV_NAME);\n  }\n\n  /**\n   * Crée une URL complète pour une route API\n   * @param endpoint Point de terminaison API (sans le préfixe /api)\n   * @returns URL complète\n   */\n  buildApiUrl(endpoint: string): string {\n    // Si l'endpoint est déjà une URL complète, la retourner telle quelle\n    if (endpoint.startsWith('http://') || endpoint.startsWith('https://')) {\n      return endpoint;\n    }\n    \n    // S'assurer que endpoint commence par \"/\" si ce n'est pas déjà le cas\n    if (!endpoint.startsWith('/')) {\n      endpoint = '/' + endpoint;\n    }\n    \n    // Les URL sont configurées par environnement et ne devraient pas\n    // nécessiter de logique conditionnelle supplémentaire ici\n    // Utiliser simplement l'URL configurée dans l'environnement\n    \n    return `${this.API_URL}${endpoint}`;\n  }\n\n  /**\n   * Effectue une requête GET\n   * @param endpoint Point de terminaison\n   * @param options Options HTTP\n   * @returns Observable de la réponse\n   */\n  get<T>(endpoint: string, options = {}): Observable<T> {\n    return this.http.get<T>(this.buildApiUrl(endpoint), options);\n  }\n\n  /**\n   * Effectue une requête POST\n   * @param endpoint Point de terminaison\n   * @param body Corps de la requête\n   * @param options Options HTTP\n   * @returns Observable de la réponse\n   */\n  post<T>(endpoint: string, body: any, options = {}): Observable<T> {\n    return this.http.post<T>(this.buildApiUrl(endpoint), body, options);\n  }\n\n  /**\n   * Effectue une requête PUT\n   * @param endpoint Point de terminaison\n   * @param body Corps de la requête\n   * @param options Options HTTP\n   * @returns Observable de la réponse\n   */\n  put<T>(endpoint: string, body: any, options = {}): Observable<T> {\n    return this.http.put<T>(this.buildApiUrl(endpoint), body, options);\n  }\n\n  /**\n   * Effectue une requête DELETE\n   * @param endpoint Point de terminaison\n   * @param options Options HTTP\n   * @returns Observable de la réponse\n   */\n  delete<T>(endpoint: string, options = {}): Observable<T> {\n    return this.http.delete<T>(this.buildApiUrl(endpoint), options);\n  }\n}","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\n/**\n * Service pour gérer l'affichage des modals dans l'application\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class ModalService {\n  private loginModalVisibleSubject = new BehaviorSubject<boolean>(false);\n  private modalBackdropVisibleSubject = new BehaviorSubject<boolean>(false);\n  \n  // Observable public pour que les composants puissent s'abonner aux changements\n  public loginModalVisible$: Observable<boolean> = this.loginModalVisibleSubject.asObservable();\n  public modalBackdropVisible$: Observable<boolean> = this.modalBackdropVisibleSubject.asObservable();\n\n  // État actuel du modal\n  get isLoginModalVisible(): boolean {\n    return this.loginModalVisibleSubject.value;\n  }\n\n  get isModalBackdropVisible(): boolean {\n    return this.modalBackdropVisibleSubject.value;\n  }\n\n  constructor() { }\n\n  /**\n   * Ouvre le modal de connexion\n   */\n  openLoginModal(): void {\n    this.loginModalVisibleSubject.next(true);\n    this.modalBackdropVisibleSubject.next(true);\n  }\n\n  /**\n   * Ferme le modal de connexion\n   */\n  closeLoginModal(): void {\n    this.loginModalVisibleSubject.next(false);\n    this.modalBackdropVisibleSubject.next(false);\n  }\n\n  /**\n   * Ferme tous les modals\n   */\n  closeAllModals(): void {\n    this.closeLoginModal();\n    // Ajouter d'autres fermetures de modals ici si nécessaire\n  }\n}","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ConsultantCardComponent } from './components/consultant-card/consultant-card.component';\nimport { ConsultantListComponent } from './components/consultant-list/consultant-list.component';\nimport { LoginComponent } from './components/auth/login/login.component';\nimport { UserProfileComponent } from './components/user/profile/user-profile.component';\nimport { AuthInterceptor } from './services/auth.interceptor';\nimport { RouterModule } from '@angular/router';\nimport { AppDebugComponent } from './app.component.debug';\n\n@NgModule({\n  declarations: [\n    AppComponent\n    // Les composants standalone ne doivent pas être déclarés ici\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    AppRoutingModule,\n    RouterModule, // Ajout explicite du RouterModule\n    // Importation des composants standalone\n    ConsultantCardComponent,\n    ConsultantListComponent,\n    LoginComponent,\n    UserProfileComponent,\n    AppDebugComponent\n  ],\n  providers: [\n    // Intercepteur HTTP pour ajouter le token à toutes les requêtes\n    { provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","import { Component, OnInit } from '@angular/core';\nimport { Router, NavigationEnd } from '@angular/router';\nimport { filter } from 'rxjs/operators';\nimport { AuthService } from './services/auth.service';\nimport { User } from './models/user.model';\nimport { ModalService } from './services/modal.service';\nimport { environment } from '../environments/environment';\nimport { ConsultantService } from './services/consultant.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n  standalone: false\n})\nexport class AppComponent implements OnInit {\n  title = 'FastConnect';\n  currentUser: User | null = null;\n  isAuthenticated = false;\n  currentRoute = '';\n  menuOpen = false;\n  showFilterPanel = false; // Pour gérer l'affichage du panneau de filtres\n  isDebugEnabled = true; // Par défaut, le débogage est activé\n  showFloatingDebug = false; // Le débogueur flottant est désactivé par défaut\n  debugElement: HTMLElement | null = null;\n  \n  // Taille d'écran pour déterminer si on est en mobile ou desktop\n  private mobileBreakpoint = 768;\n  \n  // Variables pour les filtres dans le style LinkedIn\n  searchText: string = '';\n  selectedExperience: string = 'all';\n  selectedAvailability: string = 'all';\n  selectedLocation: string = 'all';\n  selectedSkills: string[] = []; // Pour stocker les compétences sélectionnées\n  availableLocations: string[] = [];\n  availableSkills: string[] = []; // Pour stocker les compétences disponibles\n  \n  // États pour les dropdowns de compétences\n  skillsDropdownOpen = false;\n  mobileSkillsDropdownOpen = false;\n  experienceOptions = [\n    { value: 'less_than_3', label: 'Moins de 3 ans' },\n    { value: 'between_3_and_10', label: 'Entre 3 et 10 ans' },\n    { value: 'more_than_10', label: 'Plus de 10 ans' }\n  ];\n  availabilityOptions = [\n    { value: '0', label: 'Disponible maintenant' },\n    { value: '1', label: 'Disponible prochainement' },\n    { value: '2', label: 'Non disponible' }\n  ];\n  debugInfo = {\n    baseHref: document.getElementsByTagName('base')[0]?.getAttribute('href') || 'undefined',\n    location: window.location.href,\n    environment: environment.envName || 'undefined',\n    apiUrl: environment.apiUrl || 'undefined',\n    routerUrl: '',\n    isExtension: environment.isExtension,\n    appStartTime: new Date().toISOString()\n  };\n\n  constructor(\n    private authService: AuthService,\n    private router: Router,\n    public modalService: ModalService,\n    private consultantService: ConsultantService\n  ) {\n    console.log('🔍 FastConnect initialisation:', this.debugInfo);\n    \n    // Vérifier si le débogage est désactivé dans le localStorage\n    const savedDebugState = localStorage.getItem('fastconnect-debug-enabled');\n    if (savedDebugState !== null) {\n      this.isDebugEnabled = savedDebugState === 'true';\n    }\n    \n    const savedFloatingDebugState = localStorage.getItem('fastconnect-floating-debug');\n    if (savedFloatingDebugState !== null) {\n      this.showFloatingDebug = savedFloatingDebugState === 'true';\n    }\n    \n    // Créer un élément pour le débogage visuel flottant\n    setTimeout(() => {\n      this.createFloatingDebugElement();\n      this.updateFloatingDebugVisibility();\n    }, 1000);\n  }\n\n  ngOnInit(): void {\n    // Observer les changements d'état d'authentification\n    this.authService.authState$.subscribe(state => {\n      this.isAuthenticated = state.isAuthenticated;\n      this.currentUser = state.user;\n    });\n\n    // Observer les changements de route\n    this.router.events.pipe(\n      filter(event => event instanceof NavigationEnd)\n    ).subscribe((event: any) => {\n      this.currentRoute = event.url;\n      this.menuOpen = false; // Fermer le menu à chaque changement de route\n    });\n    \n    // Charger les données pour les filtres\n    this.loadFilterOptions();\n  }\n  \n  /**\n   * Charge les options disponibles pour les filtres\n   */\n  loadFilterOptions(): void {\n    this.consultantService.getConsultants().subscribe(consultants => {\n      // Extraire les localisations disponibles\n      const locationsSet = new Set<string>();\n      \n      // Extraire les compétences disponibles\n      const skillsSet = new Set<string>();\n      \n      consultants.forEach(consultant => {\n        // Traitement des localisations\n        if (consultant.location) {\n          const locations = consultant.location.split(',').map(loc => loc.trim());\n          locations.forEach(location => {\n            locationsSet.add(location);\n          });\n        }\n        \n        // Traitement des compétences\n        if (consultant.skills && Array.isArray(consultant.skills)) {\n          // Si skills est déjà un tableau, on peut directement itérer dessus\n          consultant.skills.forEach((skill: string) => {\n            if (skill) skillsSet.add(skill.trim());\n          });\n        }\n      });\n      \n      this.availableLocations = Array.from(locationsSet).sort();\n      this.availableSkills = Array.from(skillsSet).sort();\n    });\n  }\n  \n  /**\n   * Gère le changement de texte dans la barre de recherche\n   */\n  onSearchTextChange(): void {\n    // On émet un événement pour le composant de liste de consultants\n    // qui utilisera cette valeur pour le filtrage\n    const searchParams = {\n      searchText: this.searchText\n    };\n    // Passer les paramètres de recherche via localStorage\n    localStorage.setItem('fastconnect-search-params', JSON.stringify(searchParams));\n    // Émettre un événement custom pour notifier les composants\n    window.dispatchEvent(new CustomEvent('fastconnect-search-updated'));\n  }\n  \n  /**\n   * Gère l'application des filtres avancés\n   */\n  applyAdvancedFilters(): void {\n    // On stocke les paramètres de filtrage que le composant de liste récupérera\n    const filterParams = {\n      searchText: this.searchText,\n      selectedExperience: this.selectedExperience,\n      selectedAvailability: this.selectedAvailability,\n      selectedLocation: this.selectedLocation,\n      selectedSkills: this.selectedSkills // Ajout des compétences sélectionnées\n    };\n    localStorage.setItem('fastconnect-filter-params', JSON.stringify(filterParams));\n    \n    // Émettre un événement custom pour notifier les composants\n    window.dispatchEvent(new CustomEvent('fastconnect-filters-updated'));\n    \n    // Fermer le panneau de filtres\n    this.showFilterPanel = false;\n  }\n  \n  /**\n   * Réinitialise tous les filtres\n   */\n  resetAllFilters(): void {\n    this.searchText = '';\n    this.selectedExperience = 'all';\n    this.selectedAvailability = 'all';\n    this.selectedLocation = 'all';\n    this.selectedSkills = []; // Vider les compétences sélectionnées\n    \n    // Appliquer les filtres réinitialisés\n    this.applyAdvancedFilters();\n  }\n  \n  /**\n   * Crée l'élément de débogage flottant\n   */\n  createFloatingDebugElement(): void {\n    // Supprimer l'ancien élément s'il existe\n    const existingDebugElement = document.getElementById('floating-debug-info');\n    if (existingDebugElement) {\n      document.body.removeChild(existingDebugElement);\n    }\n    \n    // Créer un nouvel élément\n    this.debugElement = document.createElement('div');\n    this.debugElement.id = 'floating-debug-info';\n    this.debugElement.style.position = 'fixed';\n    this.debugElement.style.bottom = '10px';\n    this.debugElement.style.left = '10px';\n    this.debugElement.style.padding = '10px';\n    this.debugElement.style.background = 'rgba(0,0,0,0.7)';\n    this.debugElement.style.color = 'white';\n    this.debugElement.style.fontSize = '12px';\n    this.debugElement.style.fontFamily = 'monospace';\n    this.debugElement.style.zIndex = '9999';\n    this.debugElement.style.borderRadius = '5px';\n    this.debugElement.style.transition = 'transform 0.3s ease';\n    this.debugElement.style.display = this.showFloatingDebug ? 'block' : 'none';\n    this.debugElement.innerHTML = `\n      <strong>DEBUGGER</strong><br>\n      Base: ${this.debugInfo.baseHref}<br>\n      URL: ${this.debugInfo.location}<br>\n      Env: ${this.debugInfo.environment}<br>\n      API: ${this.debugInfo.apiUrl}<br>\n      Ext: ${this.debugInfo.isExtension}<br>\n      Time: ${this.debugInfo.appStartTime}<br>\n    `;\n    document.body.appendChild(this.debugElement);\n  }\n  \n  /**\n   * Met à jour la visibilité de l'élément de débogage flottant\n   */\n  updateFloatingDebugVisibility(): void {\n    if (!this.debugElement) return;\n    \n    this.debugElement.style.display = this.showFloatingDebug ? 'block' : 'none';\n  }\n  \n  /**\n   * Active ou désactive le mode débogage\n   */\n  toggleDebugMode(): void {\n    this.isDebugEnabled = !this.isDebugEnabled;\n    localStorage.setItem('fastconnect-debug-enabled', this.isDebugEnabled.toString());\n    \n    // Mettre à jour les éléments visuels de débogage\n    const headerDebug = document.getElementById('header-debug-bar');\n    if (headerDebug) {\n      headerDebug.style.display = this.isDebugEnabled ? 'block' : 'none';\n    }\n  }\n  \n  /**\n   * Active ou désactive le débogueur flottant\n   */\n  toggleFloatingDebug(): void {\n    this.showFloatingDebug = !this.showFloatingDebug;\n    localStorage.setItem('fastconnect-floating-debug', this.showFloatingDebug.toString());\n    this.updateFloatingDebugVisibility();\n  }\n\n  /**\n   * Active ou désactive le panneau de filtres\n   */\n  toggleFilterPanel(): void {\n    this.showFilterPanel = !this.showFilterPanel;\n  }\n\n  toggleMenu(): void {\n    this.menuOpen = !this.menuOpen;\n  }\n\n  openLoginModal(): void {\n    this.modalService.openLoginModal();\n  }\n\n  logout(): void {\n    this.authService.logout().subscribe({\n      next: () => {\n        // Au lieu de rediriger, on reste sur la même page\n        this.menuOpen = false;\n      },\n      error: (error) => {\n        console.error('Erreur lors de la déconnexion:', error);\n        this.menuOpen = false;\n      }\n    });\n  }\n  \n  /**\n   * Retourne l'initiale du prénom ou du nom d'utilisateur pour l'affichage mobile\n   * @returns Une lettre initiale ou 'U' par défaut\n   */\n  getInitials(): string {\n    if (this.currentUser) {\n      if (this.currentUser.firstName) {\n        return this.currentUser.firstName.charAt(0);\n      }\n      if (this.currentUser.username) {\n        return this.currentUser.username.charAt(0);\n      }\n    }\n    return 'U';\n  }\n  \n  /**\n   * Détermine si l'affichage est en mode mobile\n   * @returns true si la largeur d'écran est inférieure au point de rupture mobile\n   */\n  isMobileView(): boolean {\n    return window.innerWidth < this.mobileBreakpoint;\n  }\n\n  /**\n   * Ouvre/ferme le dropdown de compétences en mode desktop\n   */\n  toggleSkillsDropdown(event: Event): void {\n    event.stopPropagation();\n    this.skillsDropdownOpen = !this.skillsDropdownOpen;\n    this.mobileSkillsDropdownOpen = false; // Ferme le dropdown mobile si ouvert\n    \n    // Ajouter un écouteur d'événement au document pour fermer le dropdown quand on clique ailleurs\n    if (this.skillsDropdownOpen) {\n      setTimeout(() => {\n        document.addEventListener('click', this.closeSkillsDropdowns);\n      }, 0);\n    }\n  }\n\n  /**\n   * Ouvre/ferme le dropdown de compétences en mode mobile\n   */\n  toggleMobileSkillsDropdown(event: Event): void {\n    event.stopPropagation();\n    this.mobileSkillsDropdownOpen = !this.mobileSkillsDropdownOpen;\n    this.skillsDropdownOpen = false; // Ferme le dropdown desktop si ouvert\n    \n    // Ajouter un écouteur d'événement au document pour fermer le dropdown quand on clique ailleurs\n    if (this.mobileSkillsDropdownOpen) {\n      setTimeout(() => {\n        document.addEventListener('click', this.closeSkillsDropdowns);\n      }, 0);\n    }\n  }\n\n  /**\n   * Fonction pour fermer les dropdowns lorsqu'on clique ailleurs\n   */\n  closeSkillsDropdowns = (event: MouseEvent) => {\n    // Vérifier si le clic est dans un des dropdowns\n    const desktopDropdown = document.querySelector('.skill-dropdown-desktop');\n    const mobileDropdown = document.querySelector('.skill-dropdown-mobile');\n    \n    // Ne pas fermer si on a cliqué dans le dropdown\n    if ((desktopDropdown && desktopDropdown.contains(event.target as Node)) || \n        (mobileDropdown && mobileDropdown.contains(event.target as Node))) {\n      return;\n    }\n    \n    this.skillsDropdownOpen = false;\n    this.mobileSkillsDropdownOpen = false;\n    document.removeEventListener('click', this.closeSkillsDropdowns);\n  }\n\n  /**\n   * Vérifie si une compétence est déjà sélectionnée\n   */\n  isSkillSelected(skill: string): boolean {\n    return this.selectedSkills.includes(skill);\n  }\n\n  /**\n   * Ajoute ou retire une compétence de la sélection\n   */\n  toggleSkill(skill: string): void {\n    const index = this.selectedSkills.indexOf(skill);\n    if (index === -1) {\n      // Ajouter la compétence si elle n'est pas déjà sélectionnée\n      this.selectedSkills.push(skill);\n    } else {\n      // Retirer la compétence si elle est déjà sélectionnée\n      this.selectedSkills.splice(index, 1);\n    }\n  }\n}","<div class=\"flex justify-center w-full h-screen flex-col overflow-hidden\">\n  <!-- DÉBOGEUR STATIQUE -->\n  <div id=\"header-debug-bar\" *ngIf=\"isDebugEnabled\" style=\"position: fixed; top: 0; left: 0; right: 0; background-color: #2563eb; color: white; padding: 5px; text-align: center; font-size: 14px; z-index: 9999;\">\n    FastConnect v1.0 - Environnement: {{ debugInfo.environment }} - Base: {{ debugInfo.baseHref }}\n    <span class=\"ml-2 text-yellow-200\">\n      <a routerLink=\"/debug\" class=\"underline hover:text-white mr-2\">Debug Page</a>\n      <button (click)=\"toggleFloatingDebug()\" class=\"px-2 py-0.5 bg-indigo-700 rounded-sm text-xs hover:bg-indigo-800 mr-1\" title=\"Activer/désactiver le panneau de débogage flottant\">\n        {{ showFloatingDebug ? 'Cacher Infos' : 'Afficher Infos' }}\n      </button>\n      <button (click)=\"toggleDebugMode()\" class=\"px-2 py-0.5 bg-red-700 rounded-sm text-xs hover:bg-red-800\" title=\"Désactiver complètement le mode débogage\">\n        Mode Debug {{ isDebugEnabled ? 'ON' : 'OFF' }}\n      </button>\n    </span>\n  </div>\n  \n  <!-- Bouton pour réactiver le mode debug (visible uniquement quand le mode debug est désactivé) -->\n  <div *ngIf=\"!isDebugEnabled\" \n       #debugButton\n       style=\"position: fixed; bottom: 10px; right: 10px; z-index: 9999; opacity: 0.6; transition: opacity 0.3s ease; cursor: pointer;\" \n       (click)=\"toggleDebugMode()\" \n       (mouseenter)=\"debugButton.style.opacity = '1'\" \n       (mouseleave)=\"debugButton.style.opacity = '0.6'\">\n    <button class=\"px-2 py-1 bg-gray-800 text-white rounded text-xs\">\n      <i class=\"fas fa-bug mr-1\"></i> Debug\n    </button>\n  </div>\n\n  <div class=\"w-full max-w-3xl mx-auto flex flex-col h-full\">\n    <!-- Header Style LinkedIn - sans nom d'application - optimisé pour mobile -->\n    <div class=\"bg-white p-2 shadow-sm z-40 mt-8 sticky top-0\">\n      <div class=\"flex items-center justify-between space-x-2 px-1\">\n        <!-- Barre de recherche style LinkedIn (sans padding latéral) -->\n        <div class=\"relative flex-grow\">\n          <input \n            type=\"text\" \n            [(ngModel)]=\"searchText\"\n            (keyup)=\"onSearchTextChange()\"\n            placeholder=\"Rechercher un consultant...\" \n            class=\"w-full pl-8 pr-2 py-2 rounded-md border border-gray-300 focus:outline-none focus:ring-1 focus:ring-blue-500 text-sm bg-gray-50\"\n          >\n          <div class=\"absolute inset-y-0 left-2 flex items-center pointer-events-none\">\n            <svg class=\"h-4 w-4 text-gray-400\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n              <path fill-rule=\"evenodd\" d=\"M8 4a4 4 0 100 8 4 4 0 000-8zM2 8a6 6 0 1110.89 3.476l4.817 4.817a1 1 0 01-1.414 1.414l-4.816-4.816A6 6 0 012 8z\" clip-rule=\"evenodd\" />\n            </svg>\n          </div>\n        </div>\n        \n        <!-- Bouton de filtres avancés -->\n        <button \n          (click)=\"toggleFilterPanel()\"\n          class=\"flex items-center justify-center gap-1 px-2 py-1.5 rounded-md bg-gray-50 hover:bg-gray-100 transition-colors duration-150 h-8\">\n          <svg class=\"h-4 w-4 text-gray-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M3 4a1 1 0 011-1h16a1 1 0 011 1v2.586a1 1 0 01-.293.707l-6.414 6.414a1 1 0 00-.293.707V17l-4 4v-6.586a1 1 0 00-.293-.707L3.293 7.293A1 1 0 013 6.586V4z\"></path>\n          </svg>\n          <span class=\"text-xs text-gray-600 hidden md:inline\">Filtres avancés</span>\n        </button>\n        \n        <!-- Bouton Profil / Connexion -->\n        <div class=\"flex items-center\">\n          <!-- User not authenticated -->\n          <div *ngIf=\"!isAuthenticated\">\n            <button \n              (click)=\"openLoginModal()\" \n              class=\"rounded-full p-1 bg-white hover:bg-gray-50 border border-gray-300 flex items-center justify-center w-8 h-8\">\n              <svg class=\"h-5 w-5 text-gray-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z\"></path>\n              </svg>\n            </button>\n          </div>\n          \n          <!-- User authenticated -->\n          <div *ngIf=\"isAuthenticated\" class=\"relative\">\n            <button \n              (click)=\"toggleMenu()\" \n              class=\"rounded-full p-0 flex items-center justify-center overflow-hidden w-8 h-8 text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 transition-colors duration-150 focus:outline-none\"\n              aria-expanded=\"false\"\n            >\n              {{ getInitials() }}\n            </button>\n            \n            <!-- Dropdown Menu -->\n            <div \n              *ngIf=\"menuOpen\" \n              class=\"absolute right-0 mt-2 w-40 md:w-48 bg-white rounded-md shadow-lg py-1 z-50 ring-1 ring-black ring-opacity-5\"\n            >\n              <a \n                routerLink=\"/profile\" \n                class=\"block px-3 md:px-4 py-2 text-xs md:text-sm text-gray-700 hover:bg-gray-100 transition duration-150\"\n                (click)=\"toggleMenu()\"\n              >\n                Mon profil\n              </a>\n\n              <!-- Liens spécifiques au rôle -->\n              <a \n                *ngIf=\"currentUser?.role === 'admin'\" \n                routerLink=\"/admin\" \n                class=\"block px-3 md:px-4 py-2 text-xs md:text-sm text-gray-700 hover:bg-gray-100 transition duration-150\"\n                (click)=\"toggleMenu()\"\n              >\n                Administration\n              </a>\n              \n              <a \n                *ngIf=\"currentUser?.role === 'consultant'\" \n                routerLink=\"/consultant-profile\" \n                class=\"block px-3 md:px-4 py-2 text-xs md:text-sm text-gray-700 hover:bg-gray-100 transition duration-150\"\n                (click)=\"toggleMenu()\"\n              >\n                Mon profil consultant\n              </a>\n              \n              <div class=\"border-t border-gray-100 my-1\"></div>\n              <button \n                (click)=\"logout()\" \n                class=\"block w-full text-left px-3 md:px-4 py-2 text-xs md:text-sm text-red-600 hover:bg-gray-100 transition duration-150\"\n              >\n                Déconnexion\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    \n    <!-- Panneau de filtres avancés - collapsable depuis la navbar -->\n    <div \n      [ngClass]=\"{'filter-panel-show': showFilterPanel, 'filter-panel-hide': !showFilterPanel}\"\n      class=\"w-full bg-white shadow-md filter-panel py-4 px-4 overflow-hidden border-t md:border-t border-gray-200\">\n      <div class=\"space-y-4 max-w-3xl mx-auto\">\n        <div class=\"flex justify-between items-center\">\n          <h3 class=\"font-medium text-sm text-gray-700\">Filtres avancés</h3>\n          <button \n            (click)=\"toggleFilterPanel()\" \n            class=\"text-gray-400 hover:text-gray-600\">\n            <svg class=\"h-4 w-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M6 18L18 6M6 6l12 12\"></path>\n            </svg>\n          </button>\n        </div>\n        \n        <!-- Filtres - Ligne unique pour desktop/tablette/extension, vertical pour mobile -->\n        <!-- Version desktop: affichage sur une ligne (4 colonnes) -->\n        <div class=\"hidden md:flex md:flex-row md:gap-3 md:items-end\">\n          <div class=\"flex-1 min-w-0\">\n            <label class=\"block text-xs font-medium text-gray-600 mb-1.5\">Expérience</label>\n            <select \n              [(ngModel)]=\"selectedExperience\"\n              class=\"w-full px-3 py-2 border border-gray-300 rounded-md text-sm text-gray-700 focus:outline-none focus:ring-1 focus:ring-blue-500\">\n              <option value=\"all\">Tout niveau</option>\n              <option *ngFor=\"let exp of experienceOptions\" [value]=\"exp.value\">{{ exp.label }}</option>\n            </select>\n          </div>\n          \n          <div class=\"flex-1 min-w-0\">\n            <label class=\"block text-xs font-medium text-gray-600 mb-1.5\">Disponibilité</label>\n            <select \n              [(ngModel)]=\"selectedAvailability\"\n              class=\"w-full px-3 py-2 border border-gray-300 rounded-md text-sm text-gray-700 focus:outline-none focus:ring-1 focus:ring-blue-500\">\n              <option value=\"all\">Toutes</option>\n              <option *ngFor=\"let avail of availabilityOptions\" [value]=\"avail.value\">{{ avail.label }}</option>\n            </select>\n          </div>\n          \n          <div class=\"flex-1 min-w-0\">\n            <label class=\"block text-xs font-medium text-gray-600 mb-1.5\">Localisation</label>\n            <select \n              [(ngModel)]=\"selectedLocation\"\n              class=\"w-full px-3 py-2 border border-gray-300 rounded-md text-sm text-gray-700 focus:outline-none focus:ring-1 focus:ring-blue-500\">\n              <option value=\"all\">Toutes</option>\n              <option *ngFor=\"let location of availableLocations\" [value]=\"location\">{{ location }}</option>\n            </select>\n          </div>\n          \n          <div class=\"flex-1 min-w-0 relative\">\n            <label class=\"block text-xs font-medium text-gray-600 mb-1.5\">Compétences</label>\n            <div \n              (click)=\"toggleSkillsDropdown($event)\"\n              class=\"w-full px-3 py-2 border border-gray-300 rounded-md text-sm text-gray-700 focus:outline-none focus:ring-1 focus:ring-blue-500 cursor-pointer flex justify-between items-center\">\n              <span>{{ selectedSkills.length ? selectedSkills.length + ' compétence(s)' : 'Compétences' }}</span>\n              <svg class=\"h-4 w-4 text-gray-500\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M19 9l-7 7-7-7\"></path>\n              </svg>\n            </div>\n            <!-- Dropdown Panel for Skills -->\n            <div \n              *ngIf=\"skillsDropdownOpen\"\n              class=\"absolute z-50 w-full mt-1 bg-white border border-gray-300 rounded-md shadow-lg max-h-60 overflow-y-auto skill-dropdown-desktop\">\n              <div class=\"p-2\">\n                <div *ngFor=\"let skill of availableSkills\" class=\"flex items-center py-1\">\n                  <input \n                    type=\"checkbox\" \n                    [id]=\"'skill-' + skill\"\n                    [checked]=\"isSkillSelected(skill)\"\n                    (change)=\"toggleSkill(skill); $event.stopPropagation()\"\n                    (click)=\"$event.stopPropagation()\"\n                    class=\"h-4 w-4 text-blue-600 border-gray-300 rounded focus:ring-blue-500\">\n                  <label \n                    [for]=\"'skill-' + skill\" \n                    class=\"ml-2 text-sm text-gray-700 cursor-pointer\" \n                    (click)=\"$event.stopPropagation()\">{{ skill }}</label>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        \n        <!-- Version mobile: affichage vertical (1 colonne) -->\n        <div class=\"grid grid-cols-1 gap-4 md:hidden\">\n          <div class=\"mb-2\">\n            <label class=\"block text-xs font-medium text-gray-600 mb-1.5\">Expérience</label>\n            <select \n              [(ngModel)]=\"selectedExperience\"\n              class=\"w-full px-3 py-2 border border-gray-300 rounded-md text-sm text-gray-700 focus:outline-none focus:ring-1 focus:ring-blue-500\">\n              <option value=\"all\">Tout niveau</option>\n              <option *ngFor=\"let exp of experienceOptions\" [value]=\"exp.value\">{{ exp.label }}</option>\n            </select>\n          </div>\n          \n          <div class=\"mb-2\">\n            <label class=\"block text-xs font-medium text-gray-600 mb-1.5\">Disponibilité</label>\n            <select \n              [(ngModel)]=\"selectedAvailability\"\n              class=\"w-full px-3 py-2 border border-gray-300 rounded-md text-sm text-gray-700 focus:outline-none focus:ring-1 focus:ring-blue-500\">\n              <option value=\"all\">Toutes</option>\n              <option *ngFor=\"let avail of availabilityOptions\" [value]=\"avail.value\">{{ avail.label }}</option>\n            </select>\n          </div>\n          \n          <div class=\"mb-2\">\n            <label class=\"block text-xs font-medium text-gray-600 mb-1.5\">Localisation</label>\n            <select \n              [(ngModel)]=\"selectedLocation\"\n              class=\"w-full px-3 py-2 border border-gray-300 rounded-md text-sm text-gray-700 focus:outline-none focus:ring-1 focus:ring-blue-500\">\n              <option value=\"all\">Toutes</option>\n              <option *ngFor=\"let location of availableLocations\" [value]=\"location\">{{ location }}</option>\n            </select>\n          </div>\n          \n          <div class=\"mb-2 relative\">\n            <label class=\"block text-xs font-medium text-gray-600 mb-1.5\">Compétences</label>\n            <div \n              (click)=\"toggleMobileSkillsDropdown($event)\"\n              class=\"w-full px-3 py-2 border border-gray-300 rounded-md text-sm text-gray-700 focus:outline-none focus:ring-1 focus:ring-blue-500 cursor-pointer flex justify-between items-center\">\n              <span>{{ selectedSkills.length ? selectedSkills.length + ' compétence(s)' : 'Compétences' }}</span>\n              <svg class=\"h-4 w-4 text-gray-500\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M19 9l-7 7-7-7\"></path>\n              </svg>\n            </div>\n            <!-- Dropdown Panel for Skills - Mobile -->\n            <div \n              *ngIf=\"mobileSkillsDropdownOpen\"\n              class=\"absolute z-50 w-full mt-1 bg-white border border-gray-300 rounded-md shadow-lg max-h-60 overflow-y-auto skill-dropdown-mobile\">\n              <div class=\"p-2\">\n                <div *ngFor=\"let skill of availableSkills\" class=\"flex items-center py-1\">\n                  <input \n                    type=\"checkbox\" \n                    [id]=\"'mobile-skill-' + skill\"\n                    [checked]=\"isSkillSelected(skill)\"\n                    (change)=\"toggleSkill(skill); $event.stopPropagation()\"\n                    (click)=\"$event.stopPropagation()\"\n                    class=\"h-4 w-4 text-blue-600 border-gray-300 rounded focus:ring-blue-500\">\n                  <label \n                    [for]=\"'mobile-skill-' + skill\" \n                    class=\"ml-2 text-sm text-gray-700 cursor-pointer\"\n                    (click)=\"$event.stopPropagation()\">{{ skill }}</label>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        \n        <div class=\"pt-3 flex justify-end space-x-3\">\n          <button \n            (click)=\"resetAllFilters()\"\n            class=\"px-4 py-2 text-xs text-gray-700 border border-gray-300 rounded-md hover:bg-gray-50 transition-colors duration-150\">\n            Réinitialiser\n          </button>\n          <button \n            (click)=\"applyAdvancedFilters()\"\n            class=\"px-4 py-2 text-xs text-white bg-blue-600 rounded-md hover:bg-blue-700 transition-colors duration-150\">\n            Appliquer\n          </button>\n        </div>\n      </div>\n    </div>\n    \n    <!-- Espace pour le mode mobile lorsque le panneau de filtres est ouvert -->\n    <div [ngClass]=\"{'pt-0': !showFilterPanel, 'pt-0 md:pt-0': showFilterPanel, 'pt-[420px]': showFilterPanel && isMobileView()}\" class=\"transition-all duration-300 ease-in-out\">\n      <!-- Route principale (consultants ou autre contenu) -->\n      <router-outlet></router-outlet>\n    </div>\n  </div>\n  \n  <!-- Login Modal Component -->\n  <app-login></app-login>\n  \n  <!-- Modal Backdrop -->\n  <div \n    *ngIf=\"modalService.isModalBackdropVisible\" \n    class=\"fixed inset-0 bg-black bg-opacity-50 z-40\"\n    (click)=\"modalService.closeAllModals()\"\n  ></div>\n</div>","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { BehaviorSubject, Observable, throwError } from 'rxjs';\nimport { catchError, tap } from 'rxjs/operators';\nimport { \n  User, \n  EmailAuthCredentials, \n  LinkedInProfile, \n  UserRegistration, \n  UserOnboarding, \n  AuthResponse, \n  AuthState, \n  RefreshTokenRequest,\n  UserRole\n} from '../models/user.model';\nimport { environment } from '../../environments/environment';\nimport { ApiService } from './api.service';\n\n/**\n * Service d'authentification pour gérer la connexion/déconnexion et les sessions utilisateur\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  private readonly AUTH_DATA_KEY = 'auth_data';\n  private readonly API_URL = environment.apiUrl;\n  private readonly IS_EXTENSION = environment.isExtension;\n\n  private authStateSubject = new BehaviorSubject<AuthState>({\n    isAuthenticated: false,\n    user: null,\n    token: null,\n    refreshToken: null,\n    tokenExpiration: null\n  });\n\n  public authState$ = this.authStateSubject.asObservable();\n\n  constructor(private http: HttpClient, private apiService: ApiService) {\n    this.loadAuthState();\n    console.log('Auth Service initialisé');\n  }\n\n  /**\n   * Obtenir l'état d'authentification actuel\n   */\n  get currentAuthState(): AuthState {\n    return this.authStateSubject.value;\n  }\n\n  /**\n   * Vérifier si l'utilisateur est authentifié\n   */\n  get isAuthenticated(): boolean {\n    return this.currentAuthState.isAuthenticated && !this.isTokenExpired();\n  }\n\n  /**\n   * Obtenir l'utilisateur actuellement connecté\n   */\n  get currentUser(): User | null {\n    return this.currentAuthState.user;\n  }\n\n  /**\n   * Obtenir le token JWT actuel\n   */\n  get token(): string | null {\n    if (this.isTokenExpired()) {\n      return null;\n    }\n    return this.currentAuthState.token;\n  }\n\n  /**\n   * Authentification avec email et mot de passe\n   * @param credentials Informations d'authentification (email, mot de passe)\n   */\n  loginWithEmail(credentials: EmailAuthCredentials): Observable<AuthResponse> {\n    return this.apiService.post<AuthResponse>('auth/login', credentials)\n      .pipe(\n        tap(response => this.handleAuthResponse(response)),\n        catchError(error => {\n          console.error('Erreur lors de la connexion:', error);\n          return throwError(() => error);\n        })\n      );\n  }\n\n  /**\n   * Authentification avec LinkedIn\n   * @param profile Profil LinkedIn\n   */\n  loginWithLinkedIn(profile: LinkedInProfile): Observable<AuthResponse> {\n    return this.apiService.post<AuthResponse>('auth/linkedin', profile)\n      .pipe(\n        tap(response => this.handleAuthResponse(response)),\n        catchError(error => {\n          console.error('Erreur lors de la connexion avec LinkedIn:', error);\n          return throwError(() => error);\n        })\n      );\n  }\n\n  /**\n   * Inscription d'un nouvel utilisateur\n   * @param user Données de l'utilisateur à inscrire\n   */\n  register(user: UserRegistration): Observable<AuthResponse> {\n    return this.apiService.post<AuthResponse>('auth/register', user)\n      .pipe(\n        tap(response => this.handleAuthResponse(response)),\n        catchError(error => {\n          console.error('Erreur lors de l\\'inscription:', error);\n          return throwError(() => error);\n        })\n      );\n  }\n\n  /**\n   * Compléter l'onboarding de l'utilisateur (choix de rôle, etc.)\n   * @param onboardingData Données d'onboarding\n   */\n  completeOnboarding(onboardingData: UserOnboarding): Observable<AuthResponse> {\n    return this.apiService.post<AuthResponse>('auth/onboarding', onboardingData)\n      .pipe(\n        tap(response => this.handleAuthResponse(response)),\n        catchError(error => {\n          console.error('Erreur lors de l\\'onboarding:', error);\n          return throwError(() => error);\n        })\n      );\n  }\n\n  /**\n   * Rafraîchir le token JWT\n   * @param refreshToken Token de rafraîchissement\n   */\n  refreshToken(refreshToken: string): Observable<AuthResponse> {\n    const request: RefreshTokenRequest = { refreshToken };\n    return this.apiService.post<AuthResponse>('auth/refresh-token', request)\n      .pipe(\n        tap(response => this.handleAuthResponse(response)),\n        catchError(error => {\n          console.error('Erreur lors du rafraîchissement du token:', error);\n          // En cas d'échec, déconnecter l'utilisateur\n          this.logout();\n          return throwError(() => error);\n        })\n      );\n  }\n\n  /**\n   * Vérifier si l'utilisateur a besoin de compléter l'onboarding\n   */\n  needsOnboarding(): boolean {\n    const user = this.currentUser;\n    return !!user && !user.onboardingCompleted;\n  }\n\n  /**\n   * Obtenir le rôle de l'utilisateur actuel\n   */\n  getUserRole(): UserRole | null {\n    const user = this.currentUser;\n    return user ? user.role : null;\n  }\n\n  /**\n   * Déconnexion de l'utilisateur\n   */\n  logout(): Observable<boolean> {\n    // Appel à l'API pour invalider le token côté serveur (optionnel)\n    return this.apiService.post<boolean>('auth/logout', {}).pipe(\n      tap(() => {\n        this.clearAuthState();\n      }),\n      catchError(error => {\n        console.error('Erreur lors de la déconnexion:', error);\n        // Même en cas d'erreur, on efface les données d'authentification côté client\n        this.clearAuthState();\n        return throwError(() => error);\n      })\n    );\n  }\n\n  /**\n   * Vérifier si le token JWT est expiré\n   */\n  private isTokenExpired(): boolean {\n    const expiration = this.currentAuthState.tokenExpiration;\n    if (!expiration) {\n      return true;\n    }\n    return expiration < new Date();\n  }\n\n  /**\n   * Traiter la réponse de l'authentification\n   * @param response Réponse d'authentification de l'API\n   */\n  private handleAuthResponse(response: AuthResponse): void {\n    if (response && response.success) {\n      const expirationDate = new Date(response.expiration);\n      const authState: AuthState = {\n        isAuthenticated: true,\n        user: response.user,\n        token: response.token,\n        refreshToken: response.refreshToken,\n        tokenExpiration: expirationDate\n      };\n      this.saveAuthState(authState);\n      this.authStateSubject.next(authState);\n    }\n  }\n\n  /**\n   * Sauvegarder l'état d'authentification dans le localStorage\n   */\n  private saveAuthState(authState: AuthState): void {\n    try {\n      const state = {\n        ...authState,\n        tokenExpiration: authState.tokenExpiration ? authState.tokenExpiration.toISOString() : null\n      };\n      localStorage.setItem(this.AUTH_DATA_KEY, JSON.stringify(state));\n    } catch (error) {\n      console.error('Erreur lors de la sauvegarde des données d\\'authentification:', error);\n    }\n  }\n\n  /**\n   * Charger l'état d'authentification depuis le localStorage\n   */\n  private loadAuthState(): void {\n    try {\n      const storedState = localStorage.getItem(this.AUTH_DATA_KEY);\n      if (storedState) {\n        const parsedState = JSON.parse(storedState);\n        const authState: AuthState = {\n          isAuthenticated: parsedState.isAuthenticated,\n          user: parsedState.user,\n          token: parsedState.token,\n          refreshToken: parsedState.refreshToken,\n          tokenExpiration: parsedState.tokenExpiration ? new Date(parsedState.tokenExpiration) : null\n        };\n        \n        // Vérifier si le token est expiré\n        if (authState.isAuthenticated && this.isTokenExpired()) {\n          // Si le token est expiré, tenter de le rafraîchir automatiquement\n          const refreshToken = authState.refreshToken;\n          if (refreshToken) {\n            this.refreshToken(refreshToken).subscribe({\n              error: () => this.clearAuthState()\n            });\n          } else {\n            this.clearAuthState();\n          }\n        } else {\n          this.authStateSubject.next(authState);\n        }\n      }\n    } catch (error) {\n      console.error('Erreur lors du chargement des données d\\'authentification:', error);\n      this.clearAuthState();\n    }\n  }\n\n  /**\n   * Effacer l'état d'authentification\n   */\n  private clearAuthState(): void {\n    localStorage.removeItem(this.AUTH_DATA_KEY);\n    this.authStateSubject.next({\n      isAuthenticated: false,\n      user: null,\n      token: null,\n      refreshToken: null,\n      tokenExpiration: null\n    });\n  }\n}","import { Injectable } from '@angular/core';\nimport { Observable, of, throwError } from 'rxjs';\nimport { map, catchError, tap, delay } from 'rxjs/operators';\nimport { Consultant, ConsultantWithTags, ExperienceLevel, AvailabilityStatus } from '../models/consultant.model';\nimport { environment } from '../../environments/environment';\nimport { ApiService } from './api.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConsultantService {\n  private mockData: Consultant[] = [];\n\n  constructor(private apiService: ApiService) { \n    console.log('ConsultantService initialized');\n    \n    // Générons quand même les données mockées en cas de besoin\n    this.generateMockData();\n  }\n\n  /**\n   * Génère des données de test pour le développement\n   * NOTE: Ces données sont uniquement pour le développement en local et ne sont plus utilisées\n   * Les données réelles proviennent exclusivement de l'API\n   */\n  private generateMockData(): void {\n    console.log('[ConsultantService] Génération de données mockées pour le développement (inutilisées)');\n    const roles = ['Développeur Full Stack', 'Data Scientist', 'DevOps Engineer', 'UX/UI Designer', 'Product Manager', 'Architecte Logiciel', 'Mobile Developer', 'Frontend Developer', 'Backend Developer', 'SRE/Cloud Engineer'];\n    const types = ['Freelance', 'Salarié', 'Consultant'];\n    const locations = ['Paris', 'Lyon', 'Marseille', 'Toulouse', 'Bordeaux', 'Lille', 'Nantes', 'Strasbourg', 'Remote', 'Hybride', 'Full-Remote', 'Luxembourg', 'Bruxelles'];\n    const experiences: ExperienceLevel[] = ['less_than_3', 'between_3_and_10', 'more_than_10'];\n    const availabilities: AvailabilityStatus[] = [0, 1, 2]; // 0 = available, 1 = soon, 2 = unavailable\n    \n    // Entreprises pour les expériences professionnelles\n    const companies = [\n      'Accenture', 'Capgemini', 'Sopra Steria', 'SNCF', 'Orange', 'Total', 'BNP Paribas', \n      'Société Générale', 'Crédit Agricole', 'AXA', 'Engie', 'EDF', 'L\\'Oréal', 'Carrefour', \n      'Google', 'Microsoft', 'Amazon', 'Apple', 'Facebook', 'Twitter', 'Airbnb', 'Uber', \n      'Doctolib', 'Deezer', 'Blablacar', 'OVH', 'Thales', 'Atos', 'IBM', 'HP', 'Dell', \n      'Allianz', 'Axa', 'MAIF', 'La Poste', 'Air France', 'RATP', 'SNCF'\n    ];\n    \n    const skillsPool = [\n      'JavaScript', 'TypeScript', 'Angular', 'React', 'Vue.js', 'Node.js', 'Python', 'Java', 'C#', '.NET',\n      'AWS', 'Azure', 'GCP', 'Docker', 'Kubernetes', 'CI/CD', 'Jenkins', 'Git', 'GitHub Actions',\n      'SQL', 'NoSQL', 'MongoDB', 'PostgreSQL', 'MySQL', 'Oracle', 'Redis',\n      'HTML', 'CSS', 'SASS', 'LESS', 'Tailwind CSS', 'Bootstrap', 'Material Design',\n      'REST API', 'GraphQL', 'gRPC', 'WebSockets', 'Microservices', 'Serverless',\n      'Agile', 'Scrum', 'Kanban', 'Jira', 'Confluence', 'TDD', 'BDD', 'DDD',\n      'Machine Learning', 'AI', 'Deep Learning', 'NLP', 'Computer Vision', 'Data Analysis',\n      'Mobile', 'iOS', 'Android', 'Kotlin', 'Swift', 'React Native', 'Flutter'\n    ];\n    \n    // Domaines d'expertise spécifiques \n    const expertiseDomains = [\n      'Architecture logicielle', 'Cybersécurité', 'Cloud computing', 'DevOps', 'FinTech', \n      'E-commerce', 'Santé', 'Transport', 'Énergie', 'Télécommunications', 'Médias', \n      'Éducation', 'Retail', 'Industrie 4.0', 'Smart City', 'IoT', 'Blockchain', \n      'Intelligence artificielle', 'Big Data', 'Réalité virtuelle', 'Réalité augmentée', \n      'User experience', 'Accessibilité', 'Sécurité des données', 'Protection de la vie privée',\n      'Transformation digitale', 'Innovation', 'Conduite du changement', 'Agilité à l\\'échelle', \n      'Performance web', 'Mobile first', 'Progressive Web Apps', 'Microservices'\n    ];\n    \n    // Secteurs d'activité\n    const activitySectors = [\n      'Banque & Finance', 'Assurance', 'Santé', 'Pharmaceutique', 'Luxe', \n      'Commerce de détail', 'Transport & Logistique', 'Aéronautique', 'Automobile', \n      'Télécommunications', 'Média & Divertissement', 'Énergie', 'Industrie manufacturière', \n      'Services publics', 'Défense', 'Éducation', 'Agroalimentaire', 'Hôtellerie & Restauration', \n      'Immobilier', 'Construction', 'High-Tech', 'Environnement & Développement durable', \n      'Tourisme', 'Sport', 'Mode & Textile', 'Conseil', 'E-commerce'\n    ];\n\n    const messages = [\n      \"Bonjour,\\n\\nJe suis disponible pour des missions de conseil en architecture de systèmes distribués et infrastructures cloud.\\n\\nMon expertise :\\n- Expérience approfondie avec AWS, GCP et Azure\\n- Spécialiste en migration vers le cloud\\n- Optimisation des coûts d'infrastructure\\n\\nJ'ai aidé plus de 15 entreprises à réduire leurs coûts cloud de 30% en moyenne tout en améliorant la performance et la fiabilité de leurs systèmes.\\n\\nÀ l'écoute de nouvelles opportunités à partir de mai 2025.\\n\\n#technique #architecture #devops #cloud #costoptimization\",\n      \n      \"Bonjour,\\n\\nExpert en solutions #cloud et #cybersécurité, je suis passionné par les technologies émergentes et la sécurisation des infrastructures critiques.\\n\\nProfil :\\n- +10 ans d'expérience en sécurité des SI\\n- Certifications CISSP et AWS Security Specialist\\n- Spécialiste des normes ISO27001 et RGPD\\n\\nRécemment, j'ai dirigé des audits de sécurité pour des entreprises du CAC 40 et implémenté des stratégies de défense qui ont réduit les incidents de 75%.\\n\\nDisponible immédiatement pour des missions d'audit ou de conseil stratégique.\\n\\n#security #compliance #audit #training\",\n      \n      \"Bonjour à tous,\\n\\nDéveloppeur full-stack avec 8 ans d'expérience en #javascript #react #nodejs, je recherche de nouveaux défis techniques.\\n\\nMes compétences :\\n- Architecture microservices\\n- Optimisation de performance\\n- Certifié AWS Solutions Architect et MongoDB Developer\\n\\nMa dernière réalisation : refonte complète d'une plateforme e-commerce (10M+ visiteurs) avec mise en place d'une architecture JAMstack qui a amélioré les temps de chargement de 300%.\\n\\nDisponible dès juillet pour des projets innovants.\\n\\n#fullstack #performance #architecture #ecommerce\",\n      \n      \"Bonjour,\\n\\nData Scientist spécialisé #MachineLearning et #DeepLearning, je suis actuellement disponible pour des missions en remote.\\n\\nMon parcours :\\n- PhD en Intelligence Artificielle (École Polytechnique)\\n- Expert TensorFlow, PyTorch et scikit-learn\\n- Spécialiste en modèles prédictifs et détection de fraudes\\n\\nMon projet récent : système de détection de fraude financière avec réduction des faux positifs de 60% tout en maintenant un taux de détection >95%.\\n\\nÀ la recherche d'opportunités à fort impact social ou environnemental.\\n\\n#DataScience #AI #analytics #python\",\n      \n      \"Bonjour,\\n\\nConsultant UX/UI à la recherche d'une nouvelle opportunité dans le secteur de la santé ou de l'éducation.\\n\\nMon expertise :\\n- Portfolio de +30 projets (startups et grandes entreprises)\\n- Recherche utilisateur, prototypage, tests d'utilisabilité\\n- Maîtrise de Figma, Adobe XD et Sketch\\n\\nRécemment, j'ai dirigé la refonte UX d'une application de santé mentale (500K+ utilisateurs), améliorant la rétention de 40%.\\n\\nJe privilégie les projets à impact social positif.\\n\\nDisponible dès maintenant.\\n\\n#design #frontend #healthcare #edtech #accessibility\",\n      \n      \"Bonjour,\\n\\nArchitecte logiciel expérimenté dans les environnements critiques à haute disponibilité.\\n\\nMes domaines d'expertise :\\n- Conception de systèmes distribués\\n- Traitement de données en temps réel\\n- Architectures événementielles (Kafka, RabbitMQ, Apache Flink)\\n\\nJ'ai conçu des architectures critiques pour les secteurs bancaire et télécoms garantissant une disponibilité de 99,999%.\\n\\nMa spécialité : transformer des systèmes monolithiques en architectures microservices modernes sans perturbation opérationnelle.\\n\\nDisponible à partir de juin 2025.\\n\\n#reliability #architecture #distributed #microservices\",\n      \n      \"Bonjour,\\n\\nDéveloppeur mobile avec +5 ans d'expérience en développement natif et cross-platform.\\n\\nMes technologies :\\n- React Native, Flutter\\n- Kotlin, Swift\\n- AR, ML on-device\\n\\nJ'ai publié plus de 15 applications (App Store/Google Play) totalisant des millions d'utilisateurs.\\n\\nProjet récent : application de fitness ayant atteint le Top 10 de sa catégorie sur l'App Store avec une note de 4,8/5 (50K+ avis).\\n\\nJe suis particulièrement intéressé par les projets innovants utilisant l'AR ou le ML.\\n\\nDisponible immédiatement.\\n\\n#mobile #reactnative #flutter #performance #ux\",\n      \"Expert en solutions DevOps et CI/CD avec une solide expérience en automatisation d'infrastructures et déploiements. Maîtrise de Kubernetes, Terraform, Ansible, Jenkins, GitHub Actions et GitLab CI. J'ai mis en place des pipelines CI/CD robustes pour des équipes de développement de toutes tailles, réduisant les temps de déploiement de plusieurs heures à quelques minutes. #docker #kubernetes #automation #gitops #terraform #IaC\",\n      \"Ingénieur backend passionné par les API performantes et les architectures scalables. Expertise en Java, Spring Boot, Quarkus et microservices. J'ai conçu et implémenté des systèmes capables de traiter des milliers de transactions par seconde avec une latence minimale. Expérience en optimisation de bases de données relationnelles et NoSQL. #java #spring #microservices #performance #scalability #databases\",\n      \"Product Manager orienté données avec background technique en développement et analyse de données. J'ai dirigé le développement de produits SaaS B2B dans les secteurs de la finance et du marketing, en mettant l'accent sur l'expérience utilisateur et l'exploitation des données pour la prise de décision. Certifié Scrum Product Owner et Google Analytics. #produit #analytics #agile #saas #b2b #finance\",\n      \"Spécialiste en cybersécurité pour applications cloud avec expertise en sécurisation d'environnements AWS, Azure et GCP. Expérience en tests d'intrusion, analyse de vulnérabilités et réponse aux incidents. J'ai aidé plusieurs entreprises à obtenir des certifications de sécurité (ISO27001, SOC2) et à mettre en place des pratiques de DevSecOps. Certifié CEH, OSCP et AWS Security Specialist. #security #pentesting #devsecops #cloud #compliance #certification\",\n      \"Consultant en transformation digitale pour le secteur financier avec plus de 12 ans d'expérience. J'accompagne les banques et assurances dans leur modernisation technologique et organisationnelle. Expertise en optimisation de processus, adoption de méthodologies agiles et mise en place de plateformes API. Ancien directeur technique dans une grande banque européenne. #fintech #agile #transformation #banking #insurance #api\",\n      \"Développeur .NET avec forte expertise Azure et plus de 7 ans d'expérience en développement d'applications d'entreprise. Spécialiste ASP.NET Core, Entity Framework, Azure Functions et Azure DevOps. J'ai conçu et implémenté des systèmes critiques pour des clients dans les secteurs de la santé, de la finance et de l'industrie. Microsoft Certified Azure Developer Associate. #csharp #dotnet #azure #cloud #microsoft #enterprise\",\n      \"Expert en solutions BigData et DataLakes avec expérience approfondie en conception et implémentation d'architectures de traitement de données à grande échelle. Maîtrise de Hadoop, Spark, Databricks, Snowflake et les services AWS/Azure pour le Big Data. J'ai dirigé des projets de migration vers le cloud et d'implémentation de solutions data pour de grandes entreprises internationales. #hadoop #spark #databricks #bigdata #datalake #cloud\",\n      \"Consultant en accessibilité web et mobile avec 6 ans d'expérience dans la conception et l'audit d'interfaces inclusives. Je travaille avec les équipes produit et développement pour garantir la conformité aux normes WCAG et l'inclusion de tous les utilisateurs. J'ai réalisé plus de 50 audits d'accessibilité et formé des équipes aux bonnes pratiques. Défenseur de l'inclusion numérique et intervenant régulier dans des conférences sur l'accessibilité. #a11y #inclusive #standards #wcag #ux #formation\"\n    ];\n\n    for (let i = 1; i <= 100; i++) {\n      const locked = Math.random() > 0.7;\n      const randomRole = roles[Math.floor(Math.random() * roles.length)];\n      const randomType = types[Math.floor(Math.random() * types.length)];\n      const randomLocation = locations[Math.floor(Math.random() * locations.length)];\n      const randomExperience = experiences[Math.floor(Math.random() * experiences.length)];\n      const randomAvailability = availabilities[Math.floor(Math.random() * availabilities.length)];\n      \n      // Generate random skills (between 3 and 7)\n      const randomSkillsCount = Math.floor(Math.random() * 5) + 3;\n      const shuffledSkills = [...skillsPool].sort(() => 0.5 - Math.random());\n      const randomSkills = shuffledSkills.slice(0, randomSkillsCount);\n      \n      // Generate random message\n      const randomMessage = messages[Math.floor(Math.random() * messages.length)];\n      \n      // Génération d'emplacements multiples pour certains consultants (1 à 3 lieux)\n      let consultantLocations = randomLocation;\n      \n      // Pour 40% des consultants, ajouter des emplacements multiples\n      if (Math.random() < 0.4) {\n        // Sélectionner 1 ou 2 lieux supplémentaires différents du premier\n        const additionalLocationsCount = Math.floor(Math.random() * 2) + 1;\n        const availableLocations = locations.filter(loc => loc !== randomLocation);\n        const shuffledLocations = [...availableLocations].sort(() => 0.5 - Math.random());\n        const additionalLocations = shuffledLocations.slice(0, additionalLocationsCount);\n        \n        // Combiner les emplacements avec des virgules\n        consultantLocations = [randomLocation, ...additionalLocations].join(', ');\n      }\n      \n      // Génération d'expertises aléatoires (entre 2 et 4)\n      const randomExpertiseCount = Math.floor(Math.random() * 3) + 2;\n      const shuffledExpertises = [...expertiseDomains].sort(() => 0.5 - Math.random());\n      const randomExpertises = shuffledExpertises.slice(0, randomExpertiseCount);\n      \n      // Génération de secteurs d'activité (entre 1 et 3)\n      const sectorCount = Math.floor(Math.random() * 3) + 1;\n      const shuffledSectors = [...activitySectors].sort(() => 0.5 - Math.random());\n      const randomSectors = shuffledSectors.slice(0, sectorCount);\n      \n      // Génération d'expériences professionnelles aléatoires (entre 1 et 3)\n      const experienceCount = Math.floor(Math.random() * 3) + 1;\n      const randomExperiences = [];\n      \n      // Création d'expériences aléatoires\n      for (let j = 0; j < experienceCount; j++) {\n        const randomCompany = companies[Math.floor(Math.random() * companies.length)];\n        const roleForExperience = roles[Math.floor(Math.random() * roles.length)];\n        const isCurrent = j === 0; // La première expérience est l'expérience actuelle\n        \n        randomExperiences.push({\n          role: roleForExperience,\n          company: randomCompany,\n          isCurrent: isCurrent\n        });\n      }\n      \n      this.mockData.push({\n        id: `100${i}`,\n        role: randomRole,\n        linkedinUrl: 'https://www.linkedin.com/in/example',\n        phone: locked ? null : '+33 6 12 34 56 78',\n        email: locked ? null : 'contact@example.com',\n        locked: locked,\n        type: randomType,\n        skills: randomSkills,\n        location: consultantLocations,\n        experience: randomExperience,\n        phoneValidated: !locked,\n        emailValidated: !locked,\n        linkedinValidated: true,\n        availability: randomAvailability,\n        message: randomMessage,\n        experiences: randomExperiences,\n        expertises: randomExpertises,\n        sectors: randomSectors\n      });\n    }\n  }\n\n  /**\n   * Get all consultants\n   */\n  getConsultants(): Observable<ConsultantWithTags[]> {\n    console.log('[ConsultantService] Fetching all consultants from API');\n    \n    // Use the real API with proper error handling\n    return this.apiService.get<Consultant[]>('consultants')\n      .pipe(\n        tap(response => {\n          console.log('[ConsultantService] All consultants API Response received - length:', response?.length || 0);\n          if (response?.length === 0) {\n            console.warn('[ConsultantService] API returned empty consultant array');\n          }\n        }),\n        map(consultants => {\n          // Vérifier que consultants est bien un tableau\n          if (!Array.isArray(consultants)) {\n            console.error('[ConsultantService] API did not return an array of consultants:', consultants);\n            return [];\n          }\n          console.log(`[ConsultantService] Processing ${consultants.length} consultants, adding tags`);\n          return consultants.map(consultant => ({\n            ...consultant,\n            tags: this.extractTags(consultant?.message || '')\n          }));\n        }),\n        catchError(error => {\n          console.error('[ConsultantService] Error fetching all consultants:', error);\n          // Retourner l'erreur au lieu d'utiliser des données de repli\n          return throwError(() => new Error('Impossible de récupérer les consultants. ' + \n            (error.status === 0 ? \n              'Le serveur API est peut-être indisponible.' : \n              `Erreur ${error.status}: ${error.message || 'message inconnu'}`)));\n        })\n      );\n  }\n  \n  /**\n   * Get consultants with pagination\n   */\n  getPagedConsultants(page: number, pageSize: number): Observable<ConsultantWithTags[]> {\n    console.log(`[ConsultantService] Fetching paged consultants`);\n    console.log(`[ConsultantService] Page: ${page}, PageSize: ${pageSize}`);\n    \n    // Pour le moment, nous utilisons l'API complète et simulons la pagination côté client\n    return this.apiService.get<Consultant[]>('consultants')\n      .pipe(\n        tap(response => {\n          console.log('[ConsultantService] API Response received - length:', response?.length || 0);\n          if (response?.length === 0) {\n            console.warn('[ConsultantService] API returned empty consultant array');\n          }\n        }),\n        map(consultants => {\n          // Vérifier que consultants est bien un tableau\n          if (!Array.isArray(consultants)) {\n            console.error('[ConsultantService] API did not return an array of consultants:', consultants);\n            return [];\n          }\n          // Simuler la pagination côté client\n          const startIndex = (page - 1) * pageSize;\n          const endIndex = startIndex + pageSize;\n          console.log(`[ConsultantService] Slice from ${startIndex} to ${endIndex}`);\n          return consultants.slice(startIndex, endIndex);\n        }),\n        map(consultants => {\n          console.log(`[ConsultantService] Processing ${consultants.length} consultants, adding tags`);\n          return consultants.map(consultant => ({\n            ...consultant,\n            tags: this.extractTags(consultant?.message || '')\n          }));\n        }),\n        catchError(error => {\n          console.error('[ConsultantService] Error fetching paged consultants:', error);\n          // Retourner l'erreur au lieu d'utiliser des données de repli\n          return throwError(() => new Error('Impossible de récupérer les consultants paginés. ' + \n            (error.status === 0 ? \n              'Le serveur API est peut-être indisponible.' : \n              `Erreur ${error.status}: ${error.message || 'message inconnu'}`)));\n        })\n      );\n  }\n\n  /**\n   * Extract hashtags from a message\n   */\n  extractTags(message: string): string[] {\n    const tags: string[] = [];\n    const regex = /#(\\w+)/g;\n    let match;\n    \n    while ((match = regex.exec(message)) !== null) {\n      tags.push(match[1]);\n    }\n    \n    return tags;\n  }\n\n  /**\n   * Filter consultants based on search criteria\n   */\n  filterConsultants(\n    consultants: ConsultantWithTags[], \n    searchText?: string, \n    skills?: string[], \n    availability?: string, \n    experience?: string,\n    location?: string\n  ): ConsultantWithTags[] {\n    return consultants.filter(consultant => {\n      // Filter by search text\n      if (searchText && searchText.trim() !== '') {\n        const searchLower = searchText.toLowerCase();\n        const messageMatch = consultant.message.toLowerCase().includes(searchLower);\n        const roleMatch = consultant.role.toLowerCase().includes(searchLower);\n        const locationMatch = consultant.location.toLowerCase().includes(searchLower);\n        const tagsMatch = consultant.tags.some(tag => tag.toLowerCase().includes(searchLower));\n        \n        if (!messageMatch && !roleMatch && !locationMatch && !tagsMatch) {\n          return false;\n        }\n      }\n      \n      // Filter by skills\n      if (skills && skills.length > 0) {\n        if (!skills.every(skill => consultant.skills.includes(skill))) {\n          return false;\n        }\n      }\n      \n      // Filter by availability\n      if (availability && availability !== 'all') {\n        // Convert string to number for comparison\n        const availabilityNum = parseInt(availability, 10);\n        if (consultant.availability !== availabilityNum) {\n          return false;\n        }\n      }\n      \n      // Filter by experience\n      if (experience && experience !== 'all') {\n        if (consultant.experience !== experience) {\n          return false;\n        }\n      }\n      \n      // Filter by location\n      if (location && location !== 'all') {\n        // Check if any of the consultant's locations match the filter\n        const consultantLocations = consultant.location.split(',').map(loc => loc.trim());\n        if (!consultantLocations.includes(location)) {\n          return false;\n        }\n      }\n      \n      return true;\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor,\n  HttpErrorResponse,\n  HttpResponse\n} from '@angular/common/http';\nimport { Observable, BehaviorSubject, throwError } from 'rxjs';\nimport { catchError, filter, switchMap, take, finalize, tap } from 'rxjs/operators';\nimport { AuthService } from './auth.service';\n\n/**\n * Intercepteur HTTP pour gérer l'ajout du token JWT et le rafraîchissement automatique\n */\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n  private isRefreshing = false;\n  private refreshTokenSubject: BehaviorSubject<string | null> = new BehaviorSubject<string | null>(null);\n\n  constructor(private authService: AuthService) {}\n\n  /**\n   * Intercepter les requêtes HTTP pour ajouter le token JWT et gérer les erreurs d'authentification\n   * @param request Requête HTTP originale\n   * @param next Handler de la requête\n   * @returns Observable de l'événement HTTP\n   */\n  intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\n    // Log la requête HTTP\n    console.log(`API Request:`, {\n      method: request.method,\n      url: request.url,\n      headers: request.headers.keys().map(key => `${key}: ${request.headers.get(key)}`),\n      body: request.body\n    });\n    \n    // Calcul du temps d'envoi de la requête\n    const startTime = Date.now();\n    \n    // Vérifier si la requête doit éviter l'ajout du token\n    if (this.shouldSkipAuthHeader(request)) {\n      return next.handle(request).pipe(\n        tap(event => {\n          if (event instanceof HttpResponse) {\n            // Log la réponse HTTP\n            const endTime = Date.now();\n            console.log(`API Response (${endTime - startTime}ms):`, {\n              url: request.url,\n              status: event.status,\n              statusText: event.statusText,\n              body: event.body\n            });\n          }\n        }),\n        catchError(error => {\n          // Log l'erreur HTTP\n          const endTime = Date.now();\n          console.error(`API Error (${endTime - startTime}ms):`, {\n            url: request.url,\n            error: error.message,\n            status: error.status,\n            statusText: error.statusText\n          });\n          return throwError(() => error);\n        })\n      );\n    }\n\n    // Récupérer le token JWT actuel\n    const token = this.authService.token;\n\n    // Ajouter le token JWT à la requête si disponible\n    if (token) {\n      request = this.addToken(request, token);\n    }\n\n    // Traiter la requête\n    return next.handle(request).pipe(\n      tap(event => {\n        if (event instanceof HttpResponse) {\n          // Log la réponse HTTP\n          const endTime = Date.now();\n          console.log(`API Response (${endTime - startTime}ms):`, {\n            url: request.url,\n            status: event.status,\n            statusText: event.statusText,\n            body: event.body\n          });\n        }\n      }),\n      catchError(error => {\n        // Log l'erreur HTTP\n        const endTime = Date.now();\n        console.error(`API Error (${endTime - startTime}ms):`, {\n          url: request.url,\n          error: error.message,\n          status: error.status,\n          statusText: error.statusText\n        });\n        \n        // Gérer les erreurs 401 (Non autorisé)\n        if (error instanceof HttpErrorResponse && error.status === 401) {\n          return this.handle401Error(request, next);\n        } else {\n          return throwError(() => error);\n        }\n      })\n    );\n  }\n\n  /**\n   * Décider si la requête doit éviter l'ajout du header d'authentification\n   * @param request Requête HTTP\n   * @returns Booléen indiquant si l'on doit sauter l'ajout du header\n   */\n  private shouldSkipAuthHeader(request: HttpRequest<unknown>): boolean {\n    // Les requêtes d'authentification ne doivent pas ajouter le token\n    const url = request.url.toLowerCase();\n    return (\n      url.includes('/auth/login') ||\n      url.includes('/auth/register') ||\n      url.includes('/auth/linkedin') ||\n      url.includes('/auth/refresh-token')\n    );\n  }\n\n  /**\n   * Ajouter le token JWT à l'en-tête Authorization de la requête\n   * @param request Requête HTTP originale\n   * @param token Token JWT\n   * @returns Requête HTTP avec le token\n   */\n  private addToken(request: HttpRequest<unknown>, token: string): HttpRequest<unknown> {\n    return request.clone({\n      setHeaders: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n  }\n\n  /**\n   * Gérer les erreurs 401 (Non autorisé) en tentant de rafraîchir le token\n   * @param request Requête HTTP originale\n   * @param next Handler de la requête\n   * @returns Observable de l'événement HTTP\n   */\n  private handle401Error(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\n    if (!this.isRefreshing) {\n      this.isRefreshing = true;\n      this.refreshTokenSubject.next(null);\n\n      const refreshToken = this.authService.currentAuthState.refreshToken;\n\n      if (refreshToken) {\n        return this.authService.refreshToken(refreshToken).pipe(\n          switchMap(response => {\n            this.isRefreshing = false;\n            this.refreshTokenSubject.next(response.token);\n            return next.handle(this.addToken(request, response.token));\n          }),\n          catchError(error => {\n            this.isRefreshing = false;\n            this.authService.logout();\n            return throwError(() => error);\n          }),\n          finalize(() => {\n            this.isRefreshing = false;\n          })\n        );\n      } else {\n        // Pas de refresh token, forcer la déconnexion\n        this.isRefreshing = false;\n        this.authService.logout();\n        return throwError(() => new Error('Session expirée.'));\n      }\n    } else {\n      // Si un rafraîchissement est déjà en cours, attendre qu'il soit terminé\n      return this.refreshTokenSubject.pipe(\n        filter(token => token !== null),\n        take(1),\n        switchMap(token => next.handle(this.addToken(request, token as string)))\n      );\n    }\n  }\n}","import { Component, OnInit } from '@angular/core';\nimport { Router, NavigationEnd } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { filter } from 'rxjs/operators';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { AuthService } from './services/auth.service';\nimport { User } from './models/user.model';\nimport { ModalService } from './services/modal.service';\nimport { environment } from '../environments/environment';\nimport { ApiService } from './services/api.service';\nimport { ConsultantService } from './services/consultant.service';\nimport { ConsultantListComponent } from './components/consultant-list/consultant-list.component';\nimport { ConsultantCardComponent } from './components/consultant-card/consultant-card.component';\nimport { LoginComponent } from './components/auth/login/login.component';\n\n@Component({\n  selector: 'app-debug',\n  standalone: true,\n  imports: [\n    CommonModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule\n  ],\n  template: `\n    <div class=\"bg-white p-4 shadow-lg fixed top-0 left-0 right-0 z-50\">\n      <h1 class=\"text-xl font-bold\">FastConnect Debug Console</h1>\n      <div class=\"mt-2\">\n        <p><strong>Environment:</strong> {{ debugInfo.environment }}</p>\n        <p><strong>API URL:</strong> {{ debugInfo.apiUrl }}</p>\n        <p><strong>isExtension:</strong> {{ debugInfo.isExtension }}</p>\n        <p><strong>Base href:</strong> {{ debugInfo.baseHref }}</p>\n        <button (click)=\"testApiConnection()\" class=\"mt-2 px-4 py-2 bg-blue-500 text-white rounded\">\n          Test API Connection\n        </button>\n        <div *ngIf=\"apiStatus\" class=\"mt-2 p-2\" [ngClass]=\"apiStatus === 'OK' ? 'bg-green-100' : 'bg-red-100'\">\n          <p>API Status: {{ apiStatus }}</p>\n          <p *ngIf=\"apiData\">Data: {{ apiData.length }} consultants loaded</p>\n        </div>\n      </div>\n    </div>\n  `,\n})\nexport class AppDebugComponent implements OnInit {\n  debugInfo = {\n    baseHref: document.getElementsByTagName('base')[0]?.getAttribute('href') || 'undefined',\n    location: window.location.href,\n    environment: environment.envName || 'undefined',\n    apiUrl: environment.apiUrl || 'undefined',\n    isExtension: environment.isExtension,\n    appStartTime: new Date().toISOString()\n  };\n\n  apiStatus: string | null = null;\n  apiData: any[] | null = null;\n\n  constructor(\n    private apiService: ApiService,\n    private consultantService: ConsultantService\n  ) {\n    console.log('🔍 FastConnect Debug Module initialisé:', this.debugInfo);\n  }\n\n  ngOnInit() {\n    console.log('Debug component initialized');\n  }\n\n  testApiConnection() {\n    this.apiStatus = 'Testing...';\n    \n    this.consultantService.getConsultants().subscribe(\n      (data) => {\n        console.log('API response received:', data);\n        this.apiStatus = 'OK';\n        this.apiData = data;\n      },\n      (error) => {\n        console.error('API error:', error);\n        this.apiStatus = 'Error: ' + (error.message || 'Unknown error');\n      }\n    );\n  }\n}","import { Injectable } from '@angular/core';\nimport {\n  CanActivate,\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot,\n  Router\n} from '@angular/router';\nimport { AuthService } from '../services/auth.service';\nimport { UserRole } from '../models/user.model';\n\n/**\n * Garde qui vérifie si l'utilisateur est authentifié\n * Utilisé pour protéger les routes qui nécessitent une authentification\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  constructor(private authService: AuthService, private router: Router) {}\n\n  /**\n   * Vérifie si l'utilisateur peut accéder à la route\n   * @param route Information sur la route activée\n   * @param state État du routeur\n   * @returns Booléen indiquant si l'accès est autorisé\n   */\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): boolean {\n    // Vérifier si l'utilisateur est authentifié\n    if (!this.authService.isAuthenticated) {\n      // Rediriger vers la page de connexion\n      this.router.navigate(['/login'], {\n        queryParams: { returnUrl: state.url }\n      });\n      return false;\n    }\n\n    // Si l'utilisateur doit compléter l'onboarding, rediriger vers cette page (sauf si déjà sur cette page)\n    if (this.authService.needsOnboarding() && !state.url.includes('/onboarding')) {\n      this.router.navigate(['/onboarding']);\n      return false;\n    }\n\n    return true;\n  }\n}\n\n/**\n * Garde qui vérifie si l'utilisateur n'est PAS authentifié\n * Utilisé pour protéger les routes qui ne sont accessibles qu'aux invités (login, register)\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class GuestGuard implements CanActivate {\n  constructor(private authService: AuthService, private router: Router) {}\n\n  /**\n   * Vérifie si l'utilisateur peut accéder à la route en tant qu'invité\n   * @param route Information sur la route activée\n   * @param state État du routeur\n   * @returns Booléen indiquant si l'accès est autorisé\n   */\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): boolean {\n    // Si l'utilisateur est authentifié, rediriger vers la page d'accueil\n    if (this.authService.isAuthenticated) {\n      // Si l'utilisateur doit compléter l'onboarding, rediriger vers cette page\n      if (this.authService.needsOnboarding()) {\n        this.router.navigate(['/onboarding']);\n      } else {\n        this.router.navigate(['/']);\n      }\n      return false;\n    }\n\n    return true;\n  }\n}\n\n/**\n * Garde qui vérifie si l'utilisateur doit compléter l'onboarding\n * Utilisé pour protéger la route d'onboarding\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class OnboardingGuard implements CanActivate {\n  constructor(private authService: AuthService, private router: Router) {}\n\n  /**\n   * Vérifie si l'utilisateur doit accéder à la page d'onboarding\n   * @param route Information sur la route activée\n   * @param state État du routeur\n   * @returns Booléen indiquant si l'accès est autorisé\n   */\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): boolean {\n    // Vérifier si l'utilisateur est authentifié\n    if (!this.authService.isAuthenticated) {\n      this.router.navigate(['/login']);\n      return false;\n    }\n\n    // Si l'utilisateur a déjà complété l'onboarding, rediriger vers la page d'accueil\n    if (!this.authService.needsOnboarding()) {\n      this.router.navigate(['/']);\n      return false;\n    }\n\n    return true;\n  }\n}\n\n/**\n * Garde qui vérifie le rôle de l'utilisateur\n * Utilisé pour protéger les routes qui nécessitent un rôle spécifique\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class RoleGuard implements CanActivate {\n  constructor(private authService: AuthService, private router: Router) {}\n\n  /**\n   * Vérifie si l'utilisateur a le rôle requis pour accéder à la route\n   * @param route Information sur la route activée, contenant les rôles requis\n   * @param state État du routeur\n   * @returns Booléen indiquant si l'accès est autorisé\n   */\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): boolean {\n    // Vérifier si l'utilisateur est authentifié\n    if (!this.authService.isAuthenticated) {\n      this.router.navigate(['/login'], {\n        queryParams: { returnUrl: state.url }\n      });\n      return false;\n    }\n\n    // Récupérer les rôles autorisés depuis les données de la route\n    const allowedRoles = route.data['roles'] as UserRole[];\n    if (!allowedRoles || allowedRoles.length === 0) {\n      return true; // Si aucun rôle n'est spécifié, l'accès est autorisé\n    }\n\n    // Vérifier si l'utilisateur a l'un des rôles requis\n    const userRole = this.authService.getUserRole();\n    if (!userRole || !allowedRoles.includes(userRole)) {\n      this.router.navigate(['/forbidden']);\n      return false;\n    }\n\n    return true;\n  }\n}","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ConsultantWithTags, ExperienceLevel } from '../../models/consultant.model';\n\n@Component({\n  selector: 'app-consultant-card',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './consultant-card.component.html',\n  styleUrls: ['./consultant-card.component.css']\n})\nexport class ConsultantCardComponent {\n  @Input() consultant!: ConsultantWithTags;\n  @Input() expanded: boolean = false;\n  @Input() messageExpanded: boolean = false;\n  @Input() dropdownOpen: boolean = false;\n  @Input() detailsExpanded: boolean = false; // Nouvelle propriété pour l'affichage des détails\n\n  @Output() linkedinClick = new EventEmitter<string>();\n  @Output() phoneClick = new EventEmitter<string | null>();\n  @Output() emailClick = new EventEmitter<string | null>();\n  @Output() toggleExpansion = new EventEmitter<{id: string, expanded: boolean}>();\n  @Output() toggleDropdown = new EventEmitter<{id: string, event: MouseEvent}>();\n  @Output() toggleMessageExpansion = new EventEmitter<{id: string, event: MouseEvent}>();\n  @Output() toggleDetailsExpansion = new EventEmitter<{id: string, event: MouseEvent}>(); // Nouvel événement pour afficher/masquer les détails\n\n  /**\n   * Get the experience level as 1-3 bars\n   */\n  getSeniorityBars(experience: ExperienceLevel): number {\n    if (experience === 'less_than_3') return 1;\n    if (experience === 'between_3_and_10') return 2;\n    return 3;\n  }\n\n  /**\n   * Format message with highlighted hashtags\n   */\n  formatMessage(message: string): string {\n    return message.replace(/#(\\w+)/g, '<span class=\"text-blue-600 text-xs font-medium hover:text-blue-800 transition-colors duration-300\">#$1</span>');\n  }\n  \n  /**\n   * Check if a message is long enough to be truncated\n   */\n  isMessageLong(message: string): boolean {\n    return message.length > 150;\n  }\n\n  onLinkedInClick(url: string, event: MouseEvent): void {\n    event.stopPropagation();\n    if (this.consultant.linkedinValidated) {\n      this.linkedinClick.emit(url);\n    }\n  }\n\n  onPhoneClick(phone: string | null, event: MouseEvent): void {\n    event.stopPropagation();\n    if (this.consultant.phoneValidated) {\n      this.phoneClick.emit(phone);\n    }\n  }\n\n  onEmailClick(email: string | null, event: MouseEvent): void {\n    event.stopPropagation();\n    if (this.consultant.emailValidated) {\n      this.emailClick.emit(email);\n    }\n  }\n\n  onToggleExpansion(id: string, event: MouseEvent): void {\n    event.stopPropagation();\n    this.toggleExpansion.emit({id, expanded: !this.expanded});\n  }\n\n  onToggleDropdown(id: string, event: MouseEvent): void {\n    event.stopPropagation();\n    this.toggleDropdown.emit({id, event});\n  }\n\n  onToggleMessageExpansion(id: string, event: MouseEvent): void {\n    event.stopPropagation();\n    this.toggleMessageExpansion.emit({id, event});\n  }\n\n  onToggleDetailsExpansion(id: string, event: MouseEvent): void {\n    event.stopPropagation();\n    this.toggleDetailsExpansion.emit({id, event});\n  }\n}\n","<!-- Version desktop du composant (masquée sur mobile) -->\n<div class=\"bg-white border border-gray-200 rounded-md overflow-hidden shadow-md hover:shadow-lg transition-shadow duration-300 hidden md:block\">\n  <table class=\"w-full border-collapse\">\n    <tr class=\"transition-all duration-300 hover:bg-gray-50 cursor-pointer\">\n      <!-- Left Column: Lock/Status and ID -->\n      <td class=\"whitespace-nowrap p-2 border-r border-gray-100 w-16 align-middle\">\n        <div class=\"flex flex-col items-center justify-center h-full\">\n          <!-- Lock icon: green for unlocked profiles, red for locked profiles -->\n          <span class=\"material-icons text-2xl mb-1\" \n                [ngClass]=\"{\n                  'text-green-500': !consultant.locked,\n                  'text-red-500': consultant.locked\n                }\"\n                [title]=\"consultant.locked ? 'Profil verrouillé' : 'Profil accessible'\">\n            {{ consultant.locked ? 'lock' : 'lock_open' }}\n          </span>\n          <!-- Consultant ID -->\n          <span class=\"text-xs text-gray-400 text-center\">#{{ consultant.id }}</span>\n        </div>\n      </td>\n      \n      <!-- Middle Column: Role, Experience bars, Skills, Location -->\n      <td class=\"p-2 pl-4 align-top\">\n        <!-- Role with availability indicator (plus compact) -->\n        <div class=\"font-medium text-base mb-1.5 flex items-center\">\n          <!-- Availability circle -->\n          <div class=\"w-2.5 h-2.5 rounded-full mr-1.5\"\n                [ngClass]=\"{\n                  'bg-green-500': consultant.availability === 0,\n                  'bg-yellow-500': consultant.availability === 1,\n                  'bg-red-500': consultant.availability === 2\n                }\">\n          </div>\n          {{ consultant.role }}\n        </div>\n        \n        <!-- Experience level and Skills on the same line (plus compact) -->\n        <div class=\"flex items-center mb-2\">\n          <!-- Experience level / Seniority bars (vertical like WiFi signal) -->\n          <div class=\"flex space-x-0.5 items-end h-3.5 mr-3\">\n            <div *ngFor=\"let i of [1, 2, 3]\" \n                class=\"w-1 rounded-sm\"\n                [ngClass]=\"{\n                  'bg-blue-600': i <= getSeniorityBars(consultant.experience), \n                  'bg-blue-200': i > getSeniorityBars(consultant.experience),\n                  'h-1': i === 1,\n                  'h-2': i === 2,\n                  'h-3.5': i === 3\n                }\">\n            </div>\n          </div>\n          \n          <!-- Skills badges (plus compact) -->\n          <div class=\"flex flex-wrap\">\n            <span *ngFor=\"let skill of consultant.skills.slice(0, 3)\" class=\"skill-badge text-xs py-0 px-1.5 mb-0.5\">\n              {{ skill }}\n            </span>\n            <span *ngIf=\"consultant.skills.length > 3\" class=\"text-xs text-gray-500 flex items-center ml-1\">\n              +{{ consultant.skills.length - 3 }}\n            </span>\n          </div>\n        </div>\n        \n        <!-- Locations (multiples, séparés par des virgules) -->\n        <div class=\"text-xs text-gray-600 flex items-center\">\n          <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-3.5 w-3.5 mr-0.5 flex-shrink-0\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z\" />\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M15 11a3 3 0 11-6 0 3 3 0 016 0z\" />\n          </svg>\n          <span class=\"flex flex-wrap\">\n            <!-- Afficher chaque lieu avec une petite marge -->\n            <ng-container *ngFor=\"let location of consultant.location.split(','); let last = last\">\n              <span class=\"location-badge\">{{ location.trim() }}</span>\n              <span *ngIf=\"!last\" class=\"mx-1\">•</span>\n            </ng-container>\n          </span>\n        </div>\n      </td>\n      \n      <!-- Right Column: Menu -->\n      <td class=\"py-2 pr-4 align-top w-24 text-right\">\n        \n        <!-- Desktop Action Buttons (always visible on lg and up) -->\n        <div class=\"hidden lg:flex lg:space-x-2 mb-2\">\n          <!-- LinkedIn button (always visible, grayed out if not available) -->\n          <button (click)=\"onLinkedInClick(consultant.linkedinUrl, $event)\" \n                  [disabled]=\"!consultant.linkedinValidated\" \n                  [title]=\"consultant.linkedinValidated ? 'Voir profil LinkedIn' : 'LinkedIn non disponible'\"\n                  class=\"action-button\"\n                  [ngClass]=\"{'opacity-50 cursor-not-allowed': !consultant.linkedinValidated}\">\n            <i class=\"fab fa-linkedin text-blue-600\"></i>\n          </button>\n          \n          <!-- Phone button (always visible, grayed out if not available) -->\n          <button (click)=\"onPhoneClick(consultant.phone, $event)\" \n                  [disabled]=\"!consultant.phoneValidated || !consultant.phone\" \n                  [title]=\"consultant.phoneValidated && consultant.phone ? 'Appeler' : 'Téléphone non disponible'\"\n                  class=\"action-button\"\n                  [ngClass]=\"{'opacity-50 cursor-not-allowed': !consultant.phoneValidated || !consultant.phone}\">\n            <i class=\"fas fa-phone-alt text-green-600\"></i>\n          </button>\n          \n          <!-- Email button (always visible, grayed out if not available) -->\n          <button (click)=\"onEmailClick(consultant.email, $event)\" \n                  [disabled]=\"!consultant.emailValidated || !consultant.email\" \n                  [title]=\"consultant.emailValidated && consultant.email ? 'Envoyer un email' : 'Email non disponible'\"\n                  class=\"action-button\"\n                  [ngClass]=\"{'opacity-50 cursor-not-allowed': !consultant.emailValidated || !consultant.email}\">\n            <i class=\"fas fa-envelope text-red-600\"></i>\n          </button>\n        </div>\n        \n        <!-- Mobile Dropdown Button (visible only on small screens) -->\n        <div class=\"lg:hidden\">\n          <div class=\"relative\">\n            <button \n              type=\"button\"\n              (click)=\"onToggleDropdown(consultant.id, $event)\"\n              class=\"inline-flex justify-center px-3 py-2 w-10 h-8 text-sm font-medium text-gray-700 bg-gray-100 border border-gray-300 rounded-md hover:bg-gray-200 focus:outline-none focus:ring-2 focus:ring-blue-500 transition-all duration-300\">\n              <svg class=\"h-4 w-4\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 5v.01M12 12v.01M12 19v.01M12 6a1 1 0 110-2 1 1 0 010 2zm0 7a1 1 0 110-2 1 1 0 010 2zm0 7a1 1 0 110-2 1 1 0 010 2z\" />\n              </svg>\n            </button>\n            \n            <!-- Dropdown Menu for Mobile -->\n            <div *ngIf=\"dropdownOpen\" \n                class=\"origin-top-right absolute right-0 mt-2 w-48 rounded-md shadow-lg bg-white ring-1 ring-black ring-opacity-5 focus:outline-none z-50\"\n                (click)=\"$event.stopPropagation()\">\n              <div class=\"py-1\" role=\"none\">\n                <!-- LinkedIn option - toujours affiché mais désactivé si non disponible -->\n                <a href=\"javascript:void(0)\" \n                    (click)=\"onLinkedInClick(consultant.linkedinUrl, $event)\"\n                    [class.opacity-50]=\"!consultant.linkedinValidated\"\n                    [class.cursor-not-allowed]=\"!consultant.linkedinValidated\"\n                    [class.pointer-events-none]=\"!consultant.linkedinValidated\"\n                    class=\"flex items-center px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 transition-colors duration-300\">\n                  <i class=\"fab fa-linkedin text-blue-600 mr-2\"></i>\n                  Voir sur LinkedIn\n                </a>\n                \n                <!-- Phone option - toujours affiché mais désactivé si non disponible -->\n                <a href=\"javascript:void(0)\" \n                    (click)=\"onPhoneClick(consultant.phone, $event)\"\n                    [class.opacity-50]=\"!consultant.phoneValidated || !consultant.phone\"\n                    [class.cursor-not-allowed]=\"!consultant.phoneValidated || !consultant.phone\"\n                    [class.pointer-events-none]=\"!consultant.phoneValidated || !consultant.phone\"\n                    class=\"flex items-center px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 transition-colors duration-300\">\n                  <i class=\"fas fa-phone-alt text-green-600 mr-2\"></i>\n                  Appeler\n                </a>\n                \n                <!-- Email option - toujours affiché mais désactivé si non disponible -->\n                <a href=\"javascript:void(0)\" \n                    (click)=\"onEmailClick(consultant.email, $event)\"\n                    [class.opacity-50]=\"!consultant.emailValidated || !consultant.email\"\n                    [class.cursor-not-allowed]=\"!consultant.emailValidated || !consultant.email\"\n                    [class.pointer-events-none]=\"!consultant.emailValidated || !consultant.email\"\n                    class=\"flex items-center px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 transition-colors duration-300\">\n                  <i class=\"fas fa-envelope text-red-600 mr-2\"></i>\n                  Envoyer un email\n                </a>\n              </div>\n            </div>\n          </div>\n        </div>\n        \n        <!-- Espace pour aligner la mise en page sans le bouton -->\n        <div class=\"mt-2 h-6\"></div>\n      </td>\n    </tr>\n  </table>\n  \n  <!-- Expanded Message and Additional Info - Only showed when expanded -->\n  <div *ngIf=\"messageExpanded\" class=\"px-4 py-3 border-t border-gray-100 bg-gray-50 transition-all duration-300\">\n    <!-- Message avec hashtags -->\n    <div class=\"mb-4\">\n      <h3 class=\"text-sm font-medium text-gray-800 mb-1\">Message</h3>\n      <div class=\"relative\">\n        <div class=\"text-sm text-gray-600 consultantMessage\" [innerHTML]=\"formatMessage(consultant.message)\"\n            [class.truncated]=\"isMessageLong(consultant.message) && !expanded\">\n        </div>\n        <!-- Gradient overlay pour la troncature -->\n        <div *ngIf=\"isMessageLong(consultant.message) && !expanded\" class=\"bg-gradient-overlay\"></div>\n      </div>\n      <div class=\"flex justify-between mt-1\">\n        <button *ngIf=\"isMessageLong(consultant.message)\" \n               (click)=\"onToggleExpansion(consultant.id, $event)\"\n               class=\"text-xs text-blue-600 hover:text-blue-800 hover:underline focus:outline-none transition-colors duration-300\">\n          {{ expanded ? 'Masquer' : 'Voir tout le message' }}\n        </button>\n        <button \n               (click)=\"onToggleDetailsExpansion(consultant.id, $event)\"\n               class=\"text-xs text-blue-600 hover:text-blue-800 hover:underline focus:outline-none transition-colors duration-300\">\n          {{ detailsExpanded ? 'Masquer les détails' : 'Voir plus' }}\n        </button>\n      </div>\n    </div>\n    \n    <!-- Sections détaillées - affichées seulement si detailsExpanded est true -->\n    <div *ngIf=\"detailsExpanded\">\n      <!-- Secteurs d'activité (affiché en premier dans la vue détaillée) -->\n      <div class=\"mb-4\" *ngIf=\"consultant.sectors && consultant.sectors.length > 0\">\n        <h3 class=\"text-sm font-medium text-gray-800 mb-1\">Secteurs d'activité</h3>\n        <div class=\"flex flex-wrap space-x-1\">\n          <span *ngFor=\"let sector of consultant.sectors\" class=\"sector-badge\">\n            {{ sector }}\n          </span>\n        </div>\n      </div>\n      \n      <!-- Expertises (mots-clés) -->\n      <div class=\"mb-4\" *ngIf=\"consultant.expertises && consultant.expertises.length > 0\">\n        <h3 class=\"text-sm font-medium text-gray-800 mb-1\">Expertises</h3>\n        <div class=\"flex flex-wrap space-x-1\">\n          <span *ngFor=\"let expertise of consultant.expertises\" class=\"expertise-badge\">\n            {{ expertise }}\n          </span>\n        </div>\n      </div>\n      \n      <!-- Compétences techniques (visible aussi sur la carte) -->\n      <div class=\"mb-4\">\n        <h3 class=\"text-sm font-medium text-gray-800 mb-1\">Compétences techniques</h3>\n        <div class=\"flex flex-wrap\">\n          <span *ngFor=\"let skill of consultant.skills\" class=\"skill-badge\">\n            {{ skill }}\n          </span>\n        </div>\n      </div>\n      \n      <!-- Dernières expériences -->\n      <div *ngIf=\"consultant.experiences && consultant.experiences.length > 0\">\n        <h3 class=\"text-sm font-medium text-gray-800 mb-1\">Dernières expériences</h3>\n        <ul class=\"text-sm text-gray-600 space-y-2\">\n          <li *ngFor=\"let exp of consultant.experiences\" class=\"flex items-start\">\n            <div class=\"mt-0.5 mr-1.5 w-1.5 h-1.5 rounded-full bg-gray-400 flex-shrink-0\"></div>\n            <div>\n              <span class=\"font-medium\">{{ exp.role }}</span>\n              <span *ngIf=\"exp.company\" class=\"ml-1\">• {{ exp.company }}</span>\n              <span *ngIf=\"exp.isCurrent\" class=\"text-xs ml-1 text-blue-600\">(Actuelle)</span>\n            </div>\n          </li>\n        </ul>\n      </div>\n    </div>\n  </div>\n</div>\n\n<!-- Version mobile du composant (masquée sur desktop) -->\n<div class=\"mobile-consultant-card block md:hidden\">\n  <!-- Header Row avec icônes et actions alignés sur une seule ligne -->\n  <div class=\"mobile-header-row\">\n    <div class=\"flex items-center\">\n      <!-- Lock icon et ID très compacts -->\n      <span class=\"material-icons text-lg mr-1.5\" \n            [ngClass]=\"{\n              'text-green-500': !consultant.locked,\n              'text-red-500': consultant.locked\n            }\">\n        {{ consultant.locked ? 'lock' : 'lock_open' }}\n      </span>\n      <span class=\"text-xs text-gray-500 mr-1.5\">#{{ consultant.id }}</span>\n      \n      <!-- Indicateurs de statut compacts -->\n      <div class=\"flex items-center\">\n        <!-- Disponibilité (point coloré) -->\n        <div class=\"w-2 h-2 rounded-full mr-1\"\n              [ngClass]=\"{\n                'bg-green-500': consultant.availability === 0,\n                'bg-yellow-500': consultant.availability === 1,\n                'bg-red-500': consultant.availability === 2\n              }\">\n        </div>\n        <!-- Barres d'expérience ultra-compactes -->\n        <div class=\"flex space-x-0.5 items-end h-2.5\">\n          <div *ngFor=\"let i of [1, 2, 3]\" \n              class=\"w-0.5 rounded-sm\"\n              [ngClass]=\"{\n                'bg-blue-600': i <= getSeniorityBars(consultant.experience), \n                'bg-blue-200': i > getSeniorityBars(consultant.experience),\n                'h-1': i === 1,\n                'h-1.5': i === 2,\n                'h-2.5': i === 3\n              }\">\n          </div>\n        </div>\n      </div>\n    </div>\n    \n    <!-- Actions row -->\n    <div class=\"mobile-action-buttons\">\n      <!-- Action buttons plus compacts -->\n      <button (click)=\"onLinkedInClick(consultant.linkedinUrl, $event)\" \n              [disabled]=\"!consultant.linkedinValidated\" \n              class=\"w-6 h-6 flex items-center justify-center rounded-full\"\n              [ngClass]=\"{'opacity-50 cursor-not-allowed': !consultant.linkedinValidated, 'bg-blue-100': consultant.linkedinValidated}\">\n        <i class=\"fab fa-linkedin text-blue-600 text-xs\"></i>\n      </button>\n      \n      <button (click)=\"onPhoneClick(consultant.phone, $event)\" \n              [disabled]=\"!consultant.phoneValidated || !consultant.phone\" \n              class=\"w-6 h-6 flex items-center justify-center rounded-full\"\n              [ngClass]=\"{'opacity-50 cursor-not-allowed': !consultant.phoneValidated || !consultant.phone, 'bg-green-100': consultant.phoneValidated && consultant.phone}\">\n        <i class=\"fas fa-phone-alt text-green-600 text-xs\"></i>\n      </button>\n      \n      <button (click)=\"onEmailClick(consultant.email, $event)\" \n              [disabled]=\"!consultant.emailValidated || !consultant.email\" \n              class=\"w-6 h-6 flex items-center justify-center rounded-full\"\n              [ngClass]=\"{'opacity-50 cursor-not-allowed': !consultant.emailValidated || !consultant.email, 'bg-red-100': consultant.emailValidated && consultant.email}\">\n        <i class=\"fas fa-envelope text-red-600 text-xs\"></i>\n      </button>\n    </div>\n  </div>\n  \n  <!-- Rôle et info principale -->\n  <div class=\"px-4 pt-2 pb-3\">\n    <!-- Rôle (plus grand pour meilleure lisibilité sur mobile) -->\n    <div class=\"font-medium text-base mb-2.5\">\n      {{ consultant.role }}\n    </div>\n    \n    <!-- Location avec icône -->\n    <div class=\"text-xs text-gray-600 flex items-center mb-2\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-3.5 w-3.5 mr-0.5 flex-shrink-0\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z\" />\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M15 11a3 3 0 11-6 0 3 3 0 016 0z\" />\n      </svg>\n      <span class=\"flex flex-wrap\">\n        <ng-container *ngFor=\"let location of consultant.location.split(','); let last = last\">\n          <span class=\"location-badge\">{{ location.trim() }}</span>\n          <span *ngIf=\"!last\" class=\"mx-1\">•</span>\n        </ng-container>\n      </span>\n    </div>\n    \n    <!-- Skills badges (full width dans la version mobile) -->\n    <div class=\"flex flex-wrap mt-2.5\">\n      <span *ngFor=\"let skill of consultant.skills.slice(0, 5)\" class=\"skill-badge text-xs py-0.5 px-2 mb-1\">\n        {{ skill }}\n      </span>\n      <span *ngIf=\"consultant.skills.length > 5\" class=\"text-xs text-gray-500 flex items-center ml-1 mb-1\">\n        +{{ consultant.skills.length - 5 }}\n      </span>\n    </div>\n    \n    <!-- Bouton pour afficher plus -->\n    <div class=\"mt-3\">\n      <button \n        (click)=\"onToggleMessageExpansion(consultant.id, $event)\"\n        class=\"text-xs text-blue-600 hover:text-blue-800 hover:underline focus:outline-none transition-colors duration-300\">\n        {{ messageExpanded ? 'Masquer les détails' : 'Voir plus' }}\n      </button>\n    </div>\n  </div>\n  \n  <!-- Partie étendue (message et détails additionnels) -->\n  <div *ngIf=\"messageExpanded\" class=\"px-4 py-3 border-t border-gray-100 bg-gray-50 mobile-scrollable-container transition-all duration-300\">\n    <!-- Message avec hashtags -->\n    <div class=\"mb-4\">\n      <h3 class=\"text-sm font-medium text-gray-800 mb-1\">Message</h3>\n      <div class=\"relative\">\n        <div class=\"text-sm text-gray-600 consultantMessage\" [innerHTML]=\"formatMessage(consultant.message)\"\n            [class.truncated]=\"isMessageLong(consultant.message) && !expanded\">\n        </div>\n        <!-- Gradient overlay pour la troncature -->\n        <div *ngIf=\"isMessageLong(consultant.message) && !expanded\" class=\"bg-gradient-overlay\"></div>\n      </div>\n      <div class=\"flex justify-between mt-1\">\n        <button *ngIf=\"isMessageLong(consultant.message)\" \n               (click)=\"onToggleExpansion(consultant.id, $event)\"\n               class=\"text-xs text-blue-600 hover:text-blue-800 hover:underline focus:outline-none transition-colors duration-300\">\n          {{ expanded ? 'Masquer' : 'Voir tout le message' }}\n        </button>\n        <button \n               (click)=\"onToggleDetailsExpansion(consultant.id, $event)\"\n               class=\"text-xs text-blue-600 hover:text-blue-800 hover:underline focus:outline-none transition-colors duration-300\">\n          {{ detailsExpanded ? 'Masquer les détails' : 'Voir plus' }}\n        </button>\n      </div>\n    </div>\n    \n    <!-- Détails étendus -->\n    <div *ngIf=\"detailsExpanded\">\n      <!-- Même contenu que la version desktop -->\n      <!-- Secteurs d'activité (affiché en premier dans la vue détaillée) -->\n      <div class=\"mb-4\" *ngIf=\"consultant.sectors && consultant.sectors.length > 0\">\n        <h3 class=\"text-sm font-medium text-gray-800 mb-1\">Secteurs d'activité</h3>\n        <div class=\"flex flex-wrap space-x-1\">\n          <span *ngFor=\"let sector of consultant.sectors\" class=\"sector-badge\">\n            {{ sector }}\n          </span>\n        </div>\n      </div>\n      \n      <!-- Expertises (mots-clés) -->\n      <div class=\"mb-4\" *ngIf=\"consultant.expertises && consultant.expertises.length > 0\">\n        <h3 class=\"text-sm font-medium text-gray-800 mb-1\">Expertises</h3>\n        <div class=\"flex flex-wrap space-x-1\">\n          <span *ngFor=\"let expertise of consultant.expertises\" class=\"expertise-badge\">\n            {{ expertise }}\n          </span>\n        </div>\n      </div>\n      \n      <!-- Compétences techniques (visible aussi sur la carte) -->\n      <div class=\"mb-4\">\n        <h3 class=\"text-sm font-medium text-gray-800 mb-1\">Compétences techniques</h3>\n        <div class=\"flex flex-wrap\">\n          <span *ngFor=\"let skill of consultant.skills\" class=\"skill-badge\">\n            {{ skill }}\n          </span>\n        </div>\n      </div>\n      \n      <!-- Dernières expériences -->\n      <div *ngIf=\"consultant.experiences && consultant.experiences.length > 0\">\n        <h3 class=\"text-sm font-medium text-gray-800 mb-1\">Dernières expériences</h3>\n        <ul class=\"text-sm text-gray-600 space-y-2\">\n          <li *ngFor=\"let exp of consultant.experiences\" class=\"flex items-start\">\n            <div class=\"mt-0.5 mr-1.5 w-1.5 h-1.5 rounded-full bg-gray-400 flex-shrink-0\"></div>\n            <div>\n              <span class=\"font-medium\">{{ exp.role }}</span>\n              <span *ngIf=\"exp.company\" class=\"ml-1\">• {{ exp.company }}</span>\n              <span *ngIf=\"exp.isCurrent\" class=\"text-xs ml-1 text-blue-600\">(Actuelle)</span>\n            </div>\n          </li>\n        </ul>\n      </div>\n    </div>\n  </div>\n</div>\n"],"names":["CommonModule","FormsModule","ReactiveFormsModule","Validators","i0","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","ɵɵtext","ɵɵlistener","UserProfileComponent_div_2_button_7_Template_button_click_0_listener","ɵɵrestoreView","_r2","ctx_r2","ɵɵnextContext","ɵɵresetView","enableEditMode","ɵɵadvance","ɵɵtextInterpolate","successMessage","errorMessage","currentUser","firstName","lastName","email","ɵɵtemplate","UserProfileComponent_div_2_div_47_span_1_Template","UserProfileComponent_div_2_div_47_span_2_Template","ɵɵproperty","tmp_2_0","profileForm","get","errors","tmp_3_0","UserProfileComponent_div_2_div_65_Template_button_click_1_listener","_r4","cancelEdit","UserProfileComponent_div_2_div_65_span_4_Template","invalid","isLoading","UserProfileComponent_div_2_span_5_Template","UserProfileComponent_div_2_button_7_Template","UserProfileComponent_div_2_div_8_Template","UserProfileComponent_div_2_div_9_Template","UserProfileComponent_div_2_Template_form_ngSubmit_17_listener","_r1","onSubmit","UserProfileComponent_div_2_input_29_Template","UserProfileComponent_div_2_span_30_Template","UserProfileComponent_div_2_div_31_Template","UserProfileComponent_div_2_input_37_Template","UserProfileComponent_div_2_span_38_Template","UserProfileComponent_div_2_div_39_Template","UserProfileComponent_div_2_input_45_Template","UserProfileComponent_div_2_span_46_Template","UserProfileComponent_div_2_div_47_Template","UserProfileComponent_div_2_span_57_Template","UserProfileComponent_div_2_span_58_Template","UserProfileComponent_div_2_div_65_Template","isEditing","username","tmp_9_0","touched","tmp_12_0","tmp_15_0","ɵɵtextInterpolate1","role","isActive","lastLogin","ɵɵpipeBind2","UserProfileComponent","constructor","authService","router","fb","ngOnInit","isAuthenticated","navigate","initializeForm","group","required","disable","enable","setTimeout","value","ɵɵdirectiveInject","i1","AuthService","i2","Router","i3","FormBuilder","selectors","decls","vars","consts","template","UserProfileComponent_Template","rf","ctx","UserProfileComponent_div_1_Template","UserProfileComponent_div_2_Template","i4","NgIf","DatePipe","ɵNgNoValidate","DefaultValueAccessor","NgControlStatus","NgControlStatusGroup","FormGroupDirective","FormControlName","styles","ConsultantCardComponent","ConsultantListComponent_div_7_div_1_Template_div_click_0_listener","option_r3","$implicit","ctx_r3","changeSortOrder","ɵɵclassProp","selectedSortOrder","label","ConsultantListComponent_div_7_div_1_Template","sortOptions","ConsultantListComponent_div_11_Template_button_click_3_listener","_r5","loadInitialConsultants","ConsultantListComponent_div_12_div_1_Template_app_consultant_card_toggleExpansion_1_listener","$event","consultant_r7","_r6","handleToggleExpansion","id","ConsultantListComponent_div_12_div_1_Template_app_consultant_card_toggleMessageExpansion_1_listener","handleToggleMessageExpansion","ConsultantListComponent_div_12_div_1_Template_app_consultant_card_toggleDetailsExpansion_1_listener","handleToggleDetailsExpansion","ConsultantListComponent_div_12_div_1_Template_app_consultant_card_toggleDropdown_1_listener","handleToggleDropdown","isExpanded","isDetailsExpanded","isDropdownOpen","ConsultantListComponent_div_12_div_1_Template","filteredConsultants","ConsultantListComponent_div_18_Template_button_click_3_listener","_r8","ConsultantListComponent_div_19_div_1_Template_app_consultant_card_toggleExpansion_1_listener","consultant_r10","_r9","ConsultantListComponent_div_19_div_1_Template_app_consultant_card_toggleMessageExpansion_1_listener","ConsultantListComponent_div_19_div_1_Template_app_consultant_card_toggleDetailsExpansion_1_listener","ConsultantListComponent_div_19_div_1_Template_app_consultant_card_toggleDropdown_1_listener","ConsultantListComponent_div_19_div_1_Template","ConsultantListComponent","consultantService","allConsultants","consultants","showDetailsDefault","currentPage","pageSize","isLoadingMore","hasMoreData","searchText","selectedSkills","selectedAvailability","selectedExperience","selectedLocation","availableSkills","availableLocations","sortDropdownOpen","experienceOptions","availabilityOptions","moreFiltersOpen","skillsDropdownOpen","dropdownOpen","expandedMessages","expandedDetails","configDropdownOpen","loadAllConsultantsForFiltering","documentClickListener","Object","keys","forEach","key","document","addEventListener","getConsultants","subscribe","consultant","window","handleSearchUpdate","bind","handleFiltersUpdate","searchParamsStr","localStorage","getItem","searchParams","JSON","parse","applyFilters","error","console","filterParamsStr","filterParams","ngOnDestroy","removeEventListener","onScroll","event","element","consultantsList","innerWidth","nativeElement","consultantsListMobile","scrollPosition","scrollTop","clientHeight","scrollHeight","loadMoreConsultants","log","getPagedConsultants","next","data","length","newData","extractAvailableSkills","extractAvailableLocations","skillsSet","Set","skills","skill","add","Array","from","sort","locationsSet","location","locations","split","map","loc","trim","filterConsultants","applySorting","onSearchChange","onExperienceChange","onAvailabilityChange","onLocationChange","toggleSkillFilter","index","indexOf","push","splice","onToggleMoreFilters","stopPropagation","onToggleSkillsDropdown","openLinkedIn","url","chrome","tabs","create","open","showPhone","phone","alert","sendEmail","href","toggleDropdown","toggleMessageExpansion","toggleExpandMessage","expanded","undefined","toggleDetailsExpansion","formatMessage","message","replace","isMessageLong","getSeniorityBars","experience","toggleSortDropdown","sortOrder","a","b","idA","parseInt","idB","availability","closeDropdowns","getSortLabel","option","find","opt","suffix","ConsultantService","viewQuery","ConsultantListComponent_Query","ConsultantListComponent_click_HostBindingHandler","ɵɵresolveDocument","ConsultantListComponent_Template_button_click_2_listener","ConsultantListComponent_div_7_Template","ConsultantListComponent_Template_div_scroll_8_listener","ConsultantListComponent_div_10_Template","ConsultantListComponent_div_11_Template","ConsultantListComponent_div_12_Template","ConsultantListComponent_div_13_Template","ConsultantListComponent_div_14_Template","ConsultantListComponent_Template_div_scroll_15_listener","ConsultantListComponent_div_17_Template","ConsultantListComponent_div_18_Template","ConsultantListComponent_div_19_Template","ConsultantListComponent_div_20_Template","ConsultantListComponent_div_21_Template","NgForOf","environment","production","apiUrl","isExtension","envName","debugInfo","timestamp","Date","toISOString","buildMode","RouterModule","LoginComponent","AuthGuard","AppDebugComponent","routes","path","component","canActivate","roles","AppRoutingModule","forRoot","useHash","imports","exports","ctx_r0","loginError","LoginComponent_div_21_span_1_Template","LoginComponent_div_21_span_2_Template","tmp_1_0","loginForm","modalService","rememberMe","loginMode","password","minLength","credentials","loginWithEmail","closeModal","handleLoginError","closeLoginModal","resetForm","reset","status","ModalService","LoginComponent_Template","LoginComponent_Template_button_click_5_listener","LoginComponent_div_9_Template","LoginComponent_Template_form_ngSubmit_11_listener","LoginComponent_div_16_Template","LoginComponent_div_21_Template","LoginComponent_span_27_Template","isLoginModalVisible","ɵɵpureFunction1","_c0","tmp_10_0","tmp_11_0","_c1","i5","NgClass","CheckboxControlValueAccessor","ApiService","http","API_URL","IS_EXTENSION","ENV_NAME","buildApiUrl","endpoint","startsWith","options","post","body","put","delete","ɵɵinject","HttpClient","factory","ɵfac","providedIn","BehaviorSubject","loginModalVisibleSubject","isModalBackdropVisible","modalBackdropVisibleSubject","loginModalVisible$","asObservable","modalBackdropVisible$","openLoginModal","closeAllModals","BrowserModule","HttpClientModule","HTTP_INTERCEPTORS","AppComponent","AuthInterceptor","AppModule","bootstrap","provide","useClass","multi","declarations","enableProdMode","__NgCli_bootstrap_1","platformBrowser","bootstrapModule","catch","err","NavigationEnd","filter","AppComponent_div_1_Template_button_click_5_listener","ctx_r1","toggleFloatingDebug","AppComponent_div_1_Template_button_click_7_listener","toggleDebugMode","ɵɵtextInterpolate2","baseHref","showFloatingDebug","isDebugEnabled","AppComponent_div_2_Template_div_click_0_listener","_r3","AppComponent_div_2_Template_div_mouseenter_0_listener","debugButton_r4","ɵɵreference","style","opacity","AppComponent_div_2_Template_div_mouseleave_0_listener","AppComponent_div_17_Template_button_click_1_listener","AppComponent_div_18_div_3_a_3_Template_a_click_0_listener","toggleMenu","AppComponent_div_18_div_3_a_4_Template_a_click_0_listener","AppComponent_div_18_div_3_Template_a_click_1_listener","_r7","AppComponent_div_18_div_3_a_3_Template","AppComponent_div_18_div_3_a_4_Template","AppComponent_div_18_div_3_Template_button_click_6_listener","logout","AppComponent_div_18_Template_button_click_1_listener","AppComponent_div_18_div_3_Template","getInitials","menuOpen","exp_r10","avail_r11","location_r12","AppComponent_div_57_div_2_Template_input_change_1_listener","skill_r14","_r13","toggleSkill","AppComponent_div_57_div_2_Template_input_click_1_listener","AppComponent_div_57_div_2_Template_label_click_2_listener","isSkillSelected","AppComponent_div_57_div_2_Template","exp_r15","avail_r16","location_r17","AppComponent_div_88_div_2_Template_input_change_1_listener","skill_r19","_r18","AppComponent_div_88_div_2_Template_input_click_1_listener","AppComponent_div_88_div_2_Template_label_click_2_listener","AppComponent_div_88_div_2_Template","AppComponent_div_97_Template_div_click_0_listener","_r20","title","currentRoute","showFilterPanel","debugElement","mobileBreakpoint","mobileSkillsDropdownOpen","getElementsByTagName","getAttribute","routerUrl","appStartTime","closeSkillsDropdowns","desktopDropdown","querySelector","mobileDropdown","contains","target","savedDebugState","savedFloatingDebugState","createFloatingDebugElement","updateFloatingDebugVisibility","authState$","state","user","events","pipe","loadFilterOptions","isArray","onSearchTextChange","setItem","stringify","dispatchEvent","CustomEvent","applyAdvancedFilters","resetAllFilters","existingDebugElement","getElementById","removeChild","createElement","position","bottom","left","padding","background","color","fontSize","fontFamily","zIndex","borderRadius","transition","display","innerHTML","appendChild","toString","headerDebug","toggleFilterPanel","charAt","isMobileView","toggleSkillsDropdown","toggleMobileSkillsDropdown","includes","standalone","AppComponent_Template","AppComponent_div_1_Template","AppComponent_div_2_Template","ɵɵtwoWayListener","AppComponent_Template_input_ngModelChange_7_listener","ɵɵtwoWayBindingSet","AppComponent_Template_input_keyup_7_listener","AppComponent_Template_button_click_11_listener","AppComponent_div_17_Template","AppComponent_div_18_Template","AppComponent_Template_button_click_24_listener","AppComponent_Template_select_ngModelChange_31_listener","AppComponent_option_34_Template","AppComponent_Template_select_ngModelChange_38_listener","AppComponent_option_41_Template","AppComponent_Template_select_ngModelChange_45_listener","AppComponent_option_48_Template","AppComponent_Template_div_click_52_listener","AppComponent_div_57_Template","AppComponent_Template_select_ngModelChange_62_listener","AppComponent_option_65_Template","AppComponent_Template_select_ngModelChange_69_listener","AppComponent_option_72_Template","AppComponent_Template_select_ngModelChange_76_listener","AppComponent_option_79_Template","AppComponent_Template_div_click_83_listener","AppComponent_div_88_Template","AppComponent_Template_button_click_90_listener","AppComponent_Template_button_click_92_listener","AppComponent_div_97_Template","ɵɵtwoWayProperty","ɵɵpureFunction2","ɵɵpureFunction3","throwError","catchError","tap","apiService","AUTH_DATA_KEY","authStateSubject","token","refreshToken","tokenExpiration","loadAuthState","currentAuthState","isTokenExpired","response","handleAuthResponse","loginWithLinkedIn","profile","register","completeOnboarding","onboardingData","request","needsOnboarding","onboardingCompleted","getUserRole","clearAuthState","expiration","success","expirationDate","authState","saveAuthState","storedState","parsedState","removeItem","mockData","generateMockData","types","experiences","availabilities","companies","skillsPool","expertiseDomains","activitySectors","messages","i","locked","Math","random","randomRole","floor","randomType","randomLocation","randomExperience","randomAvailability","randomSkillsCount","shuffledSkills","randomSkills","slice","randomMessage","consultantLocations","additionalLocationsCount","shuffledLocations","additionalLocations","join","randomExpertiseCount","shuffledExpertises","randomExpertises","sectorCount","shuffledSectors","randomSectors","experienceCount","randomExperiences","j","randomCompany","roleForExperience","isCurrent","company","linkedinUrl","type","phoneValidated","emailValidated","linkedinValidated","expertises","sectors","warn","tags","extractTags","Error","page","startIndex","endIndex","regex","match","exec","searchLower","toLowerCase","messageMatch","roleMatch","locationMatch","tagsMatch","some","tag","every","availabilityNum","HttpErrorResponse","HttpResponse","switchMap","take","finalize","isRefreshing","refreshTokenSubject","intercept","method","headers","startTime","now","shouldSkipAuthHeader","handle","endTime","statusText","addToken","handle401Error","clone","setHeaders","Authorization","apiData","AppDebugComponent_div_22_p_3_Template","apiStatus","testApiConnection","AppDebugComponent_Template","AppDebugComponent_Template_button_click_20_listener","AppDebugComponent_div_22_Template","encapsulation","route","queryParams","returnUrl","GuestGuard","OnboardingGuard","RoleGuard","allowedRoles","userRole","EventEmitter","ɵɵpureFunction5","_c7","i_r1","skill_r3","ɵɵelementContainerStart","ConsultantCardComponent_ng_container_24_span_3_Template","location_r4","last_r5","ConsultantCardComponent_div_38_Template_div_click_0_listener","ConsultantCardComponent_div_38_Template_a_click_2_listener","onLinkedInClick","ConsultantCardComponent_div_38_Template_a_click_5_listener","onPhoneClick","ConsultantCardComponent_div_38_Template_a_click_8_listener","onEmailClick","ConsultantCardComponent_div_40_button_8_Template_button_click_0_listener","onToggleExpansion","sector_r9","ConsultantCardComponent_div_40_div_11_div_1_span_4_Template","expertise_r10","ConsultantCardComponent_div_40_div_11_div_2_span_4_Template","skill_r11","exp_r12","ConsultantCardComponent_div_40_div_11_div_8_li_4_span_5_Template","ConsultantCardComponent_div_40_div_11_div_8_li_4_span_6_Template","ConsultantCardComponent_div_40_div_11_div_8_li_4_Template","ConsultantCardComponent_div_40_div_11_div_1_Template","ConsultantCardComponent_div_40_div_11_div_2_Template","ConsultantCardComponent_div_40_div_11_span_7_Template","ConsultantCardComponent_div_40_div_11_div_8_Template","ConsultantCardComponent_div_40_div_6_Template","ConsultantCardComponent_div_40_button_8_Template","ConsultantCardComponent_div_40_Template_button_click_9_listener","onToggleDetailsExpansion","ConsultantCardComponent_div_40_div_11_Template","ɵɵsanitizeHtml","detailsExpanded","_c8","i_r13","ConsultantCardComponent_ng_container_67_span_3_Template","location_r14","last_r15","skill_r16","ConsultantCardComponent_div_74_button_8_Template_button_click_0_listener","sector_r19","ConsultantCardComponent_div_74_div_11_div_1_span_4_Template","expertise_r20","ConsultantCardComponent_div_74_div_11_div_2_span_4_Template","skill_r21","exp_r22","ConsultantCardComponent_div_74_div_11_div_8_li_4_span_5_Template","ConsultantCardComponent_div_74_div_11_div_8_li_4_span_6_Template","ConsultantCardComponent_div_74_div_11_div_8_li_4_Template","ConsultantCardComponent_div_74_div_11_div_1_Template","ConsultantCardComponent_div_74_div_11_div_2_Template","ConsultantCardComponent_div_74_div_11_span_7_Template","ConsultantCardComponent_div_74_div_11_div_8_Template","ConsultantCardComponent_div_74_div_6_Template","ConsultantCardComponent_div_74_button_8_Template","ConsultantCardComponent_div_74_Template_button_click_9_listener","_r17","ConsultantCardComponent_div_74_div_11_Template","messageExpanded","linkedinClick","phoneClick","emailClick","toggleExpansion","emit","onToggleDropdown","onToggleMessageExpansion","inputs","outputs","ConsultantCardComponent_Template","ConsultantCardComponent_div_15_Template","ConsultantCardComponent_span_17_Template","ConsultantCardComponent_span_18_Template","ConsultantCardComponent_ng_container_24_Template","ConsultantCardComponent_Template_button_click_27_listener","ConsultantCardComponent_Template_button_click_29_listener","ConsultantCardComponent_Template_button_click_31_listener","ConsultantCardComponent_Template_button_click_35_listener","ConsultantCardComponent_div_38_Template","ConsultantCardComponent_div_40_Template","ConsultantCardComponent_div_51_Template","ConsultantCardComponent_Template_button_click_53_listener","ConsultantCardComponent_Template_button_click_55_listener","ConsultantCardComponent_Template_button_click_57_listener","ConsultantCardComponent_ng_container_67_Template","ConsultantCardComponent_span_69_Template","ConsultantCardComponent_span_70_Template","ConsultantCardComponent_Template_button_click_72_listener","ConsultantCardComponent_div_74_Template","ɵɵpureFunction0","_c2","_c3","_c4","_c5","_c6"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}