{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/components/user/profile/user-profile.component.ts","./src/app/components/user/profile/user-profile.component.html","./src/app/components/consultant-list/consultant-list.component.ts","./src/app/components/consultant-list/consultant-list.component.html","./src/environments/environment.ts","./src/app/app-routing.module.ts","./src/app/components/auth/login/login.component.ts","./src/app/components/auth/login/login.component.html","./src/app/services/api.service.ts","./src/app/services/modal.service.ts","./src/app/app.module.ts","./src/main.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/services/auth.service.ts","./src/app/services/consultant.service.ts","./src/app/services/auth.interceptor.ts","./src/app/guards/auth.guard.ts","./src/app/components/consultant-card/consultant-card.component.ts","./src/app/components/consultant-card/consultant-card.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../../../services/auth.service';\nimport { User } from '../../../models/user.model';\n\n@Component({\n  selector: 'app-user-profile',\n  templateUrl: './user-profile.component.html',\n  styleUrls: ['./user-profile.component.css'],\n  standalone: true,\n  imports: [CommonModule, FormsModule, ReactiveFormsModule]\n})\nexport class UserProfileComponent implements OnInit {\n  currentUser: User | null = null;\n  profileForm!: FormGroup;\n  isEditing = false;\n  isLoading = false;\n  errorMessage: string | null = null;\n  successMessage: string | null = null;\n\n  constructor(\n    private authService: AuthService,\n    private router: Router,\n    private fb: FormBuilder\n  ) { }\n\n  ngOnInit(): void {\n    // Vérifier si l'utilisateur est connecté\n    if (!this.authService.isAuthenticated) {\n      this.router.navigate(['/login']);\n      return;\n    }\n\n    // Récupérer l'utilisateur actuel\n    this.currentUser = this.authService.currentUser;\n    \n    // Initialiser le formulaire avec les données actuelles\n    this.initializeForm();\n  }\n\n  initializeForm(): void {\n    if (!this.currentUser) return;\n\n    this.profileForm = this.fb.group({\n      firstName: [this.currentUser.firstName || '', [Validators.required]],\n      lastName: [this.currentUser.lastName || '', [Validators.required]],\n      email: [this.currentUser.email, [Validators.required, Validators.email]]\n      // D'autres champs pourront être ajoutés par la suite\n    });\n\n    // Désactiver le formulaire par défaut (mode lecture seule)\n    this.profileForm.disable();\n  }\n\n  // Activer le mode édition\n  enableEditMode(): void {\n    this.isEditing = true;\n    this.profileForm.enable();\n  }\n\n  // Annuler les modifications\n  cancelEdit(): void {\n    this.isEditing = false;\n    this.initializeForm(); // Réinitialiser le formulaire avec les valeurs d'origine\n    this.profileForm.disable();\n    this.errorMessage = null;\n    this.successMessage = null;\n  }\n\n  // Soumettre les modifications\n  onSubmit(): void {\n    if (this.profileForm.invalid) {\n      return;\n    }\n\n    this.isLoading = true;\n    this.errorMessage = null;\n    this.successMessage = null;\n\n    // En environnement de développement, simuler un appel API\n    setTimeout(() => {\n      // Simuler une mise à jour réussie\n      if (this.currentUser) {\n        this.currentUser = {\n          ...this.currentUser,\n          firstName: this.profileForm.value.firstName,\n          lastName: this.profileForm.value.lastName,\n          email: this.profileForm.value.email\n        };\n      }\n      \n      this.isLoading = false;\n      this.isEditing = false;\n      this.profileForm.disable();\n      this.successMessage = 'Profil mis à jour avec succès!';\n    }, 1000);\n\n    // Dans un environnement réel, nous enverrions les données à l'API\n    /*\n    this.userService.updateProfile(this.profileForm.value).subscribe({\n      next: (updatedUser) => {\n        this.currentUser = updatedUser;\n        this.isLoading = false;\n        this.isEditing = false;\n        this.profileForm.disable();\n        this.successMessage = 'Profil mis à jour avec succès!';\n      },\n      error: (error) => {\n        this.isLoading = false;\n        this.errorMessage = 'Une erreur est survenue lors de la mise à jour du profil.';\n        console.error('Erreur lors de la mise à jour du profil:', error);\n      }\n    });\n    */\n  }\n}","<div class=\"flex flex-col h-full w-full overflow-y-auto p-6\">\n  <div *ngIf=\"!currentUser\" class=\"flex justify-center items-center h-full\">\n    <div class=\"text-center\">\n      <div class=\"text-gray-500 mb-4\">\n        <svg class=\"w-16 h-16 mx-auto\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n          <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z\"></path>\n        </svg>\n      </div>\n      <h3 class=\"text-lg font-medium text-gray-900\">Connectez-vous pour accéder à votre profil</h3>\n      <p class=\"mt-1 text-sm text-gray-500\">Vous devez être connecté pour voir votre profil.</p>\n      <div class=\"mt-6\">\n        <a routerLink=\"/login\" class=\"inline-flex items-center px-4 py-2 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\">\n          Connexion\n        </a>\n      </div>\n    </div>\n  </div>\n\n  <div *ngIf=\"currentUser\" class=\"max-w-3xl mx-auto w-full\">\n    <!-- En-tête -->\n    <div class=\"pb-5 border-b border-gray-200 sm:flex sm:items-center sm:justify-between\">\n      <h3 class=\"text-lg leading-6 font-medium text-gray-900 flex items-center\">\n        <span class=\"mr-2\">Mon Profil</span>\n        <span *ngIf=\"successMessage\" class=\"ml-3 inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-green-100 text-green-800\">\n          <svg class=\"-ml-0.5 mr-1.5 h-2 w-2 text-green-400\" fill=\"currentColor\" viewBox=\"0 0 8 8\">\n            <circle cx=\"4\" cy=\"4\" r=\"3\" />\n          </svg>\n          Mis à jour\n        </span>\n      </h3>\n      <div class=\"mt-3 sm:mt-0 sm:ml-4\">\n        <button *ngIf=\"!isEditing\" (click)=\"enableEditMode()\" type=\"button\" class=\"inline-flex items-center px-4 py-2 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\">\n          <svg class=\"-ml-1 mr-2 h-5 w-5 text-gray-500\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M15.232 5.232l3.536 3.536m-2.036-5.036a2.5 2.5 0 113.536 3.536L6.5 21.036H3v-3.572L16.732 3.732z\"></path>\n          </svg>\n          Modifier\n        </button>\n      </div>\n    </div>\n\n    <!-- Messages de notification -->\n    <div *ngIf=\"successMessage\" class=\"mt-4 p-4 rounded-md bg-green-50\">\n      <div class=\"flex\">\n        <div class=\"flex-shrink-0\">\n          <svg class=\"h-5 w-5 text-green-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\"></path>\n          </svg>\n        </div>\n        <div class=\"ml-3\">\n          <p class=\"text-sm font-medium text-green-800\">{{ successMessage }}</p>\n        </div>\n      </div>\n    </div>\n\n    <div *ngIf=\"errorMessage\" class=\"mt-4 p-4 rounded-md bg-red-50\">\n      <div class=\"flex\">\n        <div class=\"flex-shrink-0\">\n          <svg class=\"h-5 w-5 text-red-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M10 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2m7-2a9 9 0 11-18 0 9 9 0 0118 0z\"></path>\n          </svg>\n        </div>\n        <div class=\"ml-3\">\n          <p class=\"text-sm font-medium text-red-800\">{{ errorMessage }}</p>\n        </div>\n      </div>\n    </div>\n\n    <!-- Informations du profil -->\n    <div class=\"bg-white shadow overflow-hidden sm:rounded-lg mt-5\">\n      <div class=\"px-4 py-5 sm:px-6 bg-gray-50\">\n        <h3 class=\"text-base font-semibold text-gray-900\">Informations personnelles</h3>\n        <p class=\"mt-1 max-w-2xl text-sm text-gray-500\">Vos informations de profil utilisateur.</p>\n      </div>\n      <div class=\"border-t border-gray-200\">\n        <form [formGroup]=\"profileForm\" (ngSubmit)=\"onSubmit()\">\n          <dl>\n            <!-- Nom d'utilisateur -->\n            <div class=\"bg-gray-50 px-4 py-5 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6\">\n              <dt class=\"text-sm font-medium text-gray-500\">Nom d'utilisateur</dt>\n              <dd class=\"mt-1 text-sm text-gray-900 sm:mt-0 sm:col-span-2\">{{ currentUser.username }}</dd>\n            </div>\n\n            <!-- Prénom -->\n            <div class=\"bg-white px-4 py-5 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6\">\n              <dt class=\"text-sm font-medium text-gray-500\">\n                <label for=\"firstName\">Prénom</label>\n              </dt>\n              <dd class=\"mt-1 text-sm text-gray-900 sm:mt-0 sm:col-span-2\">\n                <input \n                  *ngIf=\"isEditing\" \n                  id=\"firstName\" \n                  type=\"text\" \n                  formControlName=\"firstName\"\n                  class=\"shadow-sm focus:ring-indigo-500 focus:border-indigo-500 block w-full sm:text-sm border-gray-300 rounded-md\"\n                >\n                <span *ngIf=\"!isEditing\">{{ currentUser.firstName || 'Non renseigné' }}</span>\n                <div *ngIf=\"isEditing && profileForm.get('firstName')?.invalid && profileForm.get('firstName')?.touched\" class=\"mt-1 text-sm text-red-600\">\n                  Le prénom est requis\n                </div>\n              </dd>\n            </div>\n\n            <!-- Nom -->\n            <div class=\"bg-gray-50 px-4 py-5 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6\">\n              <dt class=\"text-sm font-medium text-gray-500\">\n                <label for=\"lastName\">Nom</label>\n              </dt>\n              <dd class=\"mt-1 text-sm text-gray-900 sm:mt-0 sm:col-span-2\">\n                <input \n                  *ngIf=\"isEditing\" \n                  id=\"lastName\" \n                  type=\"text\" \n                  formControlName=\"lastName\"\n                  class=\"shadow-sm focus:ring-indigo-500 focus:border-indigo-500 block w-full sm:text-sm border-gray-300 rounded-md\"\n                >\n                <span *ngIf=\"!isEditing\">{{ currentUser.lastName || 'Non renseigné' }}</span>\n                <div *ngIf=\"isEditing && profileForm.get('lastName')?.invalid && profileForm.get('lastName')?.touched\" class=\"mt-1 text-sm text-red-600\">\n                  Le nom est requis\n                </div>\n              </dd>\n            </div>\n\n            <!-- Email -->\n            <div class=\"bg-white px-4 py-5 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6\">\n              <dt class=\"text-sm font-medium text-gray-500\">\n                <label for=\"email\">Email</label>\n              </dt>\n              <dd class=\"mt-1 text-sm text-gray-900 sm:mt-0 sm:col-span-2\">\n                <input \n                  *ngIf=\"isEditing\" \n                  id=\"email\" \n                  type=\"email\" \n                  formControlName=\"email\"\n                  class=\"shadow-sm focus:ring-indigo-500 focus:border-indigo-500 block w-full sm:text-sm border-gray-300 rounded-md\"\n                >\n                <span *ngIf=\"!isEditing\">{{ currentUser.email }}</span>\n                <div *ngIf=\"isEditing && profileForm.get('email')?.invalid && profileForm.get('email')?.touched\" class=\"mt-1 text-sm text-red-600\">\n                  <span *ngIf=\"profileForm.get('email')?.errors?.['required']\">L'email est requis</span>\n                  <span *ngIf=\"profileForm.get('email')?.errors?.['email']\">Format d'email invalide</span>\n                </div>\n              </dd>\n            </div>\n\n            <!-- Rôle -->\n            <div class=\"bg-gray-50 px-4 py-5 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6\">\n              <dt class=\"text-sm font-medium text-gray-500\">Rôle</dt>\n              <dd class=\"mt-1 text-sm text-gray-900 sm:mt-0 sm:col-span-2\">\n                {{ currentUser.role === 'admin' ? 'Administrateur' : \n                   currentUser.role === 'consultant' ? 'Consultant' :\n                   currentUser.role === 'recruiter' ? 'Recruteur' : currentUser.role }}\n              </dd>\n            </div>\n\n            <!-- État du compte -->\n            <div class=\"bg-white px-4 py-5 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6\">\n              <dt class=\"text-sm font-medium text-gray-500\">État du compte</dt>\n              <dd class=\"mt-1 text-sm text-gray-900 sm:mt-0 sm:col-span-2\">\n                <span *ngIf=\"currentUser.isActive\" class=\"px-2 py-1 text-xs font-medium rounded-full bg-green-100 text-green-800\">Actif</span>\n                <span *ngIf=\"!currentUser.isActive\" class=\"px-2 py-1 text-xs font-medium rounded-full bg-red-100 text-red-800\">Inactif</span>\n              </dd>\n            </div>\n\n            <!-- Dernière connexion -->\n            <div class=\"bg-gray-50 px-4 py-5 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6\">\n              <dt class=\"text-sm font-medium text-gray-500\">Dernière connexion</dt>\n              <dd class=\"mt-1 text-sm text-gray-900 sm:mt-0 sm:col-span-2\">\n                {{ currentUser.lastLogin ? (currentUser.lastLogin | date:'dd/MM/yyyy HH:mm') : 'Jamais' }}\n              </dd>\n            </div>\n          </dl>\n\n          <!-- Boutons d'action (en mode édition) -->\n          <div *ngIf=\"isEditing\" class=\"px-4 py-3 bg-gray-50 text-right sm:px-6 border-t border-gray-200\">\n            <button type=\"button\" (click)=\"cancelEdit()\" class=\"inline-flex justify-center py-2 px-4 border border-gray-300 shadow-sm text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 mr-3\">\n              Annuler\n            </button>\n            <button type=\"submit\" [disabled]=\"profileForm.invalid || isLoading\" class=\"inline-flex justify-center py-2 px-4 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\">\n              <span *ngIf=\"isLoading\" class=\"mr-2\">\n                <svg class=\"animate-spin -ml-1 mr-2 h-4 w-4 text-white\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n                  <circle class=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" stroke-width=\"4\"></circle>\n                  <path class=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n                </svg>\n              </span>\n              Enregistrer\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  </div>\n</div>","import { Component, OnInit, ViewChild, ElementRef, OnDestroy, HostListener } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { ConsultantWithTags, ExperienceLevel, AvailabilityStatus } from '../../models/consultant.model';\nimport { ConsultantCardComponent } from '../consultant-card/consultant-card.component';\nimport { ConsultantService } from '../../services/consultant.service';\n\n@Component({\n  selector: 'app-consultant-list',\n  templateUrl: './consultant-list.component.html',\n  styleUrls: ['./consultant-list.component.css'],\n  standalone: true,\n  imports: [CommonModule, FormsModule, ConsultantCardComponent]\n})\nexport class ConsultantListComponent implements OnInit, OnDestroy {\n  @ViewChild('consultantsList', { static: false }) consultantsList?: ElementRef;\n  \n  // Données principales\n  allConsultants: ConsultantWithTags[] = [];\n  consultants: ConsultantWithTags[] = [];\n  filteredConsultants: ConsultantWithTags[] = [];\n  \n  // Paramètre global pour contrôler l'affichage des détails\n  showDetailsDefault: boolean = true; // Contrôle si les détails sont affichés par défaut\n  \n  // Paramètres de pagination\n  currentPage: number = 1;\n  pageSize: number = 10;\n  isLoadingMore: boolean = false;\n  hasMoreData: boolean = true;\n  isLoading: boolean = true;\n  errorMessage: string | null = null;\n  \n  // Filtres\n  searchText: string = '';\n  selectedSkills: string[] = [];\n  selectedAvailability: string = 'all';\n  selectedExperience: string = 'all';\n  selectedLocation: string = 'all';\n  \n  // Options disponibles pour les filtres\n  availableSkills: string[] = [];\n  availableLocations: string[] = [];\n  experienceOptions = [\n    { value: 'less_than_3', label: 'Moins de 3 ans' },\n    { value: 'between_3_and_10', label: 'Entre 3 et 10 ans' },\n    { value: 'more_than_10', label: 'Plus de 10 ans' }\n  ];\n  availabilityOptions = [\n    { value: '0', label: 'Disponible maintenant' },\n    { value: '1', label: 'Disponible prochainement' },\n    { value: '2', label: 'Non disponible' }\n  ];\n  \n  // État des UI\n  moreFiltersOpen: boolean = false;\n  skillsDropdownOpen: boolean = false;\n  dropdownOpen: { [id: string]: boolean } = {};\n  expandedMessages: { [id: string]: boolean } = {};\n  expandedDetails: { [id: string]: boolean } = {}; // Pour contrôler l'affichage des détails\n  configDropdownOpen: boolean = false;\n  \n  documentClickListener?: any;\n  \n  // Événements de sortie - nous n'en avons plus besoin car le composant est autonome\n  \n  constructor(private consultantService: ConsultantService) { }\n\n  ngOnInit(): void {\n    // Charger les données initiales\n    this.loadInitialConsultants();\n    \n    // Charger tous les consultants pour extraire les filtres (en parallèle)\n    this.loadAllConsultantsForFiltering();\n    \n    // Ajouter un écouteur de clic global pour fermer les dropdowns\n    this.documentClickListener = () => {\n      Object.keys(this.dropdownOpen).forEach(key => {\n        this.dropdownOpen[key] = false;\n      });\n      this.skillsDropdownOpen = false;\n      this.configDropdownOpen = false;\n    };\n    document.addEventListener('click', this.documentClickListener);\n    \n    // Appliquer la valeur du paramètre global showDetailsDefault\n    setTimeout(() => {\n      this.consultantService.getConsultants().subscribe(consultants => {\n        consultants.forEach(consultant => {\n          this.expandedMessages[consultant.id] = this.showDetailsDefault;\n        });\n      });\n    }, 500);\n  }\n  \n  ngOnDestroy(): void {\n    // Nettoyage des écouteurs d'événements\n    if (this.documentClickListener) {\n      document.removeEventListener('click', this.documentClickListener);\n    }\n  }\n  \n  /**\n   * Écouteur d'événement de défilement pour l'infinite scroll\n   * Cette méthode est appelée via (scroll) sur le conteneur défilant\n   */\n  onScroll(event: Event): void {\n    if (!this.consultantsList) return;\n    \n    const element = this.consultantsList.nativeElement;\n    const scrollPosition = element.scrollTop + element.clientHeight;\n    \n    // Si nous avons atteint le bas du conteneur (avec une marge de 100px)\n    // et que nous ne sommes pas déjà en train de charger plus de données\n    // et qu'il y a potentiellement plus de données à charger\n    if (scrollPosition >= (element.scrollHeight - 100) && !this.isLoadingMore && this.hasMoreData) {\n      this.loadMoreConsultants();\n    }\n  }\n\n  /**\n   * Charge les premières données des consultants\n   */\n  loadInitialConsultants(): void {\n    this.isLoading = true;\n    this.errorMessage = null;\n    this.currentPage = 1;\n    \n    this.consultantService.getPagedConsultants(this.currentPage, this.pageSize)\n      .subscribe(\n        data => {\n          console.log(`Slice de 0 à ${this.pageSize} sur ${data.length} consultants`);\n          this.consultants = data;\n          this.applyFilters();\n          this.isLoading = false;\n        },\n        error => {\n          console.error('Error fetching consultants:', error);\n          this.errorMessage = 'Impossible de charger les consultants. Veuillez réessayer plus tard.';\n          this.isLoading = false;\n        }\n      );\n  }\n\n  /**\n   * Charge plus de consultants lorsque l'utilisateur fait défiler la page\n   */\n  loadMoreConsultants(): void {\n    if (this.isLoadingMore || !this.hasMoreData) return;\n    \n    this.isLoadingMore = true;\n    console.log(\"Démarrage du chargement de la page suivante\");\n    \n    this.currentPage++;\n    console.log(`Chargement de la page ${this.currentPage} avec ${this.pageSize} éléments par page`);\n    \n    this.consultantService.getPagedConsultants(this.currentPage, this.pageSize)\n      .subscribe(\n        newData => {\n          console.log(`Reçu ${newData.length} consultants de plus`);\n          \n          if (newData.length === 0) {\n            this.hasMoreData = false;\n            this.isLoadingMore = false;\n            console.log(\"hasMoreData défini à false\");\n            return;\n          }\n          \n          // Ajouter les nouvelles données aux consultants existants\n          this.consultants = [...this.consultants, ...newData];\n          \n          // Filtrer les nouvelles données en fonction des filtres actuels\n          this.applyFilters();\n          \n          this.isLoadingMore = false;\n          \n          // Vérifier s'il y a plus de données à charger\n          this.hasMoreData = newData.length >= this.pageSize;\n          console.log(`hasMoreData défini à ${this.hasMoreData}`);\n        },\n        error => {\n          console.error('Error fetching more consultants:', error);\n          this.isLoadingMore = false;\n          this.errorMessage = 'Erreur lors du chargement de plus de consultants. Veuillez réessayer.';\n        }\n      );\n  }\n\n  /**\n   * Charge tous les consultants pour pouvoir extraire toutes les compétences disponibles pour le filtrage\n   */\n  loadAllConsultantsForFiltering(): void {\n    this.consultantService.getConsultants()\n      .subscribe(\n        data => {\n          this.allConsultants = data;\n          this.extractAvailableSkills();\n          this.extractAvailableLocations();\n        },\n        error => {\n          console.error('Error fetching all consultants for filtering:', error);\n        }\n      );\n  }\n\n  /**\n   * Extract unique skills from all consultants for filtering\n   */\n  extractAvailableSkills(): void {\n    const skillsSet = new Set<string>();\n    \n    this.allConsultants.forEach(consultant => {\n      consultant.skills.forEach(skill => {\n        skillsSet.add(skill);\n      });\n    });\n    \n    this.availableSkills = Array.from(skillsSet).sort();\n  }\n\n  /**\n   * Extract unique locations from all consultants for filtering\n   */\n  extractAvailableLocations(): void {\n    const locationsSet = new Set<string>();\n    \n    this.allConsultants.forEach(consultant => {\n      if (consultant.location) {\n        // Split locations if they are comma-separated\n        const locations = consultant.location.split(',').map(loc => loc.trim());\n        locations.forEach(location => {\n          locationsSet.add(location);\n        });\n      }\n    });\n    \n    this.availableLocations = Array.from(locationsSet).sort();\n  }\n\n  /**\n   * Filter consultants based on current search/filter parameters\n   */\n  applyFilters(): void {\n    if (!this.consultants.length) {\n      this.filteredConsultants = [];\n      return;\n    }\n    \n    this.filteredConsultants = this.consultantService.filterConsultants(\n      this.consultants,\n      this.searchText,\n      this.selectedSkills,\n      this.selectedAvailability,\n      this.selectedExperience,\n      this.selectedLocation\n    );\n    \n    console.log(`Après filtrage, taille totale de la liste: ${this.filteredConsultants.length}`);\n  }\n  \n  // Méthodes pour les filtres\n  onSearchChange(): void {\n    this.applyFilters();\n  }\n  \n  onExperienceChange(): void {\n    this.applyFilters();\n  }\n  \n  onAvailabilityChange(): void {\n    this.applyFilters();\n  }\n  \n  onLocationChange(): void {\n    this.applyFilters();\n  }\n  \n  toggleSkillFilter(skill: string): void {\n    const index = this.selectedSkills.indexOf(skill);\n    if (index === -1) {\n      // Si la compétence n'est pas dans la liste, l'ajouter\n      this.selectedSkills.push(skill);\n    } else {\n      // Si la compétence est déjà dans la liste, la retirer\n      this.selectedSkills.splice(index, 1);\n    }\n    this.applyFilters();\n  }\n  \n  onToggleMoreFilters(event: MouseEvent): void {\n    event.stopPropagation();\n    this.moreFiltersOpen = !this.moreFiltersOpen;\n  }\n  \n  onToggleSkillsDropdown(event: MouseEvent): void {\n    event.stopPropagation();\n    this.skillsDropdownOpen = !this.skillsDropdownOpen;\n  }\n  \n  // Méthodes d'action sur les consultants\n  openLinkedIn(url: string): void {\n    // Si nous sommes dans une extension Chrome, utiliser l'API chrome.tabs\n    if (typeof chrome !== 'undefined' && chrome.tabs) {\n      chrome.tabs.create({ url });\n    } else {\n      // Sinon, ouvrir dans un nouvel onglet\n      window.open(url, '_blank');\n    }\n  }\n  \n  showPhone(phone: string | null): void {\n    if (phone) {\n      // Pour un numéro de téléphone, nous pourrions ouvrir un lien tel: ou afficher une alerte\n      alert(`Téléphone: ${phone}`);\n    } else {\n      alert('Numéro de téléphone non disponible');\n    }\n  }\n  \n  sendEmail(email: string | null): void {\n    if (email) {\n      // Ouvrir le client de messagerie par défaut\n      window.location.href = `mailto:${email}`;\n    } else {\n      alert('Adresse email non disponible');\n    }\n  }\n  \n  // Méthodes pour les dropdowns et expansions\n  toggleDropdown(id: string, event: any): void {\n    if (event.event && event.event.stopPropagation) {\n      // Si c'est un objet avec un event de notre composant\n      event.event.stopPropagation();\n    } else if (event && event.stopPropagation) {\n      // Si c'est un MouseEvent\n      event.stopPropagation();\n    }\n    \n    // Fermer tous les autres dropdowns\n    Object.keys(this.dropdownOpen).forEach(key => {\n      if (key !== id) {\n        this.dropdownOpen[key] = false;\n      }\n    });\n    \n    // Basculer l'état du dropdown actuel\n    this.dropdownOpen[id] = !this.dropdownOpen[id];\n  }\n  \n  toggleMessageExpansion(id: string, event: any): void {\n    if (event.event && event.event.stopPropagation) {\n      // Si c'est un objet avec un event de notre composant\n      event.event.stopPropagation();\n    } else if (event && event.stopPropagation) {\n      // Si c'est un MouseEvent\n      event.stopPropagation();\n    }\n    this.expandedMessages[id] = !this.expandedMessages[id];\n    console.log(\"Message expansion toggled for ID:\", id, \"New state:\", this.expandedMessages[id]);\n  }\n  \n  toggleExpandMessage(id: string, event: any): void {\n    if (event.expanded !== undefined) {\n      // Si c'est un objet avec expanded, c'est un événement de notre composant\n      this.expandedMessages[id + '-message'] = event.expanded;\n    } else if (event && event.stopPropagation) {\n      // Si c'est un MouseEvent\n      event.stopPropagation();\n      this.expandedMessages[id + '-message'] = !this.expandedMessages[id + '-message'];\n    }\n  }\n  \n  toggleDetailsExpansion(id: string, event: any): void {\n    if (event.event && event.event.stopPropagation) {\n      // Si c'est un objet avec un event de notre composant\n      event.event.stopPropagation();\n    } else if (event && event.stopPropagation) {\n      // Si c'est un MouseEvent\n      event.stopPropagation();\n    }\n    this.expandedDetails[id] = !this.expandedDetails[id];\n    console.log(\"Details expansion toggled for ID:\", id, \"New state:\", this.expandedDetails[id]);\n  }\n  \n  // Méthodes utilitaires\n  formatMessage(message: string): string {\n    return message.replace(/#(\\w+)/g, '<span class=\"text-blue-600 text-xs font-medium hover:text-blue-800 transition-colors duration-300\">#$1</span>');\n  }\n  \n  isMessageLong(message: string): boolean {\n    return message.length > 150;\n  }\n  \n  getSeniorityBars(experience: ExperienceLevel): number {\n    if (experience === 'less_than_3') return 1;\n    if (experience === 'between_3_and_10') return 2;\n    return 3;\n  }\n  \n  @HostListener('document:click')\n  closeDropdowns(): void {\n    Object.keys(this.dropdownOpen).forEach(id => {\n      this.dropdownOpen[id] = false;\n    });\n  }\n}","<!-- Filters Section -->\n<div class=\"bg-white border border-gray-200 rounded-md p-4 mb-4 shadow-sm transition-all duration-300 hover:shadow\">\n  <!-- Search Input - Seul sur sa ligne -->\n  <div class=\"mb-1\">\n    <div class=\"relative\">\n      <div class=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\n        <svg class=\"h-5 w-5 text-gray-400\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n          <path fill-rule=\"evenodd\" d=\"M8 4a4 4 0 100 8 4 4 0 000-8zM2 8a6 6 0 1110.89 3.476l4.817 4.817a1 1 0 01-1.414 1.414l-4.816-4.816A6 6 0 012 8z\" clip-rule=\"evenodd\" />\n        </svg>\n      </div>\n      <input \n        type=\"text\" \n        [(ngModel)]=\"searchText\" \n        (keyup)=\"onSearchChange()\" \n        placeholder=\"Rechercher un consultant...\" \n        class=\"w-full pl-10 pr-3 py-2 rounded-md border border-gray-300 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all duration-300\"\n      >\n    </div>\n  </div>\n  \n  <!-- Deuxième ligne avec les autres filtres -->\n  <div class=\"flex flex-col space-y-1\">\n    <!-- Texte \"Plus de filtres\" en mode mobile aligné à droite -->\n    <div class=\"flex justify-end items-center md:hidden mt-0 mb-1\">\n      <a \n        href=\"javascript:void(0)\"\n        (click)=\"onToggleMoreFilters($event)\"\n        class=\"text-blue-600 text-sm hover:text-blue-800 hover:underline focus:outline-none transition-colors duration-300 flex items-center\">\n        {{ moreFiltersOpen ? 'Moins de filtres' : 'Plus de filtres' }}\n        <svg class=\"ml-1 h-4 w-4\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\"\n             [ngClass]=\"{'transform rotate-180': moreFiltersOpen}\">\n          <path fill-rule=\"evenodd\" d=\"M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z\" clip-rule=\"evenodd\" />\n        </svg>\n      </a>\n    </div>\n    \n    <!-- Filtres avancés - Visibles en desktop ou quand \"Plus de filtres\" est actif -->\n    <div class=\"flex flex-col md:flex-row md:items-center md:justify-between space-y-3 md:space-y-0\"\n         [ngClass]=\"{'hidden md:flex': !moreFiltersOpen, 'flex': moreFiltersOpen}\">\n      <!-- Tous les filtres dans un conteneur flex -->\n      <div class=\"flex flex-col md:flex-row md:items-center md:justify-between space-y-3 md:space-y-0 w-full\">\n        <!-- Experience Filter -->\n        <select \n          [(ngModel)]=\"selectedExperience\" \n          (change)=\"onExperienceChange()\" \n          class=\"md:w-[23%] px-3 py-2 border border-gray-300 rounded-md text-sm text-gray-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all duration-300\">\n          <option value=\"all\">Tout niveau d'expérience</option>\n          <option *ngFor=\"let exp of experienceOptions\" [value]=\"exp.value\">{{ exp.label }}</option>\n        </select>\n        \n        <!-- Availability Filter -->\n        <select \n          [(ngModel)]=\"selectedAvailability\" \n          (change)=\"onAvailabilityChange()\" \n          class=\"md:w-[23%] px-3 py-2 border border-gray-300 rounded-md text-sm text-gray-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all duration-300\">\n          <option value=\"all\">Toute disponibilité</option>\n          <option *ngFor=\"let avail of availabilityOptions\" [value]=\"avail.value\">{{ avail.label }}</option>\n        </select>\n        \n        <!-- Location Filter -->\n        <select \n          [(ngModel)]=\"selectedLocation\" \n          (change)=\"onLocationChange()\" \n          class=\"md:w-[23%] px-3 py-2 border border-gray-300 rounded-md text-sm text-gray-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all duration-300\">\n          <option value=\"all\">Toute localisation</option>\n          <option *ngFor=\"let location of availableLocations\" [value]=\"location\">{{ location }}</option>\n        </select>\n        \n        <!-- Filtre Compétences -->\n        <div class=\"relative md:w-[23%]\">\n          <button \n            type=\"button\" \n            (click)=\"onToggleSkillsDropdown($event)\" \n            class=\"inline-flex justify-between w-full px-3 py-2 text-sm font-medium text-gray-700 bg-white border border-gray-300 rounded-md shadow-sm hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-blue-500 transition-all duration-300\">\n            Compétences\n            <svg class=\"-mr-1 ml-2 h-5 w-5\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n              <path fill-rule=\"evenodd\" d=\"M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z\" clip-rule=\"evenodd\" />\n            </svg>\n          </button>\n          \n          <div *ngIf=\"skillsDropdownOpen\" \n              class=\"origin-top-right absolute right-0 mt-2 w-72 rounded-md shadow-lg bg-white ring-1 ring-black ring-opacity-5 focus:outline-none transition-all duration-300 z-50\"\n              (click)=\"$event.stopPropagation()\">\n            <div class=\"py-1 max-h-48 overflow-y-auto\">\n              <div *ngFor=\"let skill of availableSkills\" \n                  class=\"flex items-center px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 cursor-pointer transition-colors duration-300\"\n                  (click)=\"$event.stopPropagation()\">\n                <input \n                  type=\"checkbox\" \n                  [id]=\"'skill-' + skill\" \n                  (change)=\"toggleSkillFilter(skill)\" \n                  [checked]=\"selectedSkills.includes(skill)\" \n                  class=\"h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded transition-colors duration-300\"\n                >\n                <label [for]=\"'skill-' + skill\" class=\"ml-2 block text-sm text-gray-900 cursor-pointer\">\n                  {{ skill }}\n                </label>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  \n  <!-- Selected Skills Pills -->\n  <div *ngIf=\"selectedSkills.length > 0\" class=\"flex flex-wrap mt-3\">\n    <div *ngFor=\"let skill of selectedSkills\" \n        class=\"filter-pill\">\n      {{ skill }}\n      <button (click)=\"toggleSkillFilter(skill)\" class=\"ml-1 focus:outline-none\">\n        <svg class=\"h-3 w-3 close-icon\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n          <path fill-rule=\"evenodd\" d=\"M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z\" clip-rule=\"evenodd\" />\n        </svg>\n      </button>\n    </div>\n  </div>\n</div>\n\n<!-- Section défilante pour les consultants -->\n<div #consultantsList class=\"flex-1 overflow-y-auto p-4 h-full\" (scroll)=\"onScroll($event)\" style=\"min-height: 70vh; height: calc(100vh - 200px); overflow-y: auto\">\n  <!-- Loading State -->\n  <div *ngIf=\"isLoading\" class=\"flex justify-center items-center p-10\">\n    <div class=\"animate-spin h-10 w-10 border-4 border-blue-500 border-t-transparent rounded-full\" role=\"status\">\n      <span class=\"sr-only\">Chargement...</span>\n    </div>\n  </div>\n  \n  <!-- Error Message -->\n  <div *ngIf=\"errorMessage\" class=\"bg-red-50 border-l-4 border-red-500 text-red-700 p-4 rounded-md shadow-sm mb-4\">\n    {{ errorMessage }}\n  </div>\n  \n  <!-- Empty State -->\n  <div *ngIf=\"!isLoading && !errorMessage && filteredConsultants.length === 0\" class=\"text-center p-10 bg-gray-50 rounded-lg\">\n    <p class=\"text-gray-500\">Aucun consultant trouvé</p>\n  </div>\n  \n  <!-- Consultants List -->\n  <div *ngIf=\"!isLoading && filteredConsultants.length > 0\" class=\"space-y-4 mx-auto px-2 py-1\">\n    <app-consultant-card \n      *ngFor=\"let consultant of filteredConsultants\"\n      [consultant]=\"consultant\"\n      [expanded]=\"expandedMessages[consultant.id + '-message']\"\n      [messageExpanded]=\"expandedMessages[consultant.id]\"\n      [detailsExpanded]=\"expandedDetails[consultant.id]\"\n      [dropdownOpen]=\"dropdownOpen[consultant.id]\"\n      (toggleExpansion)=\"toggleExpandMessage(consultant.id, $event)\"\n      (toggleMessageExpansion)=\"toggleMessageExpansion(consultant.id, $event)\"\n      (toggleDetailsExpansion)=\"toggleDetailsExpansion(consultant.id, $event)\"\n      (toggleDropdown)=\"toggleDropdown(consultant.id, $event)\"\n      (linkedinClick)=\"openLinkedIn(consultant.linkedinUrl)\"\n      (phoneClick)=\"showPhone(consultant.phone)\"\n      (emailClick)=\"sendEmail(consultant.email)\">\n    </app-consultant-card>\n  </div>\n  \n  <!-- Loading More Indicator -->\n  <div *ngIf=\"isLoadingMore\" class=\"flex justify-center items-center p-6\">\n    <div class=\"animate-spin h-8 w-8 border-4 border-blue-500 border-t-transparent rounded-full\" role=\"status\">\n      <span class=\"sr-only\">Chargement...</span>\n    </div>\n  </div>\n  \n  <!-- End of Results -->\n  <div *ngIf=\"!isLoading && !isLoadingMore && !hasMoreData && filteredConsultants.length > 0\" class=\"text-center p-6\">\n    <p class=\"text-gray-500 text-sm\">Fin des résultats</p>\n  </div>\n</div>","export const environment = {\n  production: false,\n  // URL complète pour le mode développement\n  apiUrl: 'http://0.0.0.0:8000/api',\n  // URL spécifique pour l'environnement Replit\n  apiUrlReplit: `https://${window.location.hostname.replace('5000', '80')}/api`,\n  // Pour l'extension Chrome, on détecte si on est dans un contexte d'extension\n  isExtension: typeof chrome !== 'undefined' && chrome.runtime && chrome.runtime.id\n};\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { LoginComponent } from './components/auth/login/login.component';\nimport { UserProfileComponent } from './components/user/profile/user-profile.component';\nimport { ConsultantListComponent } from './components/consultant-list/consultant-list.component';\nimport { AuthGuard } from './guards/auth.guard';\n\nconst routes: Routes = [\n  // Route principale - consultants list\n  { path: '', redirectTo: '/consultants', pathMatch: 'full' },\n  { path: 'consultants', component: ConsultantListComponent }, // Route principale pour la liste des consultants\n  \n  // Routes d'authentification\n  { path: 'login', component: LoginComponent },\n  \n  // Routes protégées par AuthGuard\n  { \n    path: 'profile', \n    component: UserProfileComponent, \n    canActivate: [AuthGuard] \n  },\n  \n  // Routes spécifiques aux rôles\n  {\n    path: 'admin',\n    component: UserProfileComponent, // Temporaire - à remplacer par AdminDashboardComponent\n    canActivate: [AuthGuard],\n    data: { roles: ['admin'] }\n  },\n  {\n    path: 'consultant-profile',\n    component: UserProfileComponent, // Temporaire - à remplacer par ConsultantProfileComponent\n    canActivate: [AuthGuard],\n    data: { roles: ['consultant'] }\n  },\n  \n  // Redirection par défaut\n  { path: '**', redirectTo: '' }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { useHash: true })],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }","import { Component, OnInit } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Router } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators, ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { AuthService } from '../../../services/auth.service';\nimport { ModalService } from '../../../services/modal.service';\nimport { EmailAuthCredentials } from '../../../models/user.model';\nimport { HttpErrorResponse } from '@angular/common/http';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css'],\n  standalone: true,\n  imports: [CommonModule, ReactiveFormsModule, FormsModule]\n})\nexport class LoginComponent implements OnInit {\n  loginForm!: FormGroup;\n  isLoading = false;\n  loginError: string | null = null;\n  rememberMe = false;\n  loginMode: 'email' = 'email';\n\n  constructor(\n    private authService: AuthService, \n    private router: Router,\n    private fb: FormBuilder,\n    public modalService: ModalService // Changé de private à public pour l'accès depuis le template\n  ) { }\n\n  ngOnInit(): void {\n    // Initialiser le formulaire\n    this.loginForm = this.fb.group({\n      username: ['', [Validators.required]],\n      password: ['', [Validators.required, Validators.minLength(6)]],\n      rememberMe: [false]\n    });\n  }\n\n  onSubmit(): void {\n    if (this.loginForm.invalid) {\n      return;\n    }\n\n    this.isLoading = true;\n    this.loginError = null;\n\n    const credentials: EmailAuthCredentials = {\n      email: this.loginForm.value.username,\n      password: this.loginForm.value.password,\n      rememberMe: this.loginForm.value.rememberMe\n    };\n\n    this.authService.loginWithEmail(credentials).subscribe({\n      next: () => {\n        this.isLoading = false;\n        this.closeModal();\n      },\n      error: (error: HttpErrorResponse) => {\n        this.handleLoginError(error);\n      }\n    });\n  }\n\n  closeModal(): void {\n    this.modalService.closeLoginModal();\n    this.resetForm();\n  }\n\n  resetForm(): void {\n    this.loginForm.reset({\n      username: '',\n      password: '',\n      rememberMe: false\n    });\n    this.loginError = null;\n    this.isLoading = false;\n  }\n\n  private handleLoginError(error: HttpErrorResponse): void {\n    this.isLoading = false;\n    if (error.status === 401) {\n      this.loginError = 'Identifiants incorrects. Veuillez réessayer.';\n    } else {\n      this.loginError = 'Une erreur est survenue. Veuillez réessayer plus tard.';\n    }\n    console.error('Erreur de connexion:', error);\n  }\n}","<!-- Overlay du modal -->\n<div \n  class=\"fixed inset-0 z-50 flex items-center justify-center p-4 bg-black bg-opacity-60 transition-opacity duration-300\"\n  [class.opacity-0]=\"!modalService.isLoginModalVisible\"\n  [class.opacity-100]=\"modalService.isLoginModalVisible\"\n  [class.invisible]=\"!modalService.isLoginModalVisible\"\n>\n  <!-- Conteneur du modal -->\n  <div \n    class=\"w-full max-w-md bg-white rounded-lg shadow-xl transition-all duration-300 ease-in-out transform\"\n    [class.scale-95]=\"!modalService.isLoginModalVisible\"\n    [class.scale-100]=\"modalService.isLoginModalVisible\"\n    [class.opacity-0]=\"!modalService.isLoginModalVisible\"\n    [class.opacity-100]=\"modalService.isLoginModalVisible\"\n  >\n    <!-- Entête du modal -->\n    <div class=\"flex items-center justify-between px-6 py-4 border-b\">\n      <h2 class=\"text-xl font-semibold text-gray-800\">Connexion à FastConnect</h2>\n      <button \n        type=\"button\" \n        class=\"text-gray-500 hover:text-gray-700 focus:outline-none\"\n        (click)=\"closeModal()\"\n      >\n        <svg class=\"w-5 h-5\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n          <path fill-rule=\"evenodd\" d=\"M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z\" clip-rule=\"evenodd\"></path>\n        </svg>\n      </button>\n    </div>\n    \n    <div class=\"px-6 py-4\">\n      <!-- Message d'erreur -->\n      <div *ngIf=\"loginError\" class=\"mb-4 p-3 bg-red-50 border border-red-200 text-red-600 rounded-md text-sm\">\n        {{ loginError }}\n      </div>\n      \n      <!-- Formulaire de connexion par email -->\n      <div class=\"space-y-6\">\n        <form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\n          <!-- Email -->\n          <div class=\"mb-4\">\n            <label for=\"username\" class=\"block text-sm font-medium text-gray-700 mb-1\">\n              Email\n            </label>\n            <input \n              id=\"username\" \n              type=\"email\" \n              formControlName=\"username\"\n              class=\"w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:border-transparent\"\n              [ngClass]=\"{'border-red-300': loginForm.get('username')?.invalid && loginForm.get('username')?.touched}\"\n              placeholder=\"Entrez votre email\"\n            >\n            <div *ngIf=\"loginForm.get('username')?.invalid && loginForm.get('username')?.touched\" class=\"mt-1 text-sm text-red-600\">\n              L'email est requis\n            </div>\n          </div>\n          \n          <!-- Mot de passe -->\n          <div class=\"mb-4\">\n            <label for=\"password\" class=\"block text-sm font-medium text-gray-700 mb-1\">\n              Mot de passe\n            </label>\n            <input \n              id=\"password\" \n              type=\"password\" \n              formControlName=\"password\"\n              class=\"w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:border-transparent\"\n              [ngClass]=\"{'border-red-300': loginForm.get('password')?.invalid && loginForm.get('password')?.touched}\"\n              placeholder=\"Entrez votre mot de passe\"\n            >\n            <div *ngIf=\"loginForm.get('password')?.invalid && loginForm.get('password')?.touched\" class=\"mt-1 text-sm text-red-600\">\n              <span *ngIf=\"loginForm.get('password')?.errors?.['required']\">Le mot de passe est requis</span>\n              <span *ngIf=\"loginForm.get('password')?.errors?.['minlength']\">Le mot de passe doit contenir au moins 6 caractères</span>\n            </div>\n          </div>\n          \n          <!-- Se souvenir de moi -->\n          <div class=\"flex items-center mb-6\">\n            <input \n              id=\"rememberMe\" \n              type=\"checkbox\" \n              formControlName=\"rememberMe\"\n              class=\"h-4 w-4 text-indigo-600 focus:ring-indigo-500 border-gray-300 rounded\"\n            >\n            <label for=\"rememberMe\" class=\"ml-2 block text-sm text-gray-700\">\n              Se souvenir de moi\n            </label>\n          </div>\n          \n          <!-- Bouton de connexion -->\n          <button \n            type=\"submit\" \n            class=\"w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n            [disabled]=\"loginForm.invalid || isLoading\"\n            [ngClass]=\"{'opacity-70 cursor-not-allowed': loginForm.invalid || isLoading}\"\n          >\n            <span *ngIf=\"isLoading\" class=\"mr-2\">\n              <!-- Icon de chargement (spinner) -->\n              <svg class=\"animate-spin h-4 w-4 text-white inline-block\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n                <circle class=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" stroke-width=\"4\"></circle>\n                <path class=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n              </svg>\n            </span>\n            {{ isLoading ? 'Connexion en cours...' : 'Se connecter' }}\n          </button>\n        </form>\n        \n        <!-- Liens utiles -->\n        <div class=\"flex items-center justify-between\">\n          <a href=\"#\" class=\"text-sm text-indigo-600 hover:text-indigo-700\">\n            Mot de passe oublié ?\n          </a>\n          <a href=\"#\" class=\"text-sm text-indigo-600 hover:text-indigo-700\">\n            Créer un compte\n          </a>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { environment } from '../../environments/environment';\n\n/**\n * Service de base pour les appels API\n * Gère les différentes configurations selon le contexte (application web ou extension Chrome)\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n  private API_URL = environment.apiUrl;\n  private readonly IS_EXTENSION = environment.isExtension;\n  private readonly IS_REPLIT = window.location.hostname.includes('.replit.dev') || \n                               window.location.hostname.includes('.replit.app');\n\n  constructor(private http: HttpClient) {\n    // Si nous sommes sur Replit, utilisez l'URL Replit\n    if (this.IS_REPLIT && environment.apiUrlReplit) {\n      this.API_URL = environment.apiUrlReplit;\n    }\n    \n    console.log('API Service initialisé avec URL:', this.API_URL);\n    console.log('Contexte: ', this.IS_EXTENSION ? 'Extension Chrome' : 'Application Web');\n    console.log('Environnement: ', this.IS_REPLIT ? 'Replit' : 'Local');\n  }\n\n  /**\n   * Crée une URL complète pour une route API\n   * @param endpoint Point de terminaison API (sans le préfixe /api)\n   * @returns URL complète\n   */\n  buildApiUrl(endpoint: string): string {\n    // Si l'endpoint est déjà une URL complète, la retourner telle quelle\n    if (endpoint.startsWith('http://') || endpoint.startsWith('https://')) {\n      return endpoint;\n    }\n    \n    // S'assurer que endpoint commence par \"/\" si ce n'est pas déjà le cas\n    if (!endpoint.startsWith('/')) {\n      endpoint = '/' + endpoint;\n    }\n    \n    // Pour l'extension Chrome, assurons-nous d'utiliser une URL absolue\n    if (this.IS_EXTENSION) {\n      console.log(`Extension context: building absolute URL: ${this.API_URL}${endpoint}`);\n    }\n    \n    return `${this.API_URL}${endpoint}`;\n  }\n\n  /**\n   * Effectue une requête GET\n   * @param endpoint Point de terminaison\n   * @param options Options HTTP\n   * @returns Observable de la réponse\n   */\n  get<T>(endpoint: string, options = {}): Observable<T> {\n    return this.http.get<T>(this.buildApiUrl(endpoint), options);\n  }\n\n  /**\n   * Effectue une requête POST\n   * @param endpoint Point de terminaison\n   * @param body Corps de la requête\n   * @param options Options HTTP\n   * @returns Observable de la réponse\n   */\n  post<T>(endpoint: string, body: any, options = {}): Observable<T> {\n    return this.http.post<T>(this.buildApiUrl(endpoint), body, options);\n  }\n\n  /**\n   * Effectue une requête PUT\n   * @param endpoint Point de terminaison\n   * @param body Corps de la requête\n   * @param options Options HTTP\n   * @returns Observable de la réponse\n   */\n  put<T>(endpoint: string, body: any, options = {}): Observable<T> {\n    return this.http.put<T>(this.buildApiUrl(endpoint), body, options);\n  }\n\n  /**\n   * Effectue une requête DELETE\n   * @param endpoint Point de terminaison\n   * @param options Options HTTP\n   * @returns Observable de la réponse\n   */\n  delete<T>(endpoint: string, options = {}): Observable<T> {\n    return this.http.delete<T>(this.buildApiUrl(endpoint), options);\n  }\n}","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\n/**\n * Service pour gérer l'affichage des modals dans l'application\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class ModalService {\n  private loginModalVisibleSubject = new BehaviorSubject<boolean>(false);\n  private modalBackdropVisibleSubject = new BehaviorSubject<boolean>(false);\n  \n  // Observable public pour que les composants puissent s'abonner aux changements\n  public loginModalVisible$: Observable<boolean> = this.loginModalVisibleSubject.asObservable();\n  public modalBackdropVisible$: Observable<boolean> = this.modalBackdropVisibleSubject.asObservable();\n\n  // État actuel du modal\n  get isLoginModalVisible(): boolean {\n    return this.loginModalVisibleSubject.value;\n  }\n\n  get isModalBackdropVisible(): boolean {\n    return this.modalBackdropVisibleSubject.value;\n  }\n\n  constructor() { }\n\n  /**\n   * Ouvre le modal de connexion\n   */\n  openLoginModal(): void {\n    this.loginModalVisibleSubject.next(true);\n    this.modalBackdropVisibleSubject.next(true);\n  }\n\n  /**\n   * Ferme le modal de connexion\n   */\n  closeLoginModal(): void {\n    this.loginModalVisibleSubject.next(false);\n    this.modalBackdropVisibleSubject.next(false);\n  }\n\n  /**\n   * Ferme tous les modals\n   */\n  closeAllModals(): void {\n    this.closeLoginModal();\n    // Ajouter d'autres fermetures de modals ici si nécessaire\n  }\n}","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ConsultantCardComponent } from './components/consultant-card/consultant-card.component';\nimport { ConsultantListComponent } from './components/consultant-list/consultant-list.component';\nimport { LoginComponent } from './components/auth/login/login.component';\nimport { UserProfileComponent } from './components/user/profile/user-profile.component';\nimport { AuthInterceptor } from './services/auth.interceptor';\nimport { RouterModule } from '@angular/router';\n\n@NgModule({\n  declarations: [\n    AppComponent\n    // Les composants standalone ne doivent pas être déclarés ici\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    AppRoutingModule,\n    RouterModule, // Ajout explicite du RouterModule\n    // Importation des composants standalone\n    ConsultantCardComponent,\n    ConsultantListComponent,\n    LoginComponent,\n    UserProfileComponent\n  ],\n  providers: [\n    // Intercepteur HTTP pour ajouter le token à toutes les requêtes\n    { provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","import { Component, OnInit } from '@angular/core';\nimport { Router, NavigationEnd } from '@angular/router';\nimport { filter } from 'rxjs/operators';\nimport { AuthService } from './services/auth.service';\nimport { User } from './models/user.model';\nimport { ModalService } from './services/modal.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n  standalone: false\n})\nexport class AppComponent implements OnInit {\n  title = 'FastConnect';\n  currentUser: User | null = null;\n  isAuthenticated = false;\n  currentRoute = '';\n  menuOpen = false;\n\n  constructor(\n    private authService: AuthService,\n    private router: Router,\n    public modalService: ModalService\n  ) {}\n\n  ngOnInit(): void {\n    // Observer les changements d'état d'authentification\n    this.authService.authState$.subscribe(state => {\n      this.isAuthenticated = state.isAuthenticated;\n      this.currentUser = state.user;\n    });\n\n    // Observer les changements de route\n    this.router.events.pipe(\n      filter(event => event instanceof NavigationEnd)\n    ).subscribe((event: any) => {\n      this.currentRoute = event.url;\n      this.menuOpen = false; // Fermer le menu à chaque changement de route\n    });\n  }\n\n  toggleMenu(): void {\n    this.menuOpen = !this.menuOpen;\n  }\n\n  openLoginModal(): void {\n    this.modalService.openLoginModal();\n  }\n\n  logout(): void {\n    this.authService.logout().subscribe({\n      next: () => {\n        // Au lieu de rediriger, on reste sur la même page\n        this.menuOpen = false;\n      },\n      error: (error) => {\n        console.error('Erreur lors de la déconnexion:', error);\n        this.menuOpen = false;\n      }\n    });\n  }\n}","<div class=\"flex justify-center w-full h-screen flex-col overflow-hidden\">\n  <div class=\"w-full max-w-3xl mx-auto flex flex-col h-full\">\n    <!-- Header Section en position fixe -->\n    <div class=\"bg-gray-50 p-4 shadow-md z-40\">\n      <div class=\"flex items-center justify-between\">\n        <h1 class=\"text-xl font-bold\">\n          <a routerLink=\"/\" class=\"hover:text-indigo-600 transition duration-150\">\n            {{ title }}\n          </a>\n        </h1>\n        \n        <div class=\"flex items-center\">\n          <!-- User not authenticated -->\n          <div *ngIf=\"!isAuthenticated\" class=\"flex items-center space-x-4\">\n            <button \n              (click)=\"openLoginModal()\" \n              class=\"px-3 py-1.5 bg-indigo-600 text-white rounded-md hover:bg-indigo-700 transition duration-150 text-sm\">\n              Connexion\n            </button>\n          </div>\n          \n          <!-- User authenticated -->\n          <div *ngIf=\"isAuthenticated\" class=\"relative\">\n            <button \n              (click)=\"toggleMenu()\" \n              class=\"flex items-center text-sm font-medium text-gray-700 hover:text-indigo-600 focus:outline-none transition duration-150\"\n              aria-expanded=\"false\"\n            >\n              <span class=\"hidden md:inline mr-1\">{{ currentUser?.firstName || currentUser?.username }}</span>\n              <svg class=\"h-5 w-5\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                <path fill-rule=\"evenodd\" d=\"M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z\" clip-rule=\"evenodd\" />\n              </svg>\n            </button>\n            \n            <!-- Dropdown Menu -->\n            <div \n              *ngIf=\"menuOpen\" \n              class=\"absolute right-0 mt-2 w-48 bg-white rounded-md shadow-lg py-1 z-50 ring-1 ring-black ring-opacity-5\"\n            >\n              <a \n                routerLink=\"/profile\" \n                class=\"block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 transition duration-150\"\n                (click)=\"toggleMenu()\"\n              >\n                Mon profil\n              </a>\n\n              <!-- Liens spécifiques au rôle -->\n              <a \n                *ngIf=\"currentUser?.role === 'admin'\" \n                routerLink=\"/admin\" \n                class=\"block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 transition duration-150\"\n                (click)=\"toggleMenu()\"\n              >\n                Administration\n              </a>\n              \n              <a \n                *ngIf=\"currentUser?.role === 'consultant'\" \n                routerLink=\"/consultant-profile\" \n                class=\"block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 transition duration-150\"\n                (click)=\"toggleMenu()\"\n              >\n                Mon profil consultant\n              </a>\n              \n              <div class=\"border-t border-gray-100 my-1\"></div>\n              <button \n                (click)=\"logout()\" \n                class=\"block w-full text-left px-4 py-2 text-sm text-red-600 hover:bg-gray-100 transition duration-150\"\n              >\n                Déconnexion\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- Route principale (consultants ou autre contenu) -->\n    <router-outlet *ngIf=\"currentRoute !== '/' && currentRoute !== '/consultants'\"></router-outlet>\n    \n    <!-- Afficher la liste des consultants sur la route principale -->\n    <app-consultant-list *ngIf=\"currentRoute === '/' || currentRoute === '/consultants'\"></app-consultant-list>\n  </div>\n  \n  <!-- Login Modal Component -->\n  <app-login></app-login>\n  \n  <!-- Modal Backdrop -->\n  <div \n    *ngIf=\"modalService.isModalBackdropVisible\" \n    class=\"fixed inset-0 bg-black bg-opacity-50 z-40\"\n    (click)=\"modalService.closeAllModals()\"\n  ></div>\n</div>","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { BehaviorSubject, Observable, throwError } from 'rxjs';\nimport { catchError, tap } from 'rxjs/operators';\nimport { \n  User, \n  EmailAuthCredentials, \n  LinkedInProfile, \n  UserRegistration, \n  UserOnboarding, \n  AuthResponse, \n  AuthState, \n  RefreshTokenRequest,\n  UserRole\n} from '../models/user.model';\nimport { environment } from '../../environments/environment';\nimport { ApiService } from './api.service';\n\n/**\n * Service d'authentification pour gérer la connexion/déconnexion et les sessions utilisateur\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  private readonly AUTH_DATA_KEY = 'auth_data';\n  private readonly API_URL = environment.apiUrl;\n  private readonly IS_EXTENSION = environment.isExtension;\n\n  private authStateSubject = new BehaviorSubject<AuthState>({\n    isAuthenticated: false,\n    user: null,\n    token: null,\n    refreshToken: null,\n    tokenExpiration: null\n  });\n\n  public authState$ = this.authStateSubject.asObservable();\n\n  constructor(private http: HttpClient, private apiService: ApiService) {\n    this.loadAuthState();\n    console.log('Auth Service initialisé');\n  }\n\n  /**\n   * Obtenir l'état d'authentification actuel\n   */\n  get currentAuthState(): AuthState {\n    return this.authStateSubject.value;\n  }\n\n  /**\n   * Vérifier si l'utilisateur est authentifié\n   */\n  get isAuthenticated(): boolean {\n    return this.currentAuthState.isAuthenticated && !this.isTokenExpired();\n  }\n\n  /**\n   * Obtenir l'utilisateur actuellement connecté\n   */\n  get currentUser(): User | null {\n    return this.currentAuthState.user;\n  }\n\n  /**\n   * Obtenir le token JWT actuel\n   */\n  get token(): string | null {\n    if (this.isTokenExpired()) {\n      return null;\n    }\n    return this.currentAuthState.token;\n  }\n\n  /**\n   * Authentification avec email et mot de passe\n   * @param credentials Informations d'authentification (email, mot de passe)\n   */\n  loginWithEmail(credentials: EmailAuthCredentials): Observable<AuthResponse> {\n    return this.apiService.post<AuthResponse>('auth/login', credentials)\n      .pipe(\n        tap(response => this.handleAuthResponse(response)),\n        catchError(error => {\n          console.error('Erreur lors de la connexion:', error);\n          return throwError(() => error);\n        })\n      );\n  }\n\n  /**\n   * Authentification avec LinkedIn\n   * @param profile Profil LinkedIn\n   */\n  loginWithLinkedIn(profile: LinkedInProfile): Observable<AuthResponse> {\n    return this.apiService.post<AuthResponse>('auth/linkedin', profile)\n      .pipe(\n        tap(response => this.handleAuthResponse(response)),\n        catchError(error => {\n          console.error('Erreur lors de la connexion avec LinkedIn:', error);\n          return throwError(() => error);\n        })\n      );\n  }\n\n  /**\n   * Inscription d'un nouvel utilisateur\n   * @param user Données de l'utilisateur à inscrire\n   */\n  register(user: UserRegistration): Observable<AuthResponse> {\n    return this.apiService.post<AuthResponse>('auth/register', user)\n      .pipe(\n        tap(response => this.handleAuthResponse(response)),\n        catchError(error => {\n          console.error('Erreur lors de l\\'inscription:', error);\n          return throwError(() => error);\n        })\n      );\n  }\n\n  /**\n   * Compléter l'onboarding de l'utilisateur (choix de rôle, etc.)\n   * @param onboardingData Données d'onboarding\n   */\n  completeOnboarding(onboardingData: UserOnboarding): Observable<AuthResponse> {\n    return this.apiService.post<AuthResponse>('auth/onboarding', onboardingData)\n      .pipe(\n        tap(response => this.handleAuthResponse(response)),\n        catchError(error => {\n          console.error('Erreur lors de l\\'onboarding:', error);\n          return throwError(() => error);\n        })\n      );\n  }\n\n  /**\n   * Rafraîchir le token JWT\n   * @param refreshToken Token de rafraîchissement\n   */\n  refreshToken(refreshToken: string): Observable<AuthResponse> {\n    const request: RefreshTokenRequest = { refreshToken };\n    return this.apiService.post<AuthResponse>('auth/refresh-token', request)\n      .pipe(\n        tap(response => this.handleAuthResponse(response)),\n        catchError(error => {\n          console.error('Erreur lors du rafraîchissement du token:', error);\n          // En cas d'échec, déconnecter l'utilisateur\n          this.logout();\n          return throwError(() => error);\n        })\n      );\n  }\n\n  /**\n   * Vérifier si l'utilisateur a besoin de compléter l'onboarding\n   */\n  needsOnboarding(): boolean {\n    const user = this.currentUser;\n    return !!user && !user.onboardingCompleted;\n  }\n\n  /**\n   * Obtenir le rôle de l'utilisateur actuel\n   */\n  getUserRole(): UserRole | null {\n    const user = this.currentUser;\n    return user ? user.role : null;\n  }\n\n  /**\n   * Déconnexion de l'utilisateur\n   */\n  logout(): Observable<boolean> {\n    // Appel à l'API pour invalider le token côté serveur (optionnel)\n    return this.apiService.post<boolean>('auth/logout', {}).pipe(\n      tap(() => {\n        this.clearAuthState();\n      }),\n      catchError(error => {\n        console.error('Erreur lors de la déconnexion:', error);\n        // Même en cas d'erreur, on efface les données d'authentification côté client\n        this.clearAuthState();\n        return throwError(() => error);\n      })\n    );\n  }\n\n  /**\n   * Vérifier si le token JWT est expiré\n   */\n  private isTokenExpired(): boolean {\n    const expiration = this.currentAuthState.tokenExpiration;\n    if (!expiration) {\n      return true;\n    }\n    return expiration < new Date();\n  }\n\n  /**\n   * Traiter la réponse de l'authentification\n   * @param response Réponse d'authentification de l'API\n   */\n  private handleAuthResponse(response: AuthResponse): void {\n    if (response && response.success) {\n      const expirationDate = new Date(response.expiration);\n      const authState: AuthState = {\n        isAuthenticated: true,\n        user: response.user,\n        token: response.token,\n        refreshToken: response.refreshToken,\n        tokenExpiration: expirationDate\n      };\n      this.saveAuthState(authState);\n      this.authStateSubject.next(authState);\n    }\n  }\n\n  /**\n   * Sauvegarder l'état d'authentification dans le localStorage\n   */\n  private saveAuthState(authState: AuthState): void {\n    try {\n      const state = {\n        ...authState,\n        tokenExpiration: authState.tokenExpiration ? authState.tokenExpiration.toISOString() : null\n      };\n      localStorage.setItem(this.AUTH_DATA_KEY, JSON.stringify(state));\n    } catch (error) {\n      console.error('Erreur lors de la sauvegarde des données d\\'authentification:', error);\n    }\n  }\n\n  /**\n   * Charger l'état d'authentification depuis le localStorage\n   */\n  private loadAuthState(): void {\n    try {\n      const storedState = localStorage.getItem(this.AUTH_DATA_KEY);\n      if (storedState) {\n        const parsedState = JSON.parse(storedState);\n        const authState: AuthState = {\n          isAuthenticated: parsedState.isAuthenticated,\n          user: parsedState.user,\n          token: parsedState.token,\n          refreshToken: parsedState.refreshToken,\n          tokenExpiration: parsedState.tokenExpiration ? new Date(parsedState.tokenExpiration) : null\n        };\n        \n        // Vérifier si le token est expiré\n        if (authState.isAuthenticated && this.isTokenExpired()) {\n          // Si le token est expiré, tenter de le rafraîchir automatiquement\n          const refreshToken = authState.refreshToken;\n          if (refreshToken) {\n            this.refreshToken(refreshToken).subscribe({\n              error: () => this.clearAuthState()\n            });\n          } else {\n            this.clearAuthState();\n          }\n        } else {\n          this.authStateSubject.next(authState);\n        }\n      }\n    } catch (error) {\n      console.error('Erreur lors du chargement des données d\\'authentification:', error);\n      this.clearAuthState();\n    }\n  }\n\n  /**\n   * Effacer l'état d'authentification\n   */\n  private clearAuthState(): void {\n    localStorage.removeItem(this.AUTH_DATA_KEY);\n    this.authStateSubject.next({\n      isAuthenticated: false,\n      user: null,\n      token: null,\n      refreshToken: null,\n      tokenExpiration: null\n    });\n  }\n}","import { Injectable } from '@angular/core';\nimport { Observable, of, throwError } from 'rxjs';\nimport { map, catchError, tap, delay } from 'rxjs/operators';\nimport { Consultant, ConsultantWithTags, ExperienceLevel, AvailabilityStatus } from '../models/consultant.model';\nimport { environment } from '../../environments/environment';\nimport { ApiService } from './api.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConsultantService {\n  private mockData: Consultant[] = [];\n\n  constructor(private apiService: ApiService) { \n    console.log('ConsultantService initialized');\n    \n    // Générons quand même les données mockées en cas de besoin\n    this.generateMockData();\n  }\n\n  /**\n   * Génère des données de test pour le développement\n   */\n  private generateMockData(): void {\n    const roles = ['Développeur Full Stack', 'Data Scientist', 'DevOps Engineer', 'UX/UI Designer', 'Product Manager', 'Architecte Logiciel', 'Mobile Developer', 'Frontend Developer', 'Backend Developer', 'SRE/Cloud Engineer'];\n    const types = ['Freelance', 'Salarié', 'Consultant'];\n    const locations = ['Paris', 'Lyon', 'Marseille', 'Toulouse', 'Bordeaux', 'Lille', 'Nantes', 'Strasbourg', 'Remote', 'Hybride', 'Full-Remote', 'Luxembourg', 'Bruxelles'];\n    const experiences: ExperienceLevel[] = ['less_than_3', 'between_3_and_10', 'more_than_10'];\n    const availabilities: AvailabilityStatus[] = [0, 1, 2]; // 0 = available, 1 = soon, 2 = unavailable\n    \n    // Entreprises pour les expériences professionnelles\n    const companies = [\n      'Accenture', 'Capgemini', 'Sopra Steria', 'SNCF', 'Orange', 'Total', 'BNP Paribas', \n      'Société Générale', 'Crédit Agricole', 'AXA', 'Engie', 'EDF', 'L\\'Oréal', 'Carrefour', \n      'Google', 'Microsoft', 'Amazon', 'Apple', 'Facebook', 'Twitter', 'Airbnb', 'Uber', \n      'Doctolib', 'Deezer', 'Blablacar', 'OVH', 'Thales', 'Atos', 'IBM', 'HP', 'Dell', \n      'Allianz', 'Axa', 'MAIF', 'La Poste', 'Air France', 'RATP', 'SNCF'\n    ];\n    \n    const skillsPool = [\n      'JavaScript', 'TypeScript', 'Angular', 'React', 'Vue.js', 'Node.js', 'Python', 'Java', 'C#', '.NET',\n      'AWS', 'Azure', 'GCP', 'Docker', 'Kubernetes', 'CI/CD', 'Jenkins', 'Git', 'GitHub Actions',\n      'SQL', 'NoSQL', 'MongoDB', 'PostgreSQL', 'MySQL', 'Oracle', 'Redis',\n      'HTML', 'CSS', 'SASS', 'LESS', 'Tailwind CSS', 'Bootstrap', 'Material Design',\n      'REST API', 'GraphQL', 'gRPC', 'WebSockets', 'Microservices', 'Serverless',\n      'Agile', 'Scrum', 'Kanban', 'Jira', 'Confluence', 'TDD', 'BDD', 'DDD',\n      'Machine Learning', 'AI', 'Deep Learning', 'NLP', 'Computer Vision', 'Data Analysis',\n      'Mobile', 'iOS', 'Android', 'Kotlin', 'Swift', 'React Native', 'Flutter'\n    ];\n    \n    // Domaines d'expertise spécifiques \n    const expertiseDomains = [\n      'Architecture logicielle', 'Cybersécurité', 'Cloud computing', 'DevOps', 'FinTech', \n      'E-commerce', 'Santé', 'Transport', 'Énergie', 'Télécommunications', 'Médias', \n      'Éducation', 'Retail', 'Industrie 4.0', 'Smart City', 'IoT', 'Blockchain', \n      'Intelligence artificielle', 'Big Data', 'Réalité virtuelle', 'Réalité augmentée', \n      'User experience', 'Accessibilité', 'Sécurité des données', 'Protection de la vie privée',\n      'Transformation digitale', 'Innovation', 'Conduite du changement', 'Agilité à l\\'échelle', \n      'Performance web', 'Mobile first', 'Progressive Web Apps', 'Microservices'\n    ];\n    \n    // Secteurs d'activité\n    const activitySectors = [\n      'Banque & Finance', 'Assurance', 'Santé', 'Pharmaceutique', 'Luxe', \n      'Commerce de détail', 'Transport & Logistique', 'Aéronautique', 'Automobile', \n      'Télécommunications', 'Média & Divertissement', 'Énergie', 'Industrie manufacturière', \n      'Services publics', 'Défense', 'Éducation', 'Agroalimentaire', 'Hôtellerie & Restauration', \n      'Immobilier', 'Construction', 'High-Tech', 'Environnement & Développement durable', \n      'Tourisme', 'Sport', 'Mode & Textile', 'Conseil', 'E-commerce'\n    ];\n\n    const messages = [\n      \"Bonjour,\\n\\nJe suis disponible pour des missions de conseil en architecture de systèmes distribués et infrastructures cloud.\\n\\nMon expertise :\\n- Expérience approfondie avec AWS, GCP et Azure\\n- Spécialiste en migration vers le cloud\\n- Optimisation des coûts d'infrastructure\\n\\nJ'ai aidé plus de 15 entreprises à réduire leurs coûts cloud de 30% en moyenne tout en améliorant la performance et la fiabilité de leurs systèmes.\\n\\nÀ l'écoute de nouvelles opportunités à partir de mai 2025.\\n\\n#technique #architecture #devops #cloud #costoptimization\",\n      \n      \"Bonjour,\\n\\nExpert en solutions #cloud et #cybersécurité, je suis passionné par les technologies émergentes et la sécurisation des infrastructures critiques.\\n\\nProfil :\\n- +10 ans d'expérience en sécurité des SI\\n- Certifications CISSP et AWS Security Specialist\\n- Spécialiste des normes ISO27001 et RGPD\\n\\nRécemment, j'ai dirigé des audits de sécurité pour des entreprises du CAC 40 et implémenté des stratégies de défense qui ont réduit les incidents de 75%.\\n\\nDisponible immédiatement pour des missions d'audit ou de conseil stratégique.\\n\\n#security #compliance #audit #training\",\n      \n      \"Bonjour à tous,\\n\\nDéveloppeur full-stack avec 8 ans d'expérience en #javascript #react #nodejs, je recherche de nouveaux défis techniques.\\n\\nMes compétences :\\n- Architecture microservices\\n- Optimisation de performance\\n- Certifié AWS Solutions Architect et MongoDB Developer\\n\\nMa dernière réalisation : refonte complète d'une plateforme e-commerce (10M+ visiteurs) avec mise en place d'une architecture JAMstack qui a amélioré les temps de chargement de 300%.\\n\\nDisponible dès juillet pour des projets innovants.\\n\\n#fullstack #performance #architecture #ecommerce\",\n      \n      \"Bonjour,\\n\\nData Scientist spécialisé #MachineLearning et #DeepLearning, je suis actuellement disponible pour des missions en remote.\\n\\nMon parcours :\\n- PhD en Intelligence Artificielle (École Polytechnique)\\n- Expert TensorFlow, PyTorch et scikit-learn\\n- Spécialiste en modèles prédictifs et détection de fraudes\\n\\nMon projet récent : système de détection de fraude financière avec réduction des faux positifs de 60% tout en maintenant un taux de détection >95%.\\n\\nÀ la recherche d'opportunités à fort impact social ou environnemental.\\n\\n#DataScience #AI #analytics #python\",\n      \n      \"Bonjour,\\n\\nConsultant UX/UI à la recherche d'une nouvelle opportunité dans le secteur de la santé ou de l'éducation.\\n\\nMon expertise :\\n- Portfolio de +30 projets (startups et grandes entreprises)\\n- Recherche utilisateur, prototypage, tests d'utilisabilité\\n- Maîtrise de Figma, Adobe XD et Sketch\\n\\nRécemment, j'ai dirigé la refonte UX d'une application de santé mentale (500K+ utilisateurs), améliorant la rétention de 40%.\\n\\nJe privilégie les projets à impact social positif.\\n\\nDisponible dès maintenant.\\n\\n#design #frontend #healthcare #edtech #accessibility\",\n      \n      \"Bonjour,\\n\\nArchitecte logiciel expérimenté dans les environnements critiques à haute disponibilité.\\n\\nMes domaines d'expertise :\\n- Conception de systèmes distribués\\n- Traitement de données en temps réel\\n- Architectures événementielles (Kafka, RabbitMQ, Apache Flink)\\n\\nJ'ai conçu des architectures critiques pour les secteurs bancaire et télécoms garantissant une disponibilité de 99,999%.\\n\\nMa spécialité : transformer des systèmes monolithiques en architectures microservices modernes sans perturbation opérationnelle.\\n\\nDisponible à partir de juin 2025.\\n\\n#reliability #architecture #distributed #microservices\",\n      \n      \"Bonjour,\\n\\nDéveloppeur mobile avec +5 ans d'expérience en développement natif et cross-platform.\\n\\nMes technologies :\\n- React Native, Flutter\\n- Kotlin, Swift\\n- AR, ML on-device\\n\\nJ'ai publié plus de 15 applications (App Store/Google Play) totalisant des millions d'utilisateurs.\\n\\nProjet récent : application de fitness ayant atteint le Top 10 de sa catégorie sur l'App Store avec une note de 4,8/5 (50K+ avis).\\n\\nJe suis particulièrement intéressé par les projets innovants utilisant l'AR ou le ML.\\n\\nDisponible immédiatement.\\n\\n#mobile #reactnative #flutter #performance #ux\",\n      \"Expert en solutions DevOps et CI/CD avec une solide expérience en automatisation d'infrastructures et déploiements. Maîtrise de Kubernetes, Terraform, Ansible, Jenkins, GitHub Actions et GitLab CI. J'ai mis en place des pipelines CI/CD robustes pour des équipes de développement de toutes tailles, réduisant les temps de déploiement de plusieurs heures à quelques minutes. #docker #kubernetes #automation #gitops #terraform #IaC\",\n      \"Ingénieur backend passionné par les API performantes et les architectures scalables. Expertise en Java, Spring Boot, Quarkus et microservices. J'ai conçu et implémenté des systèmes capables de traiter des milliers de transactions par seconde avec une latence minimale. Expérience en optimisation de bases de données relationnelles et NoSQL. #java #spring #microservices #performance #scalability #databases\",\n      \"Product Manager orienté données avec background technique en développement et analyse de données. J'ai dirigé le développement de produits SaaS B2B dans les secteurs de la finance et du marketing, en mettant l'accent sur l'expérience utilisateur et l'exploitation des données pour la prise de décision. Certifié Scrum Product Owner et Google Analytics. #produit #analytics #agile #saas #b2b #finance\",\n      \"Spécialiste en cybersécurité pour applications cloud avec expertise en sécurisation d'environnements AWS, Azure et GCP. Expérience en tests d'intrusion, analyse de vulnérabilités et réponse aux incidents. J'ai aidé plusieurs entreprises à obtenir des certifications de sécurité (ISO27001, SOC2) et à mettre en place des pratiques de DevSecOps. Certifié CEH, OSCP et AWS Security Specialist. #security #pentesting #devsecops #cloud #compliance #certification\",\n      \"Consultant en transformation digitale pour le secteur financier avec plus de 12 ans d'expérience. J'accompagne les banques et assurances dans leur modernisation technologique et organisationnelle. Expertise en optimisation de processus, adoption de méthodologies agiles et mise en place de plateformes API. Ancien directeur technique dans une grande banque européenne. #fintech #agile #transformation #banking #insurance #api\",\n      \"Développeur .NET avec forte expertise Azure et plus de 7 ans d'expérience en développement d'applications d'entreprise. Spécialiste ASP.NET Core, Entity Framework, Azure Functions et Azure DevOps. J'ai conçu et implémenté des systèmes critiques pour des clients dans les secteurs de la santé, de la finance et de l'industrie. Microsoft Certified Azure Developer Associate. #csharp #dotnet #azure #cloud #microsoft #enterprise\",\n      \"Expert en solutions BigData et DataLakes avec expérience approfondie en conception et implémentation d'architectures de traitement de données à grande échelle. Maîtrise de Hadoop, Spark, Databricks, Snowflake et les services AWS/Azure pour le Big Data. J'ai dirigé des projets de migration vers le cloud et d'implémentation de solutions data pour de grandes entreprises internationales. #hadoop #spark #databricks #bigdata #datalake #cloud\",\n      \"Consultant en accessibilité web et mobile avec 6 ans d'expérience dans la conception et l'audit d'interfaces inclusives. Je travaille avec les équipes produit et développement pour garantir la conformité aux normes WCAG et l'inclusion de tous les utilisateurs. J'ai réalisé plus de 50 audits d'accessibilité et formé des équipes aux bonnes pratiques. Défenseur de l'inclusion numérique et intervenant régulier dans des conférences sur l'accessibilité. #a11y #inclusive #standards #wcag #ux #formation\"\n    ];\n\n    for (let i = 1; i <= 100; i++) {\n      const locked = Math.random() > 0.7;\n      const randomRole = roles[Math.floor(Math.random() * roles.length)];\n      const randomType = types[Math.floor(Math.random() * types.length)];\n      const randomLocation = locations[Math.floor(Math.random() * locations.length)];\n      const randomExperience = experiences[Math.floor(Math.random() * experiences.length)];\n      const randomAvailability = availabilities[Math.floor(Math.random() * availabilities.length)];\n      \n      // Generate random skills (between 3 and 7)\n      const randomSkillsCount = Math.floor(Math.random() * 5) + 3;\n      const shuffledSkills = [...skillsPool].sort(() => 0.5 - Math.random());\n      const randomSkills = shuffledSkills.slice(0, randomSkillsCount);\n      \n      // Generate random message\n      const randomMessage = messages[Math.floor(Math.random() * messages.length)];\n      \n      // Génération d'emplacements multiples pour certains consultants (1 à 3 lieux)\n      let consultantLocations = randomLocation;\n      \n      // Pour 40% des consultants, ajouter des emplacements multiples\n      if (Math.random() < 0.4) {\n        // Sélectionner 1 ou 2 lieux supplémentaires différents du premier\n        const additionalLocationsCount = Math.floor(Math.random() * 2) + 1;\n        const availableLocations = locations.filter(loc => loc !== randomLocation);\n        const shuffledLocations = [...availableLocations].sort(() => 0.5 - Math.random());\n        const additionalLocations = shuffledLocations.slice(0, additionalLocationsCount);\n        \n        // Combiner les emplacements avec des virgules\n        consultantLocations = [randomLocation, ...additionalLocations].join(', ');\n      }\n      \n      // Génération d'expertises aléatoires (entre 2 et 4)\n      const randomExpertiseCount = Math.floor(Math.random() * 3) + 2;\n      const shuffledExpertises = [...expertiseDomains].sort(() => 0.5 - Math.random());\n      const randomExpertises = shuffledExpertises.slice(0, randomExpertiseCount);\n      \n      // Génération de secteurs d'activité (entre 1 et 3)\n      const sectorCount = Math.floor(Math.random() * 3) + 1;\n      const shuffledSectors = [...activitySectors].sort(() => 0.5 - Math.random());\n      const randomSectors = shuffledSectors.slice(0, sectorCount);\n      \n      // Génération d'expériences professionnelles aléatoires (entre 1 et 3)\n      const experienceCount = Math.floor(Math.random() * 3) + 1;\n      const randomExperiences = [];\n      \n      // Création d'expériences aléatoires\n      for (let j = 0; j < experienceCount; j++) {\n        const randomCompany = companies[Math.floor(Math.random() * companies.length)];\n        const roleForExperience = roles[Math.floor(Math.random() * roles.length)];\n        const isCurrent = j === 0; // La première expérience est l'expérience actuelle\n        \n        randomExperiences.push({\n          role: roleForExperience,\n          company: randomCompany,\n          isCurrent: isCurrent\n        });\n      }\n      \n      this.mockData.push({\n        id: `100${i}`,\n        role: randomRole,\n        linkedinUrl: 'https://www.linkedin.com/in/example',\n        phone: locked ? null : '+33 6 12 34 56 78',\n        email: locked ? null : 'contact@example.com',\n        locked: locked,\n        type: randomType,\n        skills: randomSkills,\n        location: consultantLocations,\n        experience: randomExperience,\n        phoneValidated: !locked,\n        emailValidated: !locked,\n        linkedinValidated: true,\n        availability: randomAvailability,\n        message: randomMessage,\n        experiences: randomExperiences,\n        expertises: randomExpertises,\n        sectors: randomSectors\n      });\n    }\n  }\n\n  /**\n   * Get all consultants\n   */\n  getConsultants(): Observable<ConsultantWithTags[]> {\n    console.log('Fetching consultants from API');\n    \n    // Use the real API with proper error handling\n    return this.apiService.get<Consultant[]>('consultants')\n      .pipe(\n        tap(response => console.log('API Response received:', response)),\n        map(consultants => consultants.map(consultant => ({\n          ...consultant,\n          tags: this.extractTags(consultant.message)\n        }))),\n        catchError(error => {\n          console.error('Error fetching consultants:', error);\n          console.log('Falling back to mock data');\n          return of(this.mockData).pipe(\n            map(consultants => consultants.map(consultant => ({\n              ...consultant,\n              tags: this.extractTags(consultant.message)\n            })))\n          );\n        })\n      );\n  }\n  \n  /**\n   * Get consultants with pagination\n   */\n  getPagedConsultants(page: number, pageSize: number): Observable<ConsultantWithTags[]> {\n    console.log(`Fetching paged consultants`);\n    console.log(`Page: ${page}, PageSize: ${pageSize}`);\n    \n    // Pour le moment, nous utilisons l'API complète et simulons la pagination côté client\n    return this.apiService.get<Consultant[]>('consultants')\n      .pipe(\n        tap(response => console.log('API Response received:', response)),\n        map(consultants => {\n          // Simuler la pagination côté client\n          const startIndex = (page - 1) * pageSize;\n          const endIndex = startIndex + pageSize;\n          return consultants.slice(startIndex, endIndex);\n        }),\n        map(consultants => consultants.map(consultant => ({\n          ...consultant,\n          tags: this.extractTags(consultant.message)\n        }))),\n        catchError(error => {\n          console.error('Error fetching paged consultants:', error);\n          console.log('Falling back to mock data for pagination');\n          return of(this.mockData).pipe(\n            map(consultants => {\n              const startIndex = (page - 1) * pageSize;\n              const endIndex = startIndex + pageSize;\n              return consultants.slice(startIndex, endIndex);\n            }),\n            map(consultants => consultants.map(consultant => ({\n              ...consultant,\n              tags: this.extractTags(consultant.message)\n            })))\n          );\n        })\n      );\n  }\n\n  /**\n   * Extract hashtags from a message\n   */\n  extractTags(message: string): string[] {\n    const tags: string[] = [];\n    const regex = /#(\\w+)/g;\n    let match;\n    \n    while ((match = regex.exec(message)) !== null) {\n      tags.push(match[1]);\n    }\n    \n    return tags;\n  }\n\n  /**\n   * Filter consultants based on search criteria\n   */\n  filterConsultants(\n    consultants: ConsultantWithTags[], \n    searchText?: string, \n    skills?: string[], \n    availability?: string, \n    experience?: string,\n    location?: string\n  ): ConsultantWithTags[] {\n    return consultants.filter(consultant => {\n      // Filter by search text\n      if (searchText && searchText.trim() !== '') {\n        const searchLower = searchText.toLowerCase();\n        const messageMatch = consultant.message.toLowerCase().includes(searchLower);\n        const roleMatch = consultant.role.toLowerCase().includes(searchLower);\n        const locationMatch = consultant.location.toLowerCase().includes(searchLower);\n        const tagsMatch = consultant.tags.some(tag => tag.toLowerCase().includes(searchLower));\n        \n        if (!messageMatch && !roleMatch && !locationMatch && !tagsMatch) {\n          return false;\n        }\n      }\n      \n      // Filter by skills\n      if (skills && skills.length > 0) {\n        if (!skills.every(skill => consultant.skills.includes(skill))) {\n          return false;\n        }\n      }\n      \n      // Filter by availability\n      if (availability && availability !== 'all') {\n        // Convert string to number for comparison\n        const availabilityNum = parseInt(availability, 10);\n        if (consultant.availability !== availabilityNum) {\n          return false;\n        }\n      }\n      \n      // Filter by experience\n      if (experience && experience !== 'all') {\n        if (consultant.experience !== experience) {\n          return false;\n        }\n      }\n      \n      // Filter by location\n      if (location && location !== 'all') {\n        // Check if any of the consultant's locations match the filter\n        const consultantLocations = consultant.location.split(',').map(loc => loc.trim());\n        if (!consultantLocations.includes(location)) {\n          return false;\n        }\n      }\n      \n      return true;\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor,\n  HttpErrorResponse,\n  HttpResponse\n} from '@angular/common/http';\nimport { Observable, BehaviorSubject, throwError } from 'rxjs';\nimport { catchError, filter, switchMap, take, finalize, tap } from 'rxjs/operators';\nimport { AuthService } from './auth.service';\n\n/**\n * Intercepteur HTTP pour gérer l'ajout du token JWT et le rafraîchissement automatique\n */\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n  private isRefreshing = false;\n  private refreshTokenSubject: BehaviorSubject<string | null> = new BehaviorSubject<string | null>(null);\n\n  constructor(private authService: AuthService) {}\n\n  /**\n   * Intercepter les requêtes HTTP pour ajouter le token JWT et gérer les erreurs d'authentification\n   * @param request Requête HTTP originale\n   * @param next Handler de la requête\n   * @returns Observable de l'événement HTTP\n   */\n  intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\n    // Log la requête HTTP\n    console.log(`API Request:`, {\n      method: request.method,\n      url: request.url,\n      headers: request.headers.keys().map(key => `${key}: ${request.headers.get(key)}`),\n      body: request.body\n    });\n    \n    // Calcul du temps d'envoi de la requête\n    const startTime = Date.now();\n    \n    // Vérifier si la requête doit éviter l'ajout du token\n    if (this.shouldSkipAuthHeader(request)) {\n      return next.handle(request).pipe(\n        tap(event => {\n          if (event instanceof HttpResponse) {\n            // Log la réponse HTTP\n            const endTime = Date.now();\n            console.log(`API Response (${endTime - startTime}ms):`, {\n              url: request.url,\n              status: event.status,\n              statusText: event.statusText,\n              body: event.body\n            });\n          }\n        }),\n        catchError(error => {\n          // Log l'erreur HTTP\n          const endTime = Date.now();\n          console.error(`API Error (${endTime - startTime}ms):`, {\n            url: request.url,\n            error: error.message,\n            status: error.status,\n            statusText: error.statusText\n          });\n          return throwError(() => error);\n        })\n      );\n    }\n\n    // Récupérer le token JWT actuel\n    const token = this.authService.token;\n\n    // Ajouter le token JWT à la requête si disponible\n    if (token) {\n      request = this.addToken(request, token);\n    }\n\n    // Traiter la requête\n    return next.handle(request).pipe(\n      tap(event => {\n        if (event instanceof HttpResponse) {\n          // Log la réponse HTTP\n          const endTime = Date.now();\n          console.log(`API Response (${endTime - startTime}ms):`, {\n            url: request.url,\n            status: event.status,\n            statusText: event.statusText,\n            body: event.body\n          });\n        }\n      }),\n      catchError(error => {\n        // Log l'erreur HTTP\n        const endTime = Date.now();\n        console.error(`API Error (${endTime - startTime}ms):`, {\n          url: request.url,\n          error: error.message,\n          status: error.status,\n          statusText: error.statusText\n        });\n        \n        // Gérer les erreurs 401 (Non autorisé)\n        if (error instanceof HttpErrorResponse && error.status === 401) {\n          return this.handle401Error(request, next);\n        } else {\n          return throwError(() => error);\n        }\n      })\n    );\n  }\n\n  /**\n   * Décider si la requête doit éviter l'ajout du header d'authentification\n   * @param request Requête HTTP\n   * @returns Booléen indiquant si l'on doit sauter l'ajout du header\n   */\n  private shouldSkipAuthHeader(request: HttpRequest<unknown>): boolean {\n    // Les requêtes d'authentification ne doivent pas ajouter le token\n    const url = request.url.toLowerCase();\n    return (\n      url.includes('/auth/login') ||\n      url.includes('/auth/register') ||\n      url.includes('/auth/linkedin') ||\n      url.includes('/auth/refresh-token')\n    );\n  }\n\n  /**\n   * Ajouter le token JWT à l'en-tête Authorization de la requête\n   * @param request Requête HTTP originale\n   * @param token Token JWT\n   * @returns Requête HTTP avec le token\n   */\n  private addToken(request: HttpRequest<unknown>, token: string): HttpRequest<unknown> {\n    return request.clone({\n      setHeaders: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n  }\n\n  /**\n   * Gérer les erreurs 401 (Non autorisé) en tentant de rafraîchir le token\n   * @param request Requête HTTP originale\n   * @param next Handler de la requête\n   * @returns Observable de l'événement HTTP\n   */\n  private handle401Error(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\n    if (!this.isRefreshing) {\n      this.isRefreshing = true;\n      this.refreshTokenSubject.next(null);\n\n      const refreshToken = this.authService.currentAuthState.refreshToken;\n\n      if (refreshToken) {\n        return this.authService.refreshToken(refreshToken).pipe(\n          switchMap(response => {\n            this.isRefreshing = false;\n            this.refreshTokenSubject.next(response.token);\n            return next.handle(this.addToken(request, response.token));\n          }),\n          catchError(error => {\n            this.isRefreshing = false;\n            this.authService.logout();\n            return throwError(() => error);\n          }),\n          finalize(() => {\n            this.isRefreshing = false;\n          })\n        );\n      } else {\n        // Pas de refresh token, forcer la déconnexion\n        this.isRefreshing = false;\n        this.authService.logout();\n        return throwError(() => new Error('Session expirée.'));\n      }\n    } else {\n      // Si un rafraîchissement est déjà en cours, attendre qu'il soit terminé\n      return this.refreshTokenSubject.pipe(\n        filter(token => token !== null),\n        take(1),\n        switchMap(token => next.handle(this.addToken(request, token as string)))\n      );\n    }\n  }\n}","import { Injectable } from '@angular/core';\nimport {\n  CanActivate,\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot,\n  Router\n} from '@angular/router';\nimport { AuthService } from '../services/auth.service';\nimport { UserRole } from '../models/user.model';\n\n/**\n * Garde qui vérifie si l'utilisateur est authentifié\n * Utilisé pour protéger les routes qui nécessitent une authentification\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  constructor(private authService: AuthService, private router: Router) {}\n\n  /**\n   * Vérifie si l'utilisateur peut accéder à la route\n   * @param route Information sur la route activée\n   * @param state État du routeur\n   * @returns Booléen indiquant si l'accès est autorisé\n   */\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): boolean {\n    // Vérifier si l'utilisateur est authentifié\n    if (!this.authService.isAuthenticated) {\n      // Rediriger vers la page de connexion\n      this.router.navigate(['/login'], {\n        queryParams: { returnUrl: state.url }\n      });\n      return false;\n    }\n\n    // Si l'utilisateur doit compléter l'onboarding, rediriger vers cette page (sauf si déjà sur cette page)\n    if (this.authService.needsOnboarding() && !state.url.includes('/onboarding')) {\n      this.router.navigate(['/onboarding']);\n      return false;\n    }\n\n    return true;\n  }\n}\n\n/**\n * Garde qui vérifie si l'utilisateur n'est PAS authentifié\n * Utilisé pour protéger les routes qui ne sont accessibles qu'aux invités (login, register)\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class GuestGuard implements CanActivate {\n  constructor(private authService: AuthService, private router: Router) {}\n\n  /**\n   * Vérifie si l'utilisateur peut accéder à la route en tant qu'invité\n   * @param route Information sur la route activée\n   * @param state État du routeur\n   * @returns Booléen indiquant si l'accès est autorisé\n   */\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): boolean {\n    // Si l'utilisateur est authentifié, rediriger vers la page d'accueil\n    if (this.authService.isAuthenticated) {\n      // Si l'utilisateur doit compléter l'onboarding, rediriger vers cette page\n      if (this.authService.needsOnboarding()) {\n        this.router.navigate(['/onboarding']);\n      } else {\n        this.router.navigate(['/']);\n      }\n      return false;\n    }\n\n    return true;\n  }\n}\n\n/**\n * Garde qui vérifie si l'utilisateur doit compléter l'onboarding\n * Utilisé pour protéger la route d'onboarding\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class OnboardingGuard implements CanActivate {\n  constructor(private authService: AuthService, private router: Router) {}\n\n  /**\n   * Vérifie si l'utilisateur doit accéder à la page d'onboarding\n   * @param route Information sur la route activée\n   * @param state État du routeur\n   * @returns Booléen indiquant si l'accès est autorisé\n   */\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): boolean {\n    // Vérifier si l'utilisateur est authentifié\n    if (!this.authService.isAuthenticated) {\n      this.router.navigate(['/login']);\n      return false;\n    }\n\n    // Si l'utilisateur a déjà complété l'onboarding, rediriger vers la page d'accueil\n    if (!this.authService.needsOnboarding()) {\n      this.router.navigate(['/']);\n      return false;\n    }\n\n    return true;\n  }\n}\n\n/**\n * Garde qui vérifie le rôle de l'utilisateur\n * Utilisé pour protéger les routes qui nécessitent un rôle spécifique\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class RoleGuard implements CanActivate {\n  constructor(private authService: AuthService, private router: Router) {}\n\n  /**\n   * Vérifie si l'utilisateur a le rôle requis pour accéder à la route\n   * @param route Information sur la route activée, contenant les rôles requis\n   * @param state État du routeur\n   * @returns Booléen indiquant si l'accès est autorisé\n   */\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): boolean {\n    // Vérifier si l'utilisateur est authentifié\n    if (!this.authService.isAuthenticated) {\n      this.router.navigate(['/login'], {\n        queryParams: { returnUrl: state.url }\n      });\n      return false;\n    }\n\n    // Récupérer les rôles autorisés depuis les données de la route\n    const allowedRoles = route.data['roles'] as UserRole[];\n    if (!allowedRoles || allowedRoles.length === 0) {\n      return true; // Si aucun rôle n'est spécifié, l'accès est autorisé\n    }\n\n    // Vérifier si l'utilisateur a l'un des rôles requis\n    const userRole = this.authService.getUserRole();\n    if (!userRole || !allowedRoles.includes(userRole)) {\n      this.router.navigate(['/forbidden']);\n      return false;\n    }\n\n    return true;\n  }\n}","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ConsultantWithTags, ExperienceLevel } from '../../models/consultant.model';\n\n@Component({\n  selector: 'app-consultant-card',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './consultant-card.component.html',\n  styleUrls: ['./consultant-card.component.css']\n})\nexport class ConsultantCardComponent {\n  @Input() consultant!: ConsultantWithTags;\n  @Input() expanded: boolean = false;\n  @Input() messageExpanded: boolean = false;\n  @Input() dropdownOpen: boolean = false;\n  @Input() detailsExpanded: boolean = false; // Nouvelle propriété pour l'affichage des détails\n\n  @Output() linkedinClick = new EventEmitter<string>();\n  @Output() phoneClick = new EventEmitter<string | null>();\n  @Output() emailClick = new EventEmitter<string | null>();\n  @Output() toggleExpansion = new EventEmitter<{id: string, expanded: boolean}>();\n  @Output() toggleDropdown = new EventEmitter<{id: string, event: MouseEvent}>();\n  @Output() toggleMessageExpansion = new EventEmitter<{id: string, event: MouseEvent}>();\n  @Output() toggleDetailsExpansion = new EventEmitter<{id: string, event: MouseEvent}>(); // Nouvel événement pour afficher/masquer les détails\n\n  /**\n   * Get the experience level as 1-3 bars\n   */\n  getSeniorityBars(experience: ExperienceLevel): number {\n    if (experience === 'less_than_3') return 1;\n    if (experience === 'between_3_and_10') return 2;\n    return 3;\n  }\n\n  /**\n   * Format message with highlighted hashtags\n   */\n  formatMessage(message: string): string {\n    return message.replace(/#(\\w+)/g, '<span class=\"text-blue-600 text-xs font-medium hover:text-blue-800 transition-colors duration-300\">#$1</span>');\n  }\n  \n  /**\n   * Check if a message is long enough to be truncated\n   */\n  isMessageLong(message: string): boolean {\n    return message.length > 150;\n  }\n\n  onLinkedInClick(url: string, event: MouseEvent): void {\n    event.stopPropagation();\n    if (this.consultant.linkedinValidated) {\n      this.linkedinClick.emit(url);\n    }\n  }\n\n  onPhoneClick(phone: string | null, event: MouseEvent): void {\n    event.stopPropagation();\n    if (this.consultant.phoneValidated) {\n      this.phoneClick.emit(phone);\n    }\n  }\n\n  onEmailClick(email: string | null, event: MouseEvent): void {\n    event.stopPropagation();\n    if (this.consultant.emailValidated) {\n      this.emailClick.emit(email);\n    }\n  }\n\n  onToggleExpansion(id: string, event: MouseEvent): void {\n    event.stopPropagation();\n    this.toggleExpansion.emit({id, expanded: !this.expanded});\n  }\n\n  onToggleDropdown(id: string, event: MouseEvent): void {\n    event.stopPropagation();\n    this.toggleDropdown.emit({id, event});\n  }\n\n  onToggleMessageExpansion(id: string, event: MouseEvent): void {\n    event.stopPropagation();\n    this.toggleMessageExpansion.emit({id, event});\n  }\n\n  onToggleDetailsExpansion(id: string, event: MouseEvent): void {\n    event.stopPropagation();\n    this.toggleDetailsExpansion.emit({id, event});\n  }\n}\n","<div class=\"bg-white border border-gray-200 rounded-md overflow-hidden shadow-md hover:shadow-lg transition-shadow duration-300\">\n  <table class=\"w-full border-collapse\">\n    <tr class=\"transition-all duration-300 hover:bg-gray-50 cursor-pointer\">\n      <!-- Left Column: Lock/Status and ID -->\n      <td class=\"whitespace-nowrap p-2 border-r border-gray-100 w-16 align-middle\">\n        <div class=\"flex flex-col items-center justify-center h-full\">\n          <!-- Lock icon: green for unlocked profiles, red for locked profiles -->\n          <span class=\"material-icons text-2xl mb-1\" \n                [ngClass]=\"{\n                  'text-green-500': !consultant.locked,\n                  'text-red-500': consultant.locked\n                }\"\n                [title]=\"consultant.locked ? 'Profil verrouillé' : 'Profil accessible'\">\n            {{ consultant.locked ? 'lock' : 'lock_open' }}\n          </span>\n          <!-- Consultant ID -->\n          <span class=\"text-xs text-gray-400 text-center\">#{{ consultant.id }}</span>\n        </div>\n      </td>\n      \n      <!-- Middle Column: Role, Experience bars, Skills, Location -->\n      <td class=\"p-2 pl-4 align-top\">\n        <!-- Role with availability indicator (plus compact) -->\n        <div class=\"font-medium text-base mb-1.5 flex items-center\">\n          <!-- Availability circle -->\n          <div class=\"w-2.5 h-2.5 rounded-full mr-1.5\"\n                [ngClass]=\"{\n                  'bg-green-500': consultant.availability === 0,\n                  'bg-yellow-500': consultant.availability === 1,\n                  'bg-red-500': consultant.availability === 2\n                }\">\n          </div>\n          {{ consultant.role }}\n        </div>\n        \n        <!-- Experience level and Skills on the same line (plus compact) -->\n        <div class=\"flex items-center mb-2\">\n          <!-- Experience level / Seniority bars (vertical like WiFi signal) -->\n          <div class=\"flex space-x-0.5 items-end h-3.5 mr-3\">\n            <div *ngFor=\"let i of [1, 2, 3]\" \n                class=\"w-1 rounded-sm\"\n                [ngClass]=\"{\n                  'bg-blue-600': i <= getSeniorityBars(consultant.experience), \n                  'bg-blue-200': i > getSeniorityBars(consultant.experience),\n                  'h-1': i === 1,\n                  'h-2': i === 2,\n                  'h-3.5': i === 3\n                }\">\n            </div>\n          </div>\n          \n          <!-- Skills badges (plus compact) -->\n          <div class=\"flex flex-wrap\">\n            <span *ngFor=\"let skill of consultant.skills.slice(0, 3)\" class=\"skill-badge text-xs py-0 px-1.5 mb-0.5\">\n              {{ skill }}\n            </span>\n            <span *ngIf=\"consultant.skills.length > 3\" class=\"text-xs text-gray-500 flex items-center ml-1\">\n              +{{ consultant.skills.length - 3 }}\n            </span>\n          </div>\n        </div>\n        \n        <!-- Locations (multiples, séparés par des virgules) -->\n        <div class=\"text-xs text-gray-600 flex items-center\">\n          <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-3.5 w-3.5 mr-0.5 flex-shrink-0\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z\" />\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M15 11a3 3 0 11-6 0 3 3 0 016 0z\" />\n          </svg>\n          <span class=\"flex flex-wrap\">\n            <!-- Afficher chaque lieu avec une petite marge -->\n            <ng-container *ngFor=\"let location of consultant.location.split(','); let last = last\">\n              <span class=\"location-badge\">{{ location.trim() }}</span>\n              <span *ngIf=\"!last\" class=\"mx-1\">•</span>\n            </ng-container>\n          </span>\n        </div>\n      </td>\n      \n      <!-- Right Column: Menu -->\n      <td class=\"py-2 pr-4 align-top w-24 text-right\">\n        \n        <!-- Desktop Action Buttons (always visible on lg and up) -->\n        <div class=\"hidden lg:flex lg:space-x-2 mb-2\">\n          <!-- LinkedIn button (always visible, grayed out if not available) -->\n          <button (click)=\"onLinkedInClick(consultant.linkedinUrl, $event)\" \n                  [disabled]=\"!consultant.linkedinValidated\" \n                  [title]=\"consultant.linkedinValidated ? 'Voir profil LinkedIn' : 'LinkedIn non disponible'\"\n                  class=\"action-button\"\n                  [ngClass]=\"{'opacity-50 cursor-not-allowed': !consultant.linkedinValidated}\">\n            <i class=\"fab fa-linkedin text-blue-600\"></i>\n          </button>\n          \n          <!-- Phone button (always visible, grayed out if not available) -->\n          <button (click)=\"onPhoneClick(consultant.phone, $event)\" \n                  [disabled]=\"!consultant.phoneValidated || !consultant.phone\" \n                  [title]=\"consultant.phoneValidated && consultant.phone ? 'Appeler' : 'Téléphone non disponible'\"\n                  class=\"action-button\"\n                  [ngClass]=\"{'opacity-50 cursor-not-allowed': !consultant.phoneValidated || !consultant.phone}\">\n            <i class=\"fas fa-phone-alt text-green-600\"></i>\n          </button>\n          \n          <!-- Email button (always visible, grayed out if not available) -->\n          <button (click)=\"onEmailClick(consultant.email, $event)\" \n                  [disabled]=\"!consultant.emailValidated || !consultant.email\" \n                  [title]=\"consultant.emailValidated && consultant.email ? 'Envoyer un email' : 'Email non disponible'\"\n                  class=\"action-button\"\n                  [ngClass]=\"{'opacity-50 cursor-not-allowed': !consultant.emailValidated || !consultant.email}\">\n            <i class=\"fas fa-envelope text-red-600\"></i>\n          </button>\n        </div>\n        \n        <!-- Mobile Dropdown Button (visible only on small screens) -->\n        <div class=\"lg:hidden\">\n          <div class=\"relative\">\n            <button \n              type=\"button\"\n              (click)=\"onToggleDropdown(consultant.id, $event)\"\n              class=\"inline-flex justify-center px-3 py-2 w-10 h-8 text-sm font-medium text-gray-700 bg-gray-100 border border-gray-300 rounded-md hover:bg-gray-200 focus:outline-none focus:ring-2 focus:ring-blue-500 transition-all duration-300\">\n              <svg class=\"h-4 w-4\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 5v.01M12 12v.01M12 19v.01M12 6a1 1 0 110-2 1 1 0 010 2zm0 7a1 1 0 110-2 1 1 0 010 2zm0 7a1 1 0 110-2 1 1 0 010 2z\" />\n              </svg>\n            </button>\n            \n            <!-- Dropdown Menu for Mobile -->\n            <div *ngIf=\"dropdownOpen\" \n                class=\"origin-top-right absolute right-0 mt-2 w-48 rounded-md shadow-lg bg-white ring-1 ring-black ring-opacity-5 focus:outline-none z-50\"\n                (click)=\"$event.stopPropagation()\">\n              <div class=\"py-1\" role=\"none\">\n                <!-- LinkedIn option - toujours affiché mais désactivé si non disponible -->\n                <a href=\"javascript:void(0)\" \n                    (click)=\"onLinkedInClick(consultant.linkedinUrl, $event)\"\n                    [class.opacity-50]=\"!consultant.linkedinValidated\"\n                    [class.cursor-not-allowed]=\"!consultant.linkedinValidated\"\n                    [class.pointer-events-none]=\"!consultant.linkedinValidated\"\n                    class=\"flex items-center px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 transition-colors duration-300\">\n                  <i class=\"fab fa-linkedin text-blue-600 mr-2\"></i>\n                  Voir sur LinkedIn\n                </a>\n                \n                <!-- Phone option - toujours affiché mais désactivé si non disponible -->\n                <a href=\"javascript:void(0)\" \n                    (click)=\"onPhoneClick(consultant.phone, $event)\"\n                    [class.opacity-50]=\"!consultant.phoneValidated || !consultant.phone\"\n                    [class.cursor-not-allowed]=\"!consultant.phoneValidated || !consultant.phone\"\n                    [class.pointer-events-none]=\"!consultant.phoneValidated || !consultant.phone\"\n                    class=\"flex items-center px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 transition-colors duration-300\">\n                  <i class=\"fas fa-phone-alt text-green-600 mr-2\"></i>\n                  Appeler\n                </a>\n                \n                <!-- Email option - toujours affiché mais désactivé si non disponible -->\n                <a href=\"javascript:void(0)\" \n                    (click)=\"onEmailClick(consultant.email, $event)\"\n                    [class.opacity-50]=\"!consultant.emailValidated || !consultant.email\"\n                    [class.cursor-not-allowed]=\"!consultant.emailValidated || !consultant.email\"\n                    [class.pointer-events-none]=\"!consultant.emailValidated || !consultant.email\"\n                    class=\"flex items-center px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 transition-colors duration-300\">\n                  <i class=\"fas fa-envelope text-red-600 mr-2\"></i>\n                  Envoyer un email\n                </a>\n              </div>\n            </div>\n          </div>\n        </div>\n        \n        <!-- Espace pour aligner la mise en page sans le bouton -->\n        <div class=\"mt-2 h-6\"></div>\n      </td>\n    </tr>\n  </table>\n  \n  <!-- Expanded Message and Additional Info - Only showed when expanded -->\n  <div *ngIf=\"messageExpanded\" class=\"px-4 py-3 border-t border-gray-100 bg-gray-50 transition-all duration-300\">\n    <!-- Message avec hashtags -->\n    <div class=\"mb-4\">\n      <h3 class=\"text-sm font-medium text-gray-800 mb-1\">Message</h3>\n      <div class=\"relative\">\n        <div class=\"text-sm text-gray-600 consultantMessage\" [innerHTML]=\"formatMessage(consultant.message)\"\n            [class.truncated]=\"isMessageLong(consultant.message) && !expanded\">\n        </div>\n        <!-- Gradient overlay pour la troncature -->\n        <div *ngIf=\"isMessageLong(consultant.message) && !expanded\" class=\"bg-gradient-overlay\"></div>\n      </div>\n      <div class=\"flex justify-between mt-1\">\n        <button *ngIf=\"isMessageLong(consultant.message)\" \n               (click)=\"onToggleExpansion(consultant.id, $event)\"\n               class=\"text-xs text-blue-600 hover:text-blue-800 hover:underline focus:outline-none transition-colors duration-300\">\n          {{ expanded ? 'Masquer' : 'Voir tout le message' }}\n        </button>\n        <button \n               (click)=\"onToggleDetailsExpansion(consultant.id, $event)\"\n               class=\"text-xs text-blue-600 hover:text-blue-800 hover:underline focus:outline-none transition-colors duration-300\">\n          {{ detailsExpanded ? 'Masquer les détails' : 'Voir plus' }}\n        </button>\n      </div>\n    </div>\n    \n    <!-- Sections détaillées - affichées seulement si detailsExpanded est true -->\n    <div *ngIf=\"detailsExpanded\">\n      <!-- Secteurs d'activité (affiché en premier dans la vue détaillée) -->\n      <div class=\"mb-4\" *ngIf=\"consultant.sectors && consultant.sectors.length > 0\">\n        <h3 class=\"text-sm font-medium text-gray-800 mb-1\">Secteurs d'activité</h3>\n        <div class=\"flex flex-wrap space-x-1\">\n          <span *ngFor=\"let sector of consultant.sectors\" class=\"sector-badge\">\n            {{ sector }}\n          </span>\n        </div>\n      </div>\n      \n      <!-- Expertises (mots-clés) -->\n      <div class=\"mb-4\" *ngIf=\"consultant.expertises && consultant.expertises.length > 0\">\n        <h3 class=\"text-sm font-medium text-gray-800 mb-1\">Expertises</h3>\n        <div class=\"flex flex-wrap space-x-1\">\n          <span *ngFor=\"let expertise of consultant.expertises\" class=\"expertise-badge\">\n            {{ expertise }}\n          </span>\n        </div>\n      </div>\n      \n      <!-- Compétences techniques (visible aussi sur la carte) -->\n      <div class=\"mb-4\">\n        <h3 class=\"text-sm font-medium text-gray-800 mb-1\">Compétences techniques</h3>\n        <div class=\"flex flex-wrap\">\n          <span *ngFor=\"let skill of consultant.skills\" class=\"skill-badge\">\n            {{ skill }}\n          </span>\n        </div>\n      </div>\n      \n      <!-- Dernières expériences -->\n      <div *ngIf=\"consultant.experiences && consultant.experiences.length > 0\">\n        <h3 class=\"text-sm font-medium text-gray-800 mb-1\">Dernières expériences</h3>\n        <ul class=\"text-sm text-gray-600 space-y-2\">\n          <li *ngFor=\"let exp of consultant.experiences\" class=\"flex items-start\">\n            <div class=\"mt-0.5 mr-1.5 w-1.5 h-1.5 rounded-full bg-gray-400 flex-shrink-0\"></div>\n            <div>\n              <span class=\"font-medium\">{{ exp.role }}</span>\n              <span *ngIf=\"exp.company\" class=\"ml-1\">• {{ exp.company }}</span>\n              <span *ngIf=\"exp.isCurrent\" class=\"text-xs ml-1 text-blue-600\">(Actuelle)</span>\n            </div>\n          </li>\n        </ul>\n      </div>\n    </div>\n  </div>\n</div>\n"],"names":["CommonModule","FormsModule","ReactiveFormsModule","Validators","i0","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","ɵɵtext","ɵɵlistener","UserProfileComponent_div_2_button_7_Template_button_click_0_listener","ɵɵrestoreView","_r2","ctx_r2","ɵɵnextContext","ɵɵresetView","enableEditMode","ɵɵadvance","ɵɵtextInterpolate","successMessage","errorMessage","currentUser","firstName","lastName","email","ɵɵtemplate","UserProfileComponent_div_2_div_47_span_1_Template","UserProfileComponent_div_2_div_47_span_2_Template","ɵɵproperty","tmp_2_0","profileForm","get","errors","tmp_3_0","UserProfileComponent_div_2_div_65_Template_button_click_1_listener","_r4","cancelEdit","UserProfileComponent_div_2_div_65_span_4_Template","invalid","isLoading","UserProfileComponent_div_2_span_5_Template","UserProfileComponent_div_2_button_7_Template","UserProfileComponent_div_2_div_8_Template","UserProfileComponent_div_2_div_9_Template","UserProfileComponent_div_2_Template_form_ngSubmit_17_listener","_r1","onSubmit","UserProfileComponent_div_2_input_29_Template","UserProfileComponent_div_2_span_30_Template","UserProfileComponent_div_2_div_31_Template","UserProfileComponent_div_2_input_37_Template","UserProfileComponent_div_2_span_38_Template","UserProfileComponent_div_2_div_39_Template","UserProfileComponent_div_2_input_45_Template","UserProfileComponent_div_2_span_46_Template","UserProfileComponent_div_2_div_47_Template","UserProfileComponent_div_2_span_57_Template","UserProfileComponent_div_2_span_58_Template","UserProfileComponent_div_2_div_65_Template","isEditing","username","tmp_9_0","touched","tmp_12_0","tmp_15_0","ɵɵtextInterpolate1","role","isActive","lastLogin","ɵɵpipeBind2","UserProfileComponent","constructor","authService","router","fb","ngOnInit","isAuthenticated","navigate","initializeForm","group","required","disable","enable","setTimeout","value","ɵɵdirectiveInject","i1","AuthService","i2","Router","i3","FormBuilder","selectors","decls","vars","consts","template","UserProfileComponent_Template","rf","ctx","UserProfileComponent_div_1_Template","UserProfileComponent_div_2_Template","i4","NgIf","DatePipe","ɵNgNoValidate","DefaultValueAccessor","NgControlStatus","NgControlStatusGroup","FormGroupDirective","FormControlName","styles","ConsultantCardComponent","exp_r2","label","avail_r3","location_r4","ConsultantListComponent_div_32_div_2_Template_div_click_0_listener","$event","_r6","stopPropagation","ConsultantListComponent_div_32_div_2_Template_input_change_1_listener","skill_r7","$implicit","ctx_r7","toggleSkillFilter","selectedSkills","includes","ConsultantListComponent_div_32_Template_div_click_0_listener","_r5","ConsultantListComponent_div_32_div_2_Template","availableSkills","ConsultantListComponent_div_33_div_1_Template_button_click_2_listener","skill_r10","_r9","ConsultantListComponent_div_33_div_1_Template","ConsultantListComponent_div_39_app_consultant_card_1_Template_app_consultant_card_toggleExpansion_0_listener","consultant_r12","_r11","toggleExpandMessage","id","ConsultantListComponent_div_39_app_consultant_card_1_Template_app_consultant_card_toggleMessageExpansion_0_listener","toggleMessageExpansion","ConsultantListComponent_div_39_app_consultant_card_1_Template_app_consultant_card_toggleDetailsExpansion_0_listener","toggleDetailsExpansion","ConsultantListComponent_div_39_app_consultant_card_1_Template_app_consultant_card_toggleDropdown_0_listener","toggleDropdown","ConsultantListComponent_div_39_app_consultant_card_1_Template_app_consultant_card_linkedinClick_0_listener","openLinkedIn","linkedinUrl","ConsultantListComponent_div_39_app_consultant_card_1_Template_app_consultant_card_phoneClick_0_listener","showPhone","phone","ConsultantListComponent_div_39_app_consultant_card_1_Template_app_consultant_card_emailClick_0_listener","sendEmail","expandedMessages","expandedDetails","dropdownOpen","ConsultantListComponent_div_39_app_consultant_card_1_Template","filteredConsultants","ConsultantListComponent","consultantService","allConsultants","consultants","showDetailsDefault","currentPage","pageSize","isLoadingMore","hasMoreData","searchText","selectedAvailability","selectedExperience","selectedLocation","availableLocations","experienceOptions","availabilityOptions","moreFiltersOpen","skillsDropdownOpen","configDropdownOpen","loadInitialConsultants","loadAllConsultantsForFiltering","documentClickListener","Object","keys","forEach","key","document","addEventListener","getConsultants","subscribe","consultant","ngOnDestroy","removeEventListener","onScroll","event","consultantsList","element","nativeElement","scrollPosition","scrollTop","clientHeight","scrollHeight","loadMoreConsultants","getPagedConsultants","data","console","log","length","applyFilters","error","newData","extractAvailableSkills","extractAvailableLocations","skillsSet","Set","skills","skill","add","Array","from","sort","locationsSet","location","locations","split","map","loc","trim","filterConsultants","onSearchChange","onExperienceChange","onAvailabilityChange","onLocationChange","index","indexOf","push","splice","onToggleMoreFilters","onToggleSkillsDropdown","url","chrome","tabs","create","window","open","alert","href","expanded","undefined","formatMessage","message","replace","isMessageLong","getSeniorityBars","experience","closeDropdowns","ConsultantService","viewQuery","ConsultantListComponent_Query","ConsultantListComponent_click_HostBindingHandler","ɵɵresolveDocument","ɵɵtwoWayListener","ConsultantListComponent_Template_input_ngModelChange_6_listener","ɵɵtwoWayBindingSet","ConsultantListComponent_Template_input_keyup_6_listener","ConsultantListComponent_Template_a_click_9_listener","ConsultantListComponent_Template_select_ngModelChange_15_listener","ConsultantListComponent_Template_select_change_15_listener","ConsultantListComponent_option_18_Template","ConsultantListComponent_Template_select_ngModelChange_19_listener","ConsultantListComponent_Template_select_change_19_listener","ConsultantListComponent_option_22_Template","ConsultantListComponent_Template_select_ngModelChange_23_listener","ConsultantListComponent_Template_select_change_23_listener","ConsultantListComponent_option_26_Template","ConsultantListComponent_Template_button_click_28_listener","ConsultantListComponent_div_32_Template","ConsultantListComponent_div_33_Template","ConsultantListComponent_Template_div_scroll_34_listener","ConsultantListComponent_div_36_Template","ConsultantListComponent_div_37_Template","ConsultantListComponent_div_38_Template","ConsultantListComponent_div_39_Template","ConsultantListComponent_div_40_Template","ConsultantListComponent_div_41_Template","ɵɵtwoWayProperty","ɵɵpureFunction1","_c1","ɵɵpureFunction2","_c2","NgClass","NgForOf","NgSelectOption","ɵNgSelectMultipleOption","SelectControlValueAccessor","NgModel","environment","production","apiUrl","apiUrlReplit","hostname","isExtension","runtime","RouterModule","LoginComponent","AuthGuard","routes","path","redirectTo","pathMatch","component","canActivate","roles","AppRoutingModule","forRoot","useHash","imports","exports","ctx_r0","loginError","LoginComponent_div_21_span_1_Template","LoginComponent_div_21_span_2_Template","tmp_1_0","loginForm","modalService","rememberMe","loginMode","password","minLength","credentials","loginWithEmail","next","closeModal","handleLoginError","closeLoginModal","resetForm","reset","status","ModalService","LoginComponent_Template","LoginComponent_Template_button_click_5_listener","LoginComponent_div_9_Template","LoginComponent_Template_form_ngSubmit_11_listener","LoginComponent_div_16_Template","LoginComponent_div_21_Template","LoginComponent_span_27_Template","ɵɵclassProp","isLoginModalVisible","_c0","tmp_10_0","tmp_11_0","i5","CheckboxControlValueAccessor","ApiService","http","API_URL","IS_EXTENSION","IS_REPLIT","buildApiUrl","endpoint","startsWith","options","post","body","put","delete","ɵɵinject","HttpClient","factory","ɵfac","providedIn","BehaviorSubject","loginModalVisibleSubject","isModalBackdropVisible","modalBackdropVisibleSubject","loginModalVisible$","asObservable","modalBackdropVisible$","openLoginModal","closeAllModals","BrowserModule","HttpClientModule","HTTP_INTERCEPTORS","AppComponent","AuthInterceptor","AppModule","bootstrap","provide","useClass","multi","declarations","enableProdMode","__NgCli_bootstrap_1","platformBrowser","bootstrapModule","catch","err","NavigationEnd","filter","AppComponent_div_8_Template_button_click_1_listener","ctx_r1","AppComponent_div_9_div_6_a_3_Template_a_click_0_listener","toggleMenu","AppComponent_div_9_div_6_a_4_Template_a_click_0_listener","AppComponent_div_9_div_6_Template_a_click_1_listener","AppComponent_div_9_div_6_a_3_Template","AppComponent_div_9_div_6_a_4_Template","AppComponent_div_9_div_6_Template_button_click_6_listener","logout","AppComponent_div_9_Template_button_click_1_listener","_r3","AppComponent_div_9_div_6_Template","menuOpen","AppComponent_div_13_Template_div_click_0_listener","_r7","title","currentRoute","authState$","state","user","events","pipe","standalone","AppComponent_Template","AppComponent_div_8_Template","AppComponent_div_9_Template","AppComponent_router_outlet_10_Template","AppComponent_app_consultant_list_11_Template","AppComponent_div_13_Template","throwError","catchError","tap","apiService","AUTH_DATA_KEY","authStateSubject","token","refreshToken","tokenExpiration","loadAuthState","currentAuthState","isTokenExpired","response","handleAuthResponse","loginWithLinkedIn","profile","register","completeOnboarding","onboardingData","request","needsOnboarding","onboardingCompleted","getUserRole","clearAuthState","expiration","Date","success","expirationDate","authState","saveAuthState","toISOString","localStorage","setItem","JSON","stringify","storedState","getItem","parsedState","parse","removeItem","of","mockData","generateMockData","types","experiences","availabilities","companies","skillsPool","expertiseDomains","activitySectors","messages","i","locked","Math","random","randomRole","floor","randomType","randomLocation","randomExperience","randomAvailability","randomSkillsCount","shuffledSkills","randomSkills","slice","randomMessage","consultantLocations","additionalLocationsCount","shuffledLocations","additionalLocations","join","randomExpertiseCount","shuffledExpertises","randomExpertises","sectorCount","shuffledSectors","randomSectors","experienceCount","randomExperiences","j","randomCompany","roleForExperience","isCurrent","company","type","phoneValidated","emailValidated","linkedinValidated","availability","expertises","sectors","tags","extractTags","page","startIndex","endIndex","regex","match","exec","searchLower","toLowerCase","messageMatch","roleMatch","locationMatch","tagsMatch","some","tag","every","availabilityNum","parseInt","HttpErrorResponse","HttpResponse","switchMap","take","finalize","isRefreshing","refreshTokenSubject","intercept","method","headers","startTime","now","shouldSkipAuthHeader","handle","endTime","statusText","addToken","handle401Error","clone","setHeaders","Authorization","Error","route","queryParams","returnUrl","GuestGuard","OnboardingGuard","RoleGuard","allowedRoles","userRole","EventEmitter","ɵɵpureFunction5","_c4","i_r1","skill_r3","ɵɵelementContainerStart","ConsultantCardComponent_ng_container_24_span_3_Template","last_r5","ConsultantCardComponent_div_38_Template_div_click_0_listener","ConsultantCardComponent_div_38_Template_a_click_2_listener","onLinkedInClick","ConsultantCardComponent_div_38_Template_a_click_5_listener","onPhoneClick","ConsultantCardComponent_div_38_Template_a_click_8_listener","onEmailClick","ConsultantCardComponent_div_40_button_8_Template_button_click_0_listener","_r8","onToggleExpansion","sector_r9","ConsultantCardComponent_div_40_div_11_div_1_span_4_Template","expertise_r10","ConsultantCardComponent_div_40_div_11_div_2_span_4_Template","skill_r11","exp_r12","ConsultantCardComponent_div_40_div_11_div_8_li_4_span_5_Template","ConsultantCardComponent_div_40_div_11_div_8_li_4_span_6_Template","ConsultantCardComponent_div_40_div_11_div_8_li_4_Template","ConsultantCardComponent_div_40_div_11_div_1_Template","ConsultantCardComponent_div_40_div_11_div_2_Template","ConsultantCardComponent_div_40_div_11_span_7_Template","ConsultantCardComponent_div_40_div_11_div_8_Template","ConsultantCardComponent_div_40_div_6_Template","ConsultantCardComponent_div_40_button_8_Template","ConsultantCardComponent_div_40_Template_button_click_9_listener","onToggleDetailsExpansion","ConsultantCardComponent_div_40_div_11_Template","ɵɵsanitizeHtml","detailsExpanded","messageExpanded","linkedinClick","phoneClick","emailClick","toggleExpansion","emit","onToggleDropdown","onToggleMessageExpansion","inputs","outputs","ConsultantCardComponent_Template","ConsultantCardComponent_div_15_Template","ConsultantCardComponent_span_17_Template","ConsultantCardComponent_span_18_Template","ConsultantCardComponent_ng_container_24_Template","ConsultantCardComponent_Template_button_click_27_listener","ConsultantCardComponent_Template_button_click_29_listener","ConsultantCardComponent_Template_button_click_31_listener","ConsultantCardComponent_Template_button_click_35_listener","ConsultantCardComponent_div_38_Template","ConsultantCardComponent_div_40_Template","ɵɵpureFunction3","ɵɵpureFunction0","_c3"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}