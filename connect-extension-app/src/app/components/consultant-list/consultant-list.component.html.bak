<div class="w-full max-w-3xl mx-auto flex flex-col h-full">
  <!-- Filters Section -->
  <div class="bg-white border border-gray-200 rounded-md p-4 mb-4 shadow-sm transition-all duration-300 hover:shadow">
    <!-- Search Input - Seul sur sa ligne -->
    <div class="mb-1">
      <div class="relative">
        <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
          <svg class="h-5 w-5 text-gray-400" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
            <path fill-rule="evenodd" d="M8 4a4 4 0 100 8 4 4 0 000-8zM2 8a6 6 0 1110.89 3.476l4.817 4.817a1 1 0 01-1.414 1.414l-4.816-4.816A6 6 0 012 8z" clip-rule="evenodd" />
          </svg>
        </div>
        <input 
          type="text" 
          [(ngModel)]="searchText" 
          (keyup)="onSearchChange()" 
          placeholder="Rechercher un consultant..." 
          class="w-full pl-10 pr-3 py-2 rounded-md border border-gray-300 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all duration-300"
        >
      </div>
    </div>
    
    <!-- Deuxième ligne avec les autres filtres -->
    <div class="flex flex-col space-y-1">
      <!-- Texte "Plus de filtres" en mode mobile aligné à droite -->
      <div class="flex justify-end items-center md:hidden mt-0 mb-1">
        <a 
          href="javascript:void(0)"
          (click)="onToggleMoreFilters($event)"
          class="text-blue-600 text-sm hover:text-blue-800 hover:underline focus:outline-none transition-colors duration-300 flex items-center">
          {{ moreFiltersOpen ? 'Moins de filtres' : 'Plus de filtres' }}
          <svg class="ml-1 h-4 w-4" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"
               [ngClass]="{'transform rotate-180': moreFiltersOpen}">
            <path fill-rule="evenodd" d="M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z" clip-rule="evenodd" />
          </svg>
        </a>
      </div>
      
      <!-- Filtres avancés - Visibles en desktop ou quand "Plus de filtres" est actif -->
      <div class="flex flex-col md:flex-row md:items-center md:justify-between space-y-3 md:space-y-0"
           [ngClass]="{'hidden md:flex': !moreFiltersOpen, 'flex': moreFiltersOpen}">
        <!-- Tous les filtres dans un conteneur flex -->
        <div class="flex flex-col md:flex-row md:items-center md:justify-between space-y-3 md:space-y-0 w-full">
          <!-- Experience Filter -->
          <select 
            [(ngModel)]="selectedExperience" 
            (change)="onExperienceChange()" 
            class="md:w-[23%] px-3 py-2 border border-gray-300 rounded-md text-sm text-gray-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all duration-300">
            <option value="all">Tout niveau d'expérience</option>
            <option *ngFor="let exp of experienceOptions" [value]="exp.value">{{ exp.label }}</option>
          </select>
          
          <!-- Availability Filter -->
          <select 
            [(ngModel)]="selectedAvailability" 
            (change)="onAvailabilityChange()" 
            class="md:w-[23%] px-3 py-2 border border-gray-300 rounded-md text-sm text-gray-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all duration-300">
            <option value="all">Toute disponibilité</option>
            <option *ngFor="let avail of availabilityOptions" [value]="avail.value">{{ avail.label }}</option>
          </select>
          
          <!-- Location Filter -->
          <select 
            [(ngModel)]="selectedLocation" 
            (change)="onLocationChange()" 
            class="md:w-[23%] px-3 py-2 border border-gray-300 rounded-md text-sm text-gray-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all duration-300">
            <option value="all">Toute localisation</option>
            <option *ngFor="let location of availableLocations" [value]="location">{{ location }}</option>
          </select>
          
          <!-- Filtre Compétences -->
          <div class="relative md:w-[23%]">
            <button 
              type="button" 
              (click)="onToggleSkillsDropdown($event)" 
              class="inline-flex justify-between w-full px-3 py-2 text-sm font-medium text-gray-700 bg-white border border-gray-300 rounded-md shadow-sm hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-blue-500 transition-all duration-300">
              Compétences
              <svg class="-mr-1 ml-2 h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
                <path fill-rule="evenodd" d="M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z" clip-rule="evenodd" />
              </svg>
            </button>
            
            <div *ngIf="skillsDropdownOpen" 
                class="origin-top-right absolute right-0 mt-2 w-72 rounded-md shadow-lg bg-white ring-1 ring-black ring-opacity-5 focus:outline-none transition-all duration-300 z-50"
                (click)="$event.stopPropagation()">
              <div class="py-1 max-h-48 overflow-y-auto">
                <div *ngFor="let skill of availableSkills" 
                    class="flex items-center px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 cursor-pointer transition-colors duration-300"
                    (click)="$event.stopPropagation()">
                  <input 
                    type="checkbox" 
                    [id]="'skill-' + skill" 
                    (change)="toggleSkillFilter(skill)" 
                    [checked]="selectedSkills.includes(skill)" 
                    class="h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded transition-colors duration-300"
                  >
                  <label [for]="'skill-' + skill" class="ml-2 block text-sm text-gray-900 cursor-pointer">
                    {{ skill }}
                  </label>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
    
    <!-- Selected Skills Pills -->
    <div *ngIf="selectedSkills.length > 0" class="flex flex-wrap mt-3">
      <div *ngFor="let skill of selectedSkills" 
          class="filter-pill">
        {{ skill }}
        <button (click)="toggleSkillFilter(skill)" class="ml-1 focus:outline-none">
          <svg class="h-3 w-3 close-icon" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
            <path fill-rule="evenodd" d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z" clip-rule="evenodd" />
          </svg>
        </button>
      </div>
    </div>
  </div>

  <!-- Section défilante pour les consultants -->
  <div class="flex-1 overflow-y-auto p-4 h-full" (scroll)="onScroll($event)" style="min-height: 70vh; height: calc(100vh - 200px); overflow-y: scroll">
    <!-- Loading State -->
    <div *ngIf="isLoading" class="flex justify-center items-center p-10">
      <div class="animate-spin h-10 w-10 border-4 border-blue-500 border-t-transparent rounded-full" role="status">
        <span class="sr-only">Chargement...</span>
      </div>
    </div>
    
    <!-- Error Message -->
    <div *ngIf="errorMessage" class="bg-red-50 border-l-4 border-red-500 text-red-700 p-4 rounded-md shadow-sm mb-4">
      {{ errorMessage }}
    </div>
    
    <!-- Empty State -->
    <div *ngIf="!isLoading && !errorMessage && filteredConsultants.length === 0" class="text-center p-10 bg-gray-50 rounded-lg">
      <p class="text-gray-500">Aucun consultant trouvé</p>
    </div>
    
    <!-- Consultants List -->
    <div *ngIf="!isLoading && filteredConsultants.length > 0" class="space-y-2 mx-auto" #consultantsList>
      <div *ngFor="let consultant of filteredConsultants" class="bg-white border border-gray-200 rounded-md overflow-hidden">
        <!-- Consultant Card Header (Hauteur réduite) -->
        <table class="w-full border-collapse">
          <tr class="transition-all duration-300 hover:bg-gray-50 cursor-pointer" (click)="expandedMessages[consultant.id] && toggleMessageExpansion(consultant.id, $event)">
            <!-- Left Column: Lock/Status and ID -->
            <td class="whitespace-nowrap p-2 border-r border-gray-100 w-16 align-middle">
              <div class="flex flex-col items-center justify-center h-full">
                <!-- Lock icon: green for unlocked profiles, red for locked profiles -->
                <span class="material-icons text-2xl mb-1" 
                      [ngClass]="{
                        'text-green-500': !consultant.locked,
                        'text-red-500': consultant.locked
                      }"
                      [title]="consultant.locked ? 'Profil verrouillé' : 'Profil accessible'">
                  {{ consultant.locked ? 'lock' : 'lock_open' }}
                </span>
                <!-- Consultant ID -->
                <span class="text-xs text-gray-400 text-center">#{{ consultant.id }}</span>
              </div>
            </td>
            
            <!-- Middle Column: Role, Experience bars, Skills, Location -->
            <td class="p-2 pl-4 align-top">
              <!-- Role with availability indicator (plus compact) -->
              <div class="font-medium text-base mb-0.5 flex items-center">
                <!-- Availability circle -->
                <div class="w-2.5 h-2.5 rounded-full mr-1.5"
                     [ngClass]="{
                       'bg-green-500': consultant.availability === 0,
                       'bg-yellow-500': consultant.availability === 1,
                       'bg-red-500': consultant.availability === 2
                     }">
                </div>
                {{ consultant.role }}
              </div>
              
              <!-- Experience level and Skills on the same line (plus compact) -->
              <div class="flex items-center mb-0.5">
                <!-- Experience level / Seniority bars (vertical like WiFi signal) -->
                <div class="flex space-x-0.5 items-end h-3.5 mr-2">
                  <div *ngFor="let i of [1, 2, 3]" 
                      class="w-1 rounded-sm"
                      [ngClass]="{
                        'bg-blue-600': i <= getSeniorityBars(consultant.experience), 
                        'bg-blue-200': i > getSeniorityBars(consultant.experience),
                        'h-1': i === 1,
                        'h-2': i === 2,
                        'h-3.5': i === 3
                      }">
                  </div>
                </div>
                
                <!-- Skills badges (plus compact) -->
                <div class="flex flex-wrap">
                  <span *ngFor="let skill of consultant.skills.slice(0, 3)" class="skill-badge text-xs py-0 px-1.5 mb-0.5">
                    {{ skill }}
                  </span>
                  <span *ngIf="consultant.skills.length > 3" class="text-xs text-gray-500 flex items-center ml-1">
                    +{{ consultant.skills.length - 3 }}
                  </span>
                </div>
              </div>
              
              <!-- Locations (multiples, séparés par des virgules) -->
              <div class="text-xs text-gray-600 flex items-center">
                <svg xmlns="http://www.w3.org/2000/svg" class="h-3.5 w-3.5 mr-0.5 flex-shrink-0" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z" />
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 11a3 3 0 11-6 0 3 3 0 016 0z" />
                </svg>
                <span class="flex flex-wrap">
                  <!-- Afficher chaque lieu avec une petite marge -->
                  <ng-container *ngFor="let location of consultant.location.split(','); let last = last">
                    <span class="location-badge">{{ location.trim() }}</span>
                    <span *ngIf="!last" class="mx-1">•</span>
                  </ng-container>
                </span>
              </div>
            </td>
            
            <!-- Right Column: Menu -->
            <td class="py-2 pr-4 align-top w-24 text-right">
              
              <!-- Desktop Action Buttons (always visible on lg and up) -->
              <div class="hidden lg:flex lg:space-x-2 mb-2">
                <!-- LinkedIn button (always visible, grayed out if not available) -->
                <button (click)="consultant.linkedinValidated && openLinkedIn(consultant.linkedinUrl)"
                        class="action-button linkedin-button transition-all duration-300 focus:outline-none shadow-sm hover:shadow"
                        [class.opacity-40]="!consultant.linkedinValidated"
                        [class.cursor-not-allowed]="!consultant.linkedinValidated"
                        title="{{ consultant.linkedinValidated ? 'Voir profil LinkedIn' : 'Profil LinkedIn non disponible' }}">
                  <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4" viewBox="0 0 24 24" fill="currentColor">
                    <path d="M19 0h-14c-2.761 0-5 2.239-5 5v14c0 2.761 2.239 5 5 5h14c2.762 0 5-2.239 5-5v-14c0-2.761-2.238-5-5-5zm-11 19h-3v-11h3v11zm-1.5-12.268c-.966 0-1.75-.79-1.75-1.764s.784-1.764 1.75-1.764 1.75.79 1.75 1.764-.783 1.764-1.75 1.764zm13.5 12.268h-3v-5.604c0-3.368-4-3.113-4 0v5.604h-3v-11h3v1.765c1.396-2.586 7-2.777 7 2.476v6.759z"/>
                  </svg>
                </button>
                
                <!-- Phone button (always visible, grayed out if not available) -->
                <button (click)="consultant.phoneValidated && showPhone(consultant.phone)"
                        class="action-button phone-button transition-all duration-300 focus:outline-none shadow-sm hover:shadow"
                        [class.opacity-40]="!consultant.phoneValidated"
                        [class.cursor-not-allowed]="!consultant.phoneValidated"
                        title="{{ consultant.phoneValidated ? 'Appeler le consultant' : 'Numéro de téléphone non disponible' }}">
                  <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 5a2 2 0 012-2h3.28a1 1 0 01.948.684l1.498 4.493a1 1 0 01-.502 1.21l-2.257 1.13a11.042 11.042 0 005.516 5.516l1.13-2.257a1 1 0 011.21-.502l4.493 1.498a1 1 0 01.684.949V19a2 2 0 01-2 2h-1C9.716 21 3 14.284 3 6V5z" />
                  </svg>
                </button>
                
                <!-- Email button (always visible, grayed out if not available) -->
                <button (click)="consultant.emailValidated && sendEmail(consultant.email)"
                        class="action-button email-button transition-all duration-300 focus:outline-none shadow-sm hover:shadow"
                        [class.opacity-40]="!consultant.emailValidated"
                        [class.cursor-not-allowed]="!consultant.emailValidated"
                        title="{{ consultant.emailValidated ? 'Envoyer un email' : 'Email non disponible' }}">
                  <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 8l7.89 5.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z" />
                  </svg>
                </button>
              </div>
              
              <!-- Mobile Action Button (visible on lg and down) -->
              <div class="lg:hidden">
                <!-- Mobile menu button (3 dots button) -->
                <button (click)="toggleDropdown(consultant.id, $event)" 
                        class="py-1 px-2 rounded border border-gray-200 bg-gray-100 hover:bg-gray-200 transition-all duration-300 focus:outline-none focus:ring-2 focus:ring-blue-300 shadow-sm">
                  <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 text-gray-600" viewBox="0 0 20 20" fill="currentColor">
                    <path d="M10 6a2 2 0 110-4 2 2 0 010 4zM10 12a2 2 0 110-4 2 2 0 010 4zM10 18a2 2 0 110-4 2 2 0 010 4z" />
                  </svg>
                </button>
                
                <!-- Dropdown menu (for mobile) -->
                <div *ngIf="dropdownOpen[consultant.id]" 
                     class="absolute right-0 w-48 bg-white rounded-md shadow-lg z-50 mt-1 transition-all duration-300"
                     [attr.data-consultant-id]="consultant.id">
                  <div class="py-1">
                    <!-- LinkedIn option -->
                    <a href="javascript:void(0)" 
                      (click)="consultant.linkedinValidated && openLinkedIn(consultant.linkedinUrl); $event.stopPropagation()"
                      class="block px-4 py-2 text-sm text-gray-700 hover:bg-blue-50 transition-colors duration-300 flex items-center"
                      [class.opacity-40]="!consultant.linkedinValidated"
                      [class.cursor-not-allowed]="!consultant.linkedinValidated">
                      <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 mr-2 text-blue-500" viewBox="0 0 24 24" fill="currentColor">
                        <path d="M19 0h-14c-2.761 0-5 2.239-5 5v14c0 2.761 2.239 5 5 5h14c2.762 0 5-2.239 5-5v-14c0-2.761-2.238-5-5-5zm-11 19h-3v-11h3v11zm-1.5-12.268c-.966 0-1.75-.79-1.75-1.764s.784-1.764 1.75-1.764 1.75.79 1.75 1.764-.783 1.764-1.75 1.764zm13.5 12.268h-3v-5.604c0-3.368-4-3.113-4 0v5.604h-3v-11h3v1.765c1.396-2.586 7-2.777 7 2.476v6.759z"/>
                      </svg>
                      <span>LinkedIn</span>
                    </a>
                    
                    <!-- Phone option -->
                    <a href="javascript:void(0)" 
                      (click)="consultant.phoneValidated && showPhone(consultant.phone); $event.stopPropagation()"
                      class="block px-4 py-2 text-sm text-gray-700 hover:bg-green-50 transition-colors duration-300 flex items-center"
                      [class.opacity-40]="!consultant.phoneValidated"
                      [class.cursor-not-allowed]="!consultant.phoneValidated">
                      <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 mr-2 text-green-500" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 5a2 2 0 012-2h3.28a1 1 0 01.948.684l1.498 4.493a1 1 0 01-.502 1.21l-2.257 1.13a11.042 11.042 0 005.516 5.516l1.13-2.257a1 1 0 011.21-.502l4.493 1.498a1 1 0 01.684.949V19a2 2 0 01-2 2h-1C9.716 21 3 14.284 3 6V5z" />
                      </svg>
                      <span>Téléphone</span>
                    </a>
                    
                    <!-- Email option -->
                    <a href="javascript:void(0)" 
                      (click)="consultant.emailValidated && sendEmail(consultant.email); $event.stopPropagation()"
                      class="block px-4 py-2 text-sm text-gray-700 hover:bg-red-50 transition-colors duration-300 flex items-center"
                      [class.opacity-40]="!consultant.emailValidated"
                      [class.cursor-not-allowed]="!consultant.emailValidated">
                      <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 mr-2 text-red-500" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 8l7.89 5.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z" />
                      </svg>
                      <span>Email</span>
                    </a>
                  </div>
                </div>
              </div>
              
              <!-- Voir plus/moins - Toggle Expansion button -->
              <button (click)="toggleMessageExpansion(consultant.id, $event)" 
                class="text-xs text-blue-600 hover:text-blue-800 hover:underline focus:outline-none transition-colors duration-300 mt-2 flex items-center ml-auto">
                {{ expandedMessages[consultant.id] ? 'Voir moins' : 'Voir plus' }}
                <svg class="ml-1 h-3 w-3" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"
                     [ngClass]="{'transform rotate-180': expandedMessages[consultant.id]}">
                  <path fill-rule="evenodd" d="M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z" clip-rule="evenodd" />
                </svg>
              </button>
            </td>
          </tr>
        </table>
        
        <!-- Expanded Content - Appears only when expanded is true -->
        <div *ngIf="expandedMessages[consultant.id]" 
             class="p-4 border-t border-gray-100 bg-gray-50 animate-fadeIn">
          
          <!-- Message du consultant -->
          <div class="mb-6" *ngIf="consultant.message">
            <div class="text-sm font-medium text-gray-600 mb-2">Message</div>
            <div class="message-container overflow-hidden relative"
                 [ngClass]="{'max-h-24': isMessageLong(consultant.message) && !expandedMessages[consultant.id + '-message']}">
              <div class="text-gray-700 whitespace-pre-line text-sm" [innerHTML]="formatMessage(consultant.message)"></div>
              <div *ngIf="isMessageLong(consultant.message) && !expandedMessages[consultant.id + '-message']" 
                   class="absolute bottom-0 left-0 right-0 h-12 bg-gradient-to-t from-gray-50 to-transparent">
              </div>
            </div>
            <button *ngIf="isMessageLong(consultant.message)" 
                    (click)="toggleExpandMessage(consultant.id, $event)" 
                    class="text-xs text-blue-600 hover:underline focus:outline-none mt-1 flex items-center">
              {{ expandedMessages[consultant.id + '-message'] ? 'Voir moins' : 'Voir tout le message' }}
              <svg class="ml-1 h-3 w-3" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"
                   [ngClass]="{'transform rotate-180': expandedMessages[consultant.id + '-message']}">
                <path fill-rule="evenodd" d="M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z" clip-rule="evenodd" />
              </svg>
            </button>
          </div>
          
          <!-- Secteurs d'activité (affiché en premier dans la vue détaillée) -->
          <div class="mb-6" *ngIf="consultant.sectors && consultant.sectors.length > 0">
            <div class="text-sm font-medium text-gray-600 mb-2">Secteurs d'activité</div>
            <div class="flex flex-wrap">
              <span *ngFor="let sector of consultant.sectors" class="sector-badge">
                {{ sector }}
              </span>
            </div>
          </div>
          
          <!-- Expertises du consultant (affiché après les secteurs) -->
          <div class="mb-6" *ngIf="consultant.expertises && consultant.expertises.length > 0">
            <div class="text-sm font-medium text-gray-600 mb-2">Expertises</div>
            <div class="flex flex-wrap">
              <span *ngFor="let expertise of consultant.expertises" class="expertise-badge">
                {{ expertise }}
              </span>
            </div>
          </div>
          
          <!-- Expériences professionnelles -->
          <div *ngIf="consultant.experiences && consultant.experiences.length > 0">
            <div class="text-sm font-medium text-gray-600 mb-2">Dernières expériences</div>
            <div class="space-y-3">
              <div *ngFor="let exp of consultant.experiences" class="bg-white p-3 rounded border border-gray-200 relative">
                <div *ngIf="exp.isCurrent" class="absolute right-2 top-2 px-1.5 py-0.5 bg-blue-100 text-blue-800 text-xs font-medium rounded">
                  Actuel
                </div>
                <div class="font-medium text-gray-800">{{ exp.role }}</div>
                <div class="text-gray-500 text-sm">{{ exp.company }}</div>
              </div>
            </div>
          </div>
        </div>
      </div>
      
      <!-- Loading More Indicator -->
      <div *ngIf="isLoadingMore" class="flex justify-center items-center py-4">
        <div class="animate-spin h-6 w-6 border-4 border-blue-500 border-t-transparent rounded-full" role="status">
          <span class="sr-only">Chargement...</span>
        </div>
      </div>
      
      <!-- No More Data -->
      <div *ngIf="!hasMoreData && filteredConsultants.length > 0" class="text-center text-gray-500 py-4">
        Fin des résultats
      </div>
    </div>
  </div>
</div>